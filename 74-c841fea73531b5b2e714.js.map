{"version":3,"sources":["webpack:///./node_modules/terra-doc-template/lib/Placeholder.js","webpack:///./node_modules/terra-doc-template/lib/Placeholder.module.scss?589e","webpack:///./packages/terra-notification-dialog/docs/README.md","webpack:///./packages/terra-notification-dialog/src/NotificationDialog.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/CompleteNotificationDialog.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/CompleteNotificationDialog.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/CompleteNotificationDialogWithLongMessage.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/CompleteNotificationDialogWithLongMessage.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/ContentNotificationDialog.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/ContentNotificationDialog.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/NoVariantNotificationDialog.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/NoVariantNotificationDialog.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/NotificationDialogWithLongText.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/NotificationDialogWithLongText.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/NotificationDialogOnModalManager.js","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/NotificationDialogModalContainer.js","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/NotificationDialogWithFocus.js","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/example-styles.module.scss?738f","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/NotificationDialogOnModalManager.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/RejectFirstNotificationDialog.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/RejectFirstNotificationDialog.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/example/EmphasizedRejectNotificationDialog.js","webpack:///./packages/terra-notification-dialog/src/terra-dev-site/doc/example/EmphasizedRejectNotificationDialog.jsx","webpack:///./packages/terra-notification-dialog/lib/terra-dev-site/doc/notification-dialog/NotificationDialog.1.doc.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_propTypes","_bind","_PlaceholderModule","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","bind","propTypes","variant","oneOf","title","string","Placeholder","_ref","customProps","placeholderClassNames","className","innerClassNames","concat","createElement","defaultProps","_default","module","_interopRequireWildcard","require","_slicedToArray2","_terraButton","_terraNotificationDialog","clickConfirm","console","log","_useState","useState","_useState2","isOpen","setIsOpen","Fragment","NotificationDialogVariants","ALERT","startMessage","acceptAction","text","onClick","rejectAction","buttonOrder","emphasizedAction","SUCCESS","_NotificationDialog","content","endMessage","header","WARNING","_terraModalManager","_NotificationDialogModalContainer","_exampleStylesModule","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_terraDisclosureManager","_NotificationDialogWithFocus","NotificationDialogModalContainer","_React$Component","props","_this","disclose","disclosureManager","preferredType","component","Component","disclosureManagerShape","withDisclosureManager","_terraPopup","_Placeholder","NotificationDialogWithFocus","_useState3","_useState4","isPopupOpen","setIsPopupOpen","dismiss","isArrowDisplayed","onRequestClose","targetRef","document","getElementById","id","_terraDocTemplate","_README","_package","_CompleteNotificationDialog","_CompleteNotificationDialog2","_CompleteNotificationDialogWithLongMessage","_CompleteNotificationDialogWithLongMessage2","_ContentNotificationDialog","_ContentNotificationDialog2","_NoVariantNotificationDialog","_NoVariantNotificationDialog2","_NotificationDialogWithLongText","_NotificationDialogWithLongText2","_NotificationDialogOnModalManager","_NotificationDialogOnModalManager2","_RejectFirstNotificationDialog","_RejectFirstNotificationDialog2","_EmphasizedRejectNotificationDialog","_EmphasizedRejectNotificationDialog2","packageName","name","readme","srcPath","examples","example","propsTables","componentName","componentSrc"],"mappings":"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","file":"74-c841fea73531b5b2e714.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _PlaceholderModule = _interopRequireDefault(require(\"./Placeholder.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar cx = _bind.default.bind(_PlaceholderModule.default);\n\nvar propTypes = {\n  /**\n   * The themed variant of the text and border. Example, use the light variant when against a dark background.\n   */\n  variant: _propTypes.default.oneOf(['light', 'dark']),\n\n  /**\n   * The placeholder text to be displayed.\n   */\n  title: _propTypes.default.string\n};\nvar defaultProps = {\n  variant: 'dark',\n  title: ''\n};\n\nvar Placeholder = function Placeholder(_ref) {\n  var variant = _ref.variant,\n      title = _ref.title,\n      customProps = _objectWithoutProperties(_ref, [\"variant\", \"title\"]);\n\n  var placeholderClassNames = cx(['placeholder', customProps.className]);\n  var innerClassNames = cx(['inner', \"is-\".concat(variant)]);\n  return _react.default.createElement(\"div\", _extends({}, customProps, {\n    className: placeholderClassNames\n  }), _react.default.createElement(\"div\", {\n    className: innerClassNames\n  }, _react.default.createElement(\"h2\", null, title)));\n};\n\nPlaceholder.propTypes = propTypes;\nPlaceholder.defaultProps = defaultProps;\nvar _default = Placeholder;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Placeholder-module__placeholder___37I0I\",\"inner\":\"Placeholder-module__inner___2DX7N\",\"is-light\":\"Placeholder-module__is-light___3__YD\",\"is-dark\":\"Placeholder-module__is-dark___9wQwQ\"};","export default \"# Terra NotificationDialog\\n\\n`terra-notification-dialog` is a notification dialog component built over the `terra-abstract-modal`. It has the highest z-index of 9001. It is a common component to be used for confirmation/acceptance criteria style dialogs.\\n<br />**Note:** Use at least one of `acceptAction`, `rejectAction`, `primaryAction` or `secondaryAction` props for proper functioning of the `Notification Dialog` and avoid getting a warning.\\n`primaryAction` and `secondaryAction` are **deprecated** and will be removed in the next MVB.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-notification-dialog`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n| react-intl | ^2.8.0 |\\n\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Component Features\\n\\n\\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\\n * [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n * [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport AbstractModal from 'terra-abstract-modal';\\nimport FocusTrap from 'focus-trap-react';\\nimport * as KeyCode from 'keycode-js';\\nimport Button, { ButtonVariants } from 'terra-button';\\nimport classNames from 'classnames/bind';\\nimport { FormattedMessage } from 'react-intl';\\nimport styles from './NotificationDialog.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst variants = {\\n  ALERT: 'alert',\\n  ERROR: 'error',\\n  WARNING: 'warning',\\n  INFO: 'info',\\n  SUCCESS: 'success',\\n  CUSTOM: 'custom',\\n};\\n\\nconst propTypes = {\\n  /**\\n   * Header of the notification-dialog.\\n   */\\n  header: PropTypes.string,\\n  /**\\n   * Title of the notification-dialog.\\n   */\\n  title: PropTypes.string,\\n  /**\\n   * **Deprecated**, Message of the notification-dialog. Resolves to `startMessage`.\\n   */\\n  message: PropTypes.string,\\n  /**\\n   * Message to be displayed at the start of the notification dialog body.\\n   */\\n  startMessage: PropTypes.string,\\n  /**\\n   * Message to be displayed at the end of the notification dialog body.\\n   */\\n  endMessage: PropTypes.string,\\n  /**\\n   *  Non-plain text content to be inserted after `startMessage` and/or before `endMessage`\\n   */\\n  content: PropTypes.node,\\n  /**\\n   * **Deprecated**, The Action of the primary button. Resolves to `acceptAction`\\n   */\\n  primaryAction: PropTypes.shape({\\n    text: PropTypes.string,\\n    onClick: PropTypes.func,\\n  }),\\n  /**\\n   * The Action of the accept button.\\n   */\\n  acceptAction: PropTypes.shape({\\n    text: PropTypes.string,\\n    onClick: PropTypes.func,\\n  }),\\n  /**\\n   * **Deprecated**, The Action of the secondary button. Resolves to `rejectAction`.\\n   */\\n  secondaryAction: PropTypes.shape({\\n    text: PropTypes.string,\\n    onClick: PropTypes.func,\\n  }),\\n  /**\\n   * The Action of the reject button.\\n   */\\n  rejectAction: PropTypes.shape({\\n    text: PropTypes.string,\\n    onClick: PropTypes.func,\\n  }),\\n  /**\\n   * The variant of notification to be rendered.\\n   * Use one of `alert`, `error`, `warning`, `info`, `success`, `custom`.\\n   */\\n  variant: PropTypes.oneOf([\\n    variants.ALERT,\\n    variants.ERROR,\\n    variants.WARNING,\\n    variants.INFO,\\n    variants.SUCCESS,\\n    variants.CUSTOM,\\n  ]),\\n  /**\\n   * The icon to be used for a notification of type custom. This will not be used for any other notification types.\\n   */\\n  customIcon: PropTypes.element,\\n  /**\\n   * Toggle to show notification-dialog or not.\\n   */\\n  isOpen: PropTypes.bool.isRequired,\\n  /**\\n   * Determines the order of notification action buttons.\\n   * Use one of `acceptFirst`, `rejectFirst`.\\n   */\\n  buttonOrder: PropTypes.oneOf([\\n    'acceptFirst',\\n    'rejectFirst',\\n  ]),\\n  /**\\n   * Determines whether acceptAction, rejectAction or neither is emphasizedAction\\n   * Use one of `none`, `accept` or `reject`.\\n   */\\n  emphasizedAction: PropTypes.oneOf([\\n    'none',\\n    'accept',\\n    'reject',\\n  ]),\\n};\\n\\nconst defaultProps = {\\n  title: null,\\n  startMessage: null,\\n  endMessage: null,\\n  content: null,\\n  variant: variants.CUSTOM,\\n  buttonOrder: 'acceptFirst',\\n  emphasizedAction: 'none',\\n};\\n\\nconst actionSection = (acceptAction, rejectAction, buttonOrder, emphasizedAction) => {\\n  let acceptButton = null;\\n  let rejectButton = null;\\n  if (!acceptAction && !rejectAction) {\\n    return null;\\n  }\\n  if (acceptAction) {\\n    acceptButton = (emphasizedAction === 'accept')\\n      ? <Button text={acceptAction.text} variant={ButtonVariants.EMPHASIS} onClick={acceptAction.onClick} />\\n      : <Button text={acceptAction.text} onClick={acceptAction.onClick} />;\\n  }\\n  if (rejectAction) {\\n    rejectButton = (emphasizedAction === 'reject')\\n      ? <Button text={rejectAction.text} variant={ButtonVariants.EMPHASIS} onClick={rejectAction.onClick} />\\n      : <Button text={rejectAction.text} onClick={rejectAction.onClick} />;\\n  }\\n\\n  if (buttonOrder === 'rejectFirst') {\\n    return (\\n      <div className={cx('actions')}>\\n        {rejectButton}\\n        {acceptButton}\\n      </div>\\n    );\\n  }\\n\\n  return (\\n    <div className={cx('actions')}>\\n      {acceptButton}\\n      {rejectButton}\\n    </div>\\n  );\\n};\\n\\nconst getIcon = (variant, customIcon = null) => {\\n  switch (variant) {\\n    case variants.ALERT:\\n      return (<span className={cx(['icon', 'alert'])} />);\\n    case variants.ERROR:\\n      return (<span className={cx(['icon', 'error'])} />);\\n    case variants.WARNING:\\n      return (<span className={cx(['icon', 'warning'])} />);\\n    case variants.INFO:\\n      return (<span className={cx(['icon', 'info'])} />);\\n    case variants.SUCCESS:\\n      return (<span className={cx(['icon', 'success'])} />);\\n    case variants.CUSTOM:\\n      return customIcon;\\n    default:\\n      return null;\\n  }\\n};\\n\\nclass NotificationDialog extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.handleKeydown = this.handleKeydown.bind(this);\\n    this.escapeKey = KeyCode.KEY_ESCAPE;\\n  }\\n\\n  componentDidMount() {\\n    document.addEventListener('keydown', this.handleKeydown);\\n  }\\n\\n  componentWillUnmount() {\\n    document.removeEventListener('keydown', this.handleKeydown);\\n  }\\n\\n  handleKeydown(e) {\\n    const notificationDialog = document.querySelector('[data-terra-notification-dialog]');\\n\\n    if (e.keyCode === this.escapeKey) {\\n      if (notificationDialog) {\\n        if (e.target === notificationDialog || notificationDialog.contains(e.target)) {\\n          e.stopImmediatePropagation();\\n        }\\n      }\\n    }\\n  }\\n\\n  render() {\\n    if (!this.props.isOpen) {\\n      return null;\\n    }\\n\\n    const {\\n      header,\\n      title,\\n      startMessage,\\n      endMessage,\\n      content,\\n      acceptAction,\\n      rejectAction,\\n      variant,\\n      customIcon,\\n      isOpen,\\n      buttonOrder,\\n      emphasizedAction,\\n      primaryAction,\\n      secondaryAction,\\n      message,\\n      ...customProps\\n    } = this.props;\\n    if (process.env.NODE_ENV !== 'production' && acceptAction === undefined && primaryAction === undefined && rejectAction === undefined && secondaryAction === undefined) {\\n      // eslint-disable-next-line no-console\\n      console.warn('At least one of `acceptAction`,`primaryAction`,`rejectAction`,`secondaryAction` props must be provided for Notification dialog');\\n    }\\n\\n    const defaultHeader = variant === variants.CUSTOM ? '' : <FormattedMessage id={`Terra.notification.dialog.${variant}`} />;\\n    const notificationDialogClassNames = cx('notification-dialog', customProps.className);\\n\\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\\n    return (\\n      <AbstractModal\\n        ariaLabel=\\\"Notification Dialog\\\"\\n        aria-labelledby=\\\"notification-dialog-header\\\"\\n        aria-describedby={title ? 'notification-dialog-title' : 'notification-dialog-header'}\\n        role=\\\"alertdialog\\\"\\n        classNameModal={notificationDialogClassNames}\\n        isOpen={this.props.isOpen}\\n        onRequestClose={() => {}}\\n        closeOnEsc={false}\\n        closeOnOutsideClick={false}\\n        zIndex=\\\"9000\\\"\\n        data-terra-notification-dialog\\n      >\\n        <FocusTrap focusTrapOptions={{ returnFocusOnDeactivate: true, clickOutsideDeactivates: false, escapeDeactivates: false }}>\\n          <div className={cx('notification-dialog-inner-wrapper')}>\\n            <div className={cx('notification-dialog-container')} tabIndex=\\\"0\\\">\\n              <div id=\\\"notification-dialog-header\\\" className={cx('header-body')}>{header || defaultHeader}</div>\\n              <div className={cx('notification-dialog-body')}>\\n                {variant\\n                  && <div className={cx('icon-container')}>{getIcon(variant, customIcon)}</div>}\\n                <div className={cx('text-wrapper')}>\\n                  {title\\n                    && <div id=\\\"notification-dialog-title\\\" className={cx('title')}>{title}</div>}\\n                  {(startMessage || message)\\n                    && <div className={cx('message')}>{(startMessage || message)}</div>}\\n                  {content\\n                    && <div>{content}</div>}\\n                  {endMessage\\n                    && <div className={cx('message')}>{endMessage}</div>}\\n                </div>\\n              </div>\\n              <div className={cx('footer-body')}>\\n                {actionSection(\\n                  acceptAction || primaryAction,\\n                  rejectAction || secondaryAction,\\n                  buttonOrder,\\n                  emphasizedAction,\\n                )}\\n              </div>\\n            </div>\\n          </div>\\n        </FocusTrap>\\n      </AbstractModal>\\n    );\\n    /* eslint-enable jsx-a11y/no-noninteractive-tabindex */\\n  }\\n}\\n\\nNotificationDialog.propTypes = propTypes;\\nNotificationDialog.defaultProps = defaultProps;\\n\\nexport { variants as NotificationDialogVariants };\\nexport default NotificationDialog;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraNotificationDialog = _interopRequireWildcard(require(\"terra-notification-dialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar CompleteNotificationDialog = function CompleteNotificationDialog() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_terraNotificationDialog.default, {\n    variant: _terraNotificationDialog.NotificationDialogVariants.ALERT,\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: \"The Main Instruction is text used to provide more detail or define terminology. Don\\u2019t repeat the title verbatim.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"accept\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger NotificationDialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = CompleteNotificationDialog;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog, { NotificationDialogVariants } from 'terra-notification-dialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst CompleteNotificationDialog = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        variant={NotificationDialogVariants.ALERT}\\n        isOpen={isOpen}\\n        title=\\\"Make sure that the title relates directly to the choices.\\\"\\n        startMessage=\\\"The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim.\\\"\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"acceptFirst\\\"\\n        emphasizedAction=\\\"accept\\\"\\n      />\\n      <Button text=\\\"Trigger NotificationDialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default CompleteNotificationDialog;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraNotificationDialog = _interopRequireWildcard(require(\"terra-notification-dialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar CompleteNotificationDialogWithLongMessage = function CompleteNotificationDialogWithLongMessage() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_terraNotificationDialog.default, {\n    variant: _terraNotificationDialog.NotificationDialogVariants.SUCCESS,\n    isOpen: isOpen,\n    title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ornare odio quis turpis viverra, volutpat laoreet magna porta.\",\n    startMessage: \"Quisque egestas ullamcorper velit vitae volutpat. Quisque vestibulum nulla nunc, eget pharetra massa semper ac. In sit amet felis tincidunt, laoreet tortor nec, tempus ipsum.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"accept\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger Notification Dialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = CompleteNotificationDialogWithLongMessage;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog, { NotificationDialogVariants } from 'terra-notification-dialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst CompleteNotificationDialogWithLongMessage = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        variant={NotificationDialogVariants.SUCCESS}\\n        isOpen={isOpen}\\n        title=\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ornare odio quis turpis viverra, volutpat laoreet magna porta.\\\"\\n        startMessage=\\\"Quisque egestas ullamcorper velit vitae volutpat. Quisque vestibulum nulla nunc, eget pharetra massa semper ac. In sit amet felis tincidunt, laoreet tortor nec, tempus ipsum.\\\"\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"acceptFirst\\\"\\n        emphasizedAction=\\\"accept\\\"\\n      />\\n      <Button text=\\\"Trigger Notification Dialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default CompleteNotificationDialogWithLongMessage;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _NotificationDialog = _interopRequireWildcard(require(\"../../../NotificationDialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar ContentNotificationDialog = function ContentNotificationDialog() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_NotificationDialog.default, {\n    variant: _NotificationDialog.NotificationDialogVariants.ALERT,\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: \"The Start Message is text used to provide more detail or define terminology at the beginning of the dialog body. Don\\u2019t repeat the title verbatim.\",\n    content: _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, \"Item 1\"), _react.default.createElement(\"li\", null, \"Item 2\")),\n    endMessage: \"The End Message is text used to provide more detail or define terminology at the end of the dialog body. Don\\u2019t repeat the title verbatim.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"accept\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger NotificationDialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = ContentNotificationDialog;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog, { NotificationDialogVariants } from '../../../NotificationDialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst ContentNotificationDialog = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        variant={NotificationDialogVariants.ALERT}\\n        isOpen={isOpen}\\n        title=\\\"Make sure that the title relates directly to the choices.\\\"\\n        startMessage=\\\"The Start Message is text used to provide more detail or define terminology at the beginning of the dialog body. Don’t repeat the title verbatim.\\\"\\n        content={(\\n          <ul>\\n            <li>Item 1</li>\\n            <li>Item 2</li>\\n          </ul>\\n        )}\\n        endMessage=\\\"The End Message is text used to provide more detail or define terminology at the end of the dialog body. Don’t repeat the title verbatim.\\\"\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"acceptFirst\\\"\\n        emphasizedAction=\\\"accept\\\"\\n      />\\n      <Button text=\\\"Trigger NotificationDialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default ContentNotificationDialog;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraNotificationDialog = _interopRequireDefault(require(\"terra-notification-dialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar NoVariantNotificationDialog = function NoVariantNotificationDialog() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_terraNotificationDialog.default, {\n    header: \"No Variant for this dialog\",\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: \"The Main Instruction is text used to provide more detail or define terminology. Don\\u2019t repeat the title verbatim.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"accept\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger Notification Dialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = NoVariantNotificationDialog;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog from 'terra-notification-dialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst NoVariantNotificationDialog = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        header=\\\"No Variant for this dialog\\\"\\n        isOpen={isOpen}\\n        title=\\\"Make sure that the title relates directly to the choices.\\\"\\n        startMessage=\\\"The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim.\\\"\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"acceptFirst\\\"\\n        emphasizedAction=\\\"accept\\\"\\n      />\\n      <Button text=\\\"Trigger Notification Dialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default NoVariantNotificationDialog;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraNotificationDialog = _interopRequireWildcard(require(\"terra-notification-dialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar NotificationDialogWithLongText = function NotificationDialogWithLongText() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  var message = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\";\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_terraNotificationDialog.default, {\n    variant: _terraNotificationDialog.NotificationDialogVariants.WARNING,\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: message,\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"accept\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger NotificationDialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = NotificationDialogWithLongText;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog, { NotificationDialogVariants } from 'terra-notification-dialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst NotificationDialogWithLongText = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  const message = `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n    Maecenas molestie in lorem vel facilisis. Quisque ac enim nec lectus malesuada faucibus.\\n    Integer congue feugiat ultricies.\\n    Nunc non mauris sed tellus cursus vestibulum nec quis ipsum.\\n    Vivamus ornare magna justo, et volutpat tortor congue ut. Nulla facilisi.\\n    Cras in venenatis turpis. Nullam id odio justo. Etiam vehicula lectus vel purus consectetur cursus id sit amet diam.\\n    Donec facilisis dui non orci hendrerit pharetra. Suspendisse blandit dictum turpis, in consectetur ipsum hendrerit eget.\\n    Nam vehicula, arcu vitae egestas porttitor,\\n    turpis nisi pulvinar neque, ut lacinia urna purus sit amet elit.`;\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        variant={NotificationDialogVariants.WARNING}\\n        isOpen={isOpen}\\n        title=\\\"Make sure that the title relates directly to the choices.\\\"\\n        startMessage={message}\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"acceptFirst\\\"\\n        emphasizedAction=\\\"accept\\\"\\n      />\\n      <Button text=\\\"Trigger NotificationDialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default NotificationDialogWithLongText;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraModalManager = _interopRequireDefault(require(\"terra-modal-manager\"));\n\nvar _NotificationDialogModalContainer = _interopRequireDefault(require(\"./NotificationDialogModalContainer\"));\n\nvar _exampleStylesModule = _interopRequireDefault(require(\"./example-styles.module.scss\"));\n\nvar cx = _bind.default.bind(_exampleStylesModule.default);\n\nvar NotificationDialogOnModalManager = function NotificationDialogOnModalManager() {\n  return _react.default.createElement(\"div\", {\n    className: cx('example-wrapper')\n  }, _react.default.createElement(_terraModalManager.default, null, _react.default.createElement(\"p\", null, \" Notification Dialog has the highest z-index of 9001. Click the button to trigger Notification Dialog \"), _react.default.createElement(_NotificationDialogModalContainer.default, null)));\n};\n\nvar _default = NotificationDialogOnModalManager;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraDisclosureManager = require(\"terra-disclosure-manager\");\n\nvar _NotificationDialogWithFocus = _interopRequireDefault(require(\"./NotificationDialogWithFocus\"));\n\nvar NotificationDialogModalContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(NotificationDialogModalContainer, _React$Component);\n\n  function NotificationDialogModalContainer(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, NotificationDialogModalContainer);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NotificationDialogModalContainer).call(this, props));\n    _this.disclose = _this.disclose.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(NotificationDialogModalContainer, [{\n    key: \"disclose\",\n    value: function disclose() {\n      this.props.disclosureManager.disclose({\n        preferredType: 'modal',\n        content: {\n          key: 'DemoContainer',\n          component: _react.default.createElement(_NotificationDialogWithFocus.default, null)\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_terraButton.default, {\n        text: \"Disclose\",\n        onClick: this.disclose\n      }));\n    }\n  }]);\n  return NotificationDialogModalContainer;\n}(_react.default.Component);\n\nNotificationDialogModalContainer.propTypes = {\n  disclosureManager: _terraDisclosureManager.disclosureManagerShape\n};\n\nvar _default = (0, _terraDisclosureManager.withDisclosureManager)(NotificationDialogModalContainer);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraDisclosureManager = require(\"terra-disclosure-manager\");\n\nvar _terraPopup = _interopRequireDefault(require(\"terra-popup\"));\n\nvar _Placeholder = _interopRequireDefault(require(\"terra-doc-template/lib/Placeholder\"));\n\nvar _terraNotificationDialog = _interopRequireWildcard(require(\"terra-notification-dialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar propTypes = {\n  disclosureManager: _terraDisclosureManager.disclosureManagerShape\n};\n\nvar NotificationDialogWithFocus = function NotificationDialogWithFocus(props) {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isPopupOpen = _useState4[0],\n      setIsPopupOpen = _useState4[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  var handlePopupButtonClick = function handlePopupButtonClick() {\n    setIsPopupOpen(true);\n  };\n\n  var handlePopupRequestClose = function handlePopupRequestClose() {\n    setIsPopupOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_terraNotificationDialog.default, {\n    variant: _terraNotificationDialog.NotificationDialogVariants.ALERT,\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: \"The Main Instruction is text used to provide more detail or define terminology. Don\\u2019t repeat the title verbatim.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"accept\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger NotificationDialog\",\n    onClick: handleOpenModal\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Dismiss\",\n    onClick: props.disclosureManager.dismiss\n  }), _react.default.createElement(_terraPopup.default, {\n    isArrowDisplayed: true,\n    isOpen: isPopupOpen,\n    onRequestClose: handlePopupRequestClose,\n    targetRef: function targetRef() {\n      return document.getElementById('popup-in-modal');\n    }\n  }, _react.default.createElement(_Placeholder.default, {\n    title: \"Popup Content\"\n  })), _react.default.createElement(_terraButton.default, {\n    id: \"popup-in-modal\",\n    text: \"Popup In Modal\",\n    onClick: handlePopupButtonClick\n  }));\n};\n\nNotificationDialogWithFocus.propTypes = propTypes;\n\nvar _default = (0, _terraDisclosureManager.withDisclosureManager)(NotificationDialogWithFocus);\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example-wrapper\":\"example-styles-module__example-wrapper___3U7yv\",\"content-wrapper\":\"example-styles-module__content-wrapper___3oKq3\"};","export default \"import React from 'react';\\nimport classNames from 'classnames/bind';\\nimport ModalManager from 'terra-modal-manager';\\nimport NotificationDialogModalContainer from './NotificationDialogModalContainer';\\n\\nimport styles from './example-styles.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst NotificationDialogOnModalManager = () => (\\n  <div className={cx('example-wrapper')}>\\n    <ModalManager>\\n      <p> Notification Dialog has the highest z-index of 9001. Click the button to trigger Notification Dialog </p>\\n      <NotificationDialogModalContainer />\\n    </ModalManager>\\n  </div>\\n);\\n\\nexport default NotificationDialogOnModalManager;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _NotificationDialog = _interopRequireWildcard(require(\"../../../NotificationDialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar RejectFirstNotificationDialog = function RejectFirstNotificationDialog() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_NotificationDialog.default, {\n    variant: _NotificationDialog.NotificationDialogVariants.ALERT,\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: \"The Main Instruction is text used to provide more detail or define terminology. Don\\u2019t repeat the title verbatim.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"rejectFirst\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger NotificationDialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = RejectFirstNotificationDialog;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog, { NotificationDialogVariants } from '../../../NotificationDialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst RejectFirstNotificationDialog = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        variant={NotificationDialogVariants.ALERT}\\n        isOpen={isOpen}\\n        title=\\\"Make sure that the title relates directly to the choices.\\\"\\n        startMessage=\\\"The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim.\\\"\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"rejectFirst\\\"\\n      />\\n      <Button text=\\\"Trigger NotificationDialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default RejectFirstNotificationDialog;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _NotificationDialog = _interopRequireWildcard(require(\"../../../NotificationDialog\"));\n\nvar clickConfirm = function clickConfirm() {\n  console.log('You clicked confirm'); // eslint-disable-line no-console\n};\n\nvar ReversedActionNotificationDialog = function ReversedActionNotificationDialog() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_NotificationDialog.default, {\n    variant: _NotificationDialog.NotificationDialogVariants.ALERT,\n    isOpen: isOpen,\n    title: \"Make sure that the title relates directly to the choices.\",\n    startMessage: \"The Main Instruction is text used to provide more detail or define terminology. Don\\u2019t repeat the title verbatim.\",\n    acceptAction: {\n      text: 'Confirm',\n      onClick: clickConfirm\n    },\n    rejectAction: {\n      text: 'Close',\n      onClick: handleCloseModal\n    },\n    buttonOrder: \"acceptFirst\",\n    emphasizedAction: \"reject\"\n  }), _react.default.createElement(_terraButton.default, {\n    text: \"Trigger NotificationDialog\",\n    onClick: handleOpenModal\n  }));\n};\n\nvar _default = ReversedActionNotificationDialog;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\nimport Button from 'terra-button';\\nimport NotificationDialog, { NotificationDialogVariants } from '../../../NotificationDialog';\\n\\nconst clickConfirm = () => {\\n  console.log('You clicked confirm'); // eslint-disable-line no-console\\n};\\n\\nconst ReversedActionNotificationDialog = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const handleOpenModal = () => {\\n    setIsOpen(true);\\n  };\\n\\n  const handleCloseModal = () => {\\n    setIsOpen(false);\\n  };\\n\\n  return (\\n    <>\\n      <NotificationDialog\\n        variant={NotificationDialogVariants.ALERT}\\n        isOpen={isOpen}\\n        title=\\\"Make sure that the title relates directly to the choices.\\\"\\n        startMessage=\\\"The Main Instruction is text used to provide more detail or define terminology. Don’t repeat the title verbatim.\\\"\\n        acceptAction={{\\n          text: 'Confirm',\\n          onClick: clickConfirm,\\n        }}\\n        rejectAction={{\\n          text: 'Close',\\n          onClick: handleCloseModal,\\n        }}\\n        buttonOrder=\\\"acceptFirst\\\"\\n        emphasizedAction=\\\"reject\\\"\\n      />\\n      <Button text=\\\"Trigger NotificationDialog\\\" onClick={handleOpenModal} />\\n    </>\\n  );\\n};\\n\\nexport default ReversedActionNotificationDialog;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _NotificationDialog = _interopRequireDefault(require(\"!raw-loader!../../../../src/NotificationDialog\"));\n\nvar _CompleteNotificationDialog = _interopRequireDefault(require(\"../example/CompleteNotificationDialog\"));\n\nvar _CompleteNotificationDialog2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/CompleteNotificationDialog.jsx\"));\n\nvar _CompleteNotificationDialogWithLongMessage = _interopRequireDefault(require(\"../example/CompleteNotificationDialogWithLongMessage\"));\n\nvar _CompleteNotificationDialogWithLongMessage2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/CompleteNotificationDialogWithLongMessage.jsx\"));\n\nvar _ContentNotificationDialog = _interopRequireDefault(require(\"../example/ContentNotificationDialog\"));\n\nvar _ContentNotificationDialog2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/ContentNotificationDialog.jsx\"));\n\nvar _NoVariantNotificationDialog = _interopRequireDefault(require(\"../example/NoVariantNotificationDialog\"));\n\nvar _NoVariantNotificationDialog2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/NoVariantNotificationDialog.jsx\"));\n\nvar _NotificationDialogWithLongText = _interopRequireDefault(require(\"../example/NotificationDialogWithLongText\"));\n\nvar _NotificationDialogWithLongText2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/NotificationDialogWithLongText.jsx\"));\n\nvar _NotificationDialogOnModalManager = _interopRequireDefault(require(\"../example/NotificationDialogOnModalManager\"));\n\nvar _NotificationDialogOnModalManager2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/NotificationDialogOnModalManager.jsx\"));\n\nvar _RejectFirstNotificationDialog = _interopRequireDefault(require(\"../example/RejectFirstNotificationDialog\"));\n\nvar _RejectFirstNotificationDialog2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/RejectFirstNotificationDialog.jsx\"));\n\nvar _EmphasizedRejectNotificationDialog = _interopRequireDefault(require(\"../example/EmphasizedRejectNotificationDialog\"));\n\nvar _EmphasizedRejectNotificationDialog2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/EmphasizedRejectNotificationDialog.jsx\"));\n\n// Component Source\n// Example Files\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Complete Notification Dialog',\n      example: _react.default.createElement(_CompleteNotificationDialog.default, null),\n      source: _CompleteNotificationDialog2.default\n    }, {\n      title: 'Complete Notification Dialog With Long Message',\n      example: _react.default.createElement(_CompleteNotificationDialogWithLongMessage.default, null),\n      source: _CompleteNotificationDialogWithLongMessage2.default\n    }, {\n      title: 'No Variant Notification Dialog',\n      example: _react.default.createElement(_NoVariantNotificationDialog.default, null),\n      source: _NoVariantNotificationDialog2.default\n    }, {\n      title: 'Notification Dialog With Long Text',\n      example: _react.default.createElement(_NotificationDialogWithLongText.default, null),\n      source: _NotificationDialogWithLongText2.default\n    }, {\n      title: 'Notification Dialog On Modal Manager',\n      example: _react.default.createElement(_NotificationDialogOnModalManager.default, null),\n      source: _NotificationDialogOnModalManager2.default\n    }, {\n      title: 'Notification Dialog with Content',\n      example: _react.default.createElement(_ContentNotificationDialog.default, null),\n      source: _ContentNotificationDialog2.default\n    }, {\n      title: 'Notification Dialog with Reject action first',\n      example: _react.default.createElement(_RejectFirstNotificationDialog.default, null),\n      source: _RejectFirstNotificationDialog2.default\n    }, {\n      title: 'Notification Dialog with Reject Action emphasized',\n      example: _react.default.createElement(_EmphasizedRejectNotificationDialog.default, null),\n      source: _EmphasizedRejectNotificationDialog2.default\n    }],\n    propsTables: [{\n      componentName: 'Notification Dialog',\n      componentSrc: _NotificationDialog.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}