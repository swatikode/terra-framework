(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{1005:function(e,n){},1142:function(e,n,t){e.exports={"content-wrapper1":"NavigationLayoutDocCommon-module__content-wrapper1___1bse3","content-wrapper2":"NavigationLayoutDocCommon-module__content-wrapper2___12ehg",button:"NavigationLayoutDocCommon-module__button___1iqAy","content-wrapper":"NavigationLayoutDocCommon-module__content-wrapper___uRBAC","example-menu":"NavigationLayoutDocCommon-module__example-menu___24ahl"}},2083:function(e){e.exports=JSON.parse('{"name":"terra-navigation-layout","main":"lib/NavigationLayout.js","version":"5.18.0","description":"The Terra Navigation Layout package includes a variety of components and utilities to provide configuration-based, react-router-driven navigation to Terra applications.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","Framework","terra-navigation-layout","NavigationLayout","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-router-dom":"^5.0.0"},"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","terra-layout":"^4.18.0"},"devDependencies":{"react-router-dom":"^5.0.0","terra-button":"^3.3.0","terra-doc-template":"^2.2.0","terra-icon":"^3.1.0","terra-markdown":"^2.6.0","terra-toggle-button":"^3.0.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},2084:function(e,n,t){"use strict";t.r(n),n.default="# Terra Navigation Layout\n\nThe `NavigationLayout` is a configuration-based, `react-router`-driven layout. It wraps the `Layout` component provided by `terra-layout` and injects routing-based components into its various component regions. If navigation is not desired, the `Layout` component can and should be used directly. However, the NavigationLayout does support very basic navigation workflows with minimal configuration required.\n\nThe `NavigationLayout` is able to successfully render with just the config object defining its structure. However, custom components can be provided directly to the NavigationLayout for the `header`, `menu`, and `content` props. Those custom components will be provided with any relevant configuration data to allow them to render things as they see fit.\n\n## Prerequisites\n* The `NavigationLayout` must have a `Router` (or other high-level router like `BrowserRouter`, `HashRouter`, or `MemoryRouter`) as a component ancestor.\n* A configuration prop must be supplied to the `NavigationLayout` that defines the desired routing setup. The `NavigationLayout` treats this prop as immutable for caching and performance reasons. If a configuration object is changing due to a state change in a higher component, a new object instance must be provided for those changes to take effect.\n\n## Configuration API\n\nThe configuration object is structured like the below example. A couple key takeaways:\n* The `header`, `menu`, and `content` regions have a separate configurations but share the same configuration APIs. These can be omitted if routing is unnecessary for an individual section.\n* The configuration can be responsive and supports specifying components on a per-route, per-breakpoint basis.\n* Routes can be provided in any order; however, the NavigationLayout will sort them as necessary to ensure the expected render order is maintained.\n* Proptypes for the various pieces of the configuration object are exported by the `configurationPropTypes.js` file.\n\n```js\n{\n  /**\n   * The menu, content, and header configurations are keyed at the root of the object.\n   */\n  menu: {\n    /**\n     * At this level of the configuration, we're defining each path to which we want to match.\n     * The key here doesn't have to be a path (the actual path used is specified within), but generally it\n     * makes sense to use the path as the key as they need to be unique anyway.\n     */\n    '/': {\n      path: '/',\n      component: {\n        /**\n         * Here we get access to the configuration's responsive API.\n         * The keys at this level must be either `default` or one of our supported breakpoints (`tiny`, `small`, `medium`, `large`, `huge`)\n         * If you specify a component for `default`, it will be rendered for any size that isn't overridden.\n         * If you do not specify a `default` component, any size that has no defined component will simply not be rendered.\n         */\n        default: {\n          componentClass: MenuExample,\n          props: {\n            menuTitle: 'Title From Config' // The `props` are applied to the given componentClass when instantiated.\n          },\n        },\n        /**\n         * We're going to provide a separate configuration for the `huge` breakpoint that has a different prop value.\n         * While we're just changing the prop value, we could add props, remove them, or provide a different componentClass entirely.\n         */\n        huge: {\n          componentClass: MenuExample,\n          props: {\n            menuTitle: 'Long Title From Config Because There Is Lots of Space (Cause The Size Is Huge)'\n          },\n        },\n      },\n    },\n    '/page1': {\n      /*\n       * Now a component for the route /page1 is being defined. This path is a descendent of the route above (/), so when the\n       * page location matches '/page1', the Page1Menu will be rendered instead of the MenuExample.\n       */\n      path: '/page1',\n      component: {\n        default: {\n          componentClass: Page1Menu,\n        },\n      },\n    },\n    '/page1/subpage1': {\n      /*\n       * Similarly, this route is a descendent of /page1 and will take precedent over it when the location matches. The order of these configurations\n       * are not important, as the NavigationLayout will determine the parent-child relationships and render things accordingly.\n       */\n      path: '/page1/subpage1',\n      component: {\n        default: {\n          componentClass: Subpage1Menu,\n        },\n      },\n    }\n  },\n  content: {...}, // The configuration shape for the content and header sections is the same as that of the menu section.\n  header: {...},\n}\n```\n\n## RoutingStackDelegate\n\nAll components rendered within the `NavigationLayout` receive a `routingStackDelegate` prop. This prop contains the following attributes:\n* `location` - The location used to render the component. This can be used to build NavLinks or other components that might desire the current location.\n* `parentPaths` - An array of String paths that were determined to preceed the current path in the configuration. For example, if the routes `/pages`, `/pages/:id`, and `/pages/:id/summary` were defined by the config, the component rendered for the path `/pages/123/summary` would receive a parentPaths value of [`/pages`, `/pages/123`]. This set of paths could be used to build breadcrumbs or simple navigation functionality.\n\nComponents within the `menu` region get a few extra features, however. To help enable nested menu scenarios, the `routingStackDelegate` will also include the following:\n* `show` - A function that will cause the NavigationLayout to display the menu for the given path. If the given path does not match the current history location, the new location is pushed onto the history stack. If the given path already matches the current history location, only the RoutingStack's internal location is updated; this insures that the history is not being manipulated unnecessarily when navigating down the stack of menu components.\n* `showParent` - A function that will cause the NavigationLayout to display the immediate parent path (if one is present).\n* `showRoot` - A function that will cause the NavigationLayout to display the first (or root) parent path (if one is present, and the number of parent paths is more than 1).\n\nIt is important to note that `showParent`/`showRoot` change the location used by the menu components, but they do not change the location of the overall page. For example, if the page location is `/pages/99/summary`, and the menu component calls `showParent`, the menu component for `/pages/99` will be rendered, but the content component for `/pages/99/summary` will still be rendered, and the browser URL will still be `[base-url]/pages/99/summary`.\n\nAfter calling these navigation functions, the `location` provided in the `routingStackDelegate` match the parent path specified. If the true page location is still necessary, the `withRouter` HOC provided by `react-router` can be utilized as needed. And if this functionality is not desired at all for a given application, these props can be safely ignored.\n\n## refuseRoutingStackNavigation\n\nThe configuration API supports an additional key for each component specification called `refuseRoutingStackNavigation` that will prevent the associated component from appearing in parentPaths and will disallow navigation to it through the `showParent`/`showRoot`. A component with `refuseRoutingStackNavigation` set to `true` will only be presented if the current location matches its route. This is an advanced option that can be used to better control menu-based workflows.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-navigation-layout`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| react-router-dom | ^5.0.0 |\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n"},2085:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport Layout from 'terra-layout';\n\nimport NavigationLayoutContent from './NavigationLayoutContent';\nimport { navigationLayoutConfigPropType, supportedComponentBreakpoints } from './configurationPropTypes';\nimport { reduceRouteConfig, validateMatchExists } from './routingUtils';\n\nconst getBreakpointSize = (queryWidth) => {\n  const width = queryWidth || window.innerWidth;\n  const breakpoints = {\n    tiny: 544,\n    small: 768,\n    medium: 992,\n    large: 1216,\n    huge: 1440,\n  };\n\n  const {\n    small, medium, large, huge,\n  } = breakpoints;\n\n  if (width >= huge) {\n    return 'huge';\n  } if (width >= large) {\n    return 'large';\n  } if (width >= medium) {\n    return 'medium';\n  } if (width >= small) {\n    return 'small';\n  }\n  return 'tiny';\n};\n\nconst propTypes = {\n  /**\n   * The component to render within the NavigationLayout's `header` region. If provided, this component\n   * must appropriately handle the NavigationLayout-supplied props: `routeConfig`, and `navigationLayoutSize`.\n   */\n  header: PropTypes.element,\n  /**\n   * The component to render within the NavigationLayout's `menu` region. If provided, this component\n   * must appropriately handle the NavigationLayout-supplied props: `routeConfig`, and `navigationLayoutSize`.\n   */\n  menu: PropTypes.element,\n  /**\n   * The component to render within the NavigationLayout's `content` region. If provided, this component\n   * must appropriately handle the NavigationLayout-supplied props: `routeConfig`, and `navigationLayoutSize`.\n   */\n  children: PropTypes.element,\n  /**\n   * The String to display in the NavigationLayout's hover-target menu disclosure.\n   */\n  menuText: PropTypes.string,\n  /**\n   * The configuration Object that will be used to generate the specified regions of the NavigationLayout.\n   * Note: The config prop is treated as an immutable object to prevent unnecessary processing and improve performance.\n   * If the configuration is changed after the first render, a new configuration object instance must be provided.\n   */\n  config: navigationLayoutConfigPropType.isRequired,\n  /**\n   * The index path of the consuming application's routing structure. If provided, the NavigationLayout will\n   * ensure Redirects are present where necessary.\n   */\n  indexPath: PropTypes.string,\n  /**\n   * The location as provided by the `withRouter()` HOC.\n   */\n  location: PropTypes.object.isRequired,\n  /**\n   * The match as provided by the `withRouter()` HOC.\n   */\n  match: PropTypes.object.isRequired,\n  /**\n   * The history as provided by the `withRouter()` HOC.\n   */\n  history: PropTypes.object.isRequired,\n  /**\n   * The staticContext as provided by the `withRouter()` HOC. This will only be provided when\n   * within a StaticRouter.\n   */\n  staticContext: PropTypes.object,\n};\n\n/**\n * The NavigationLayout utilizes the Terra Layout and a configuration object to generate a routing-based application layout.\n */\nclass NavigationLayout extends React.Component {\n  static processRouteConfig(config) {\n    const processedRoutes = {};\n\n    supportedComponentBreakpoints.forEach((size) => {\n      const processedRoutesForSize = {};\n      processedRoutesForSize.header = reduceRouteConfig(config.header, size);\n      processedRoutesForSize.menu = reduceRouteConfig(config.menu, size);\n      processedRoutesForSize.content = reduceRouteConfig(config.content, size);\n\n      processedRoutes[size] = processedRoutesForSize;\n    });\n\n    return processedRoutes;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.updateSize = this.updateSize.bind(this);\n\n    this.state = {\n      size: getBreakpointSize(),\n      processedRoutes: NavigationLayout.processRouteConfig(props.config),\n      prevPropsConfig: props.config,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.config !== prevState.prevPropsConfig) {\n      return {\n        processedRoutes: NavigationLayout.processRouteConfig(nextProps.config),\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateSize);\n  }\n\n  updateSize() {\n    const newSize = getBreakpointSize();\n\n    if (this.state.size !== newSize) {\n      this.setState({\n        size: newSize,\n      });\n    }\n  }\n\n  decorateElement(element, routes) {\n    if (!element) {\n      return null;\n    }\n\n    const { size } = this.state;\n\n    return React.cloneElement(element, {\n      navigationLayoutRoutes: routes,\n      navigationLayoutSize: size,\n    });\n  }\n\n  render() {\n    const {\n      header,\n      children,\n      menu,\n      menuText,\n      config,\n      indexPath,\n      location,\n      match,\n      history,\n      staticContext,\n      ...customProps\n    } = this.props; // eslint-disable-line no-unused-vars\n\n    const {\n      size,\n      processedRoutes,\n    } = this.state;\n\n    const headerComponent = header || <NavigationLayoutContent />;\n\n    const contentComponent = children || <NavigationLayoutContent redirectPath={indexPath} />;\n\n    let menuComponent = menu;\n    // The routes for the menu are examined for evidence of a valid component for the current location.\n    // If one is not found, we do not provide one to the Layout to ensure that the Layout renders appropriately (without a menu present).\n    if (!menuComponent && validateMatchExists(location.pathname, processedRoutes[size].menu)) {\n      menuComponent = <NavigationLayoutContent stackNavigationIsEnabled />;\n    }\n\n    return (\n      <Layout\n        {...customProps}\n        header={this.decorateElement(headerComponent, processedRoutes[size].header)}\n        menu={this.decorateElement(menuComponent, processedRoutes[size].menu)}\n        menuText={menuText}\n      >\n        {this.decorateElement(contentComponent, processedRoutes[size].content)}\n      </Layout>\n    );\n  }\n}\n\nNavigationLayout.propTypes = propTypes;\n\nexport default withRouter(NavigationLayout);\n"},2086:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=t(82),u=a(t(1357)),s=a(t(2087)),l=a(t(1084)),p=a(t(2092)),c=a(t(2093)),d=a(t(2095)),m=a(t(2096)),g=a(t(2097)),f=a(t(2098)),h=a(t(2099)),y=a(t(2100)),v=a(t(1142)),b=i.default.bind(v.default),w={header:{"/":{path:"/",component:{default:{componentClass:c.default}}}},menu:{"/":{path:"/",component:{tiny:{componentClass:d.default},small:{componentClass:d.default}}},"/page1":{path:"/page1",component:{default:{componentClass:h.default}}},"/page2":{path:"/page2",component:{default:{componentClass:y.default}}}},content:{"/page1":{path:"/page1",component:{default:{componentClass:m.default}}},"/page2":{path:"/page2",component:{default:{componentClass:g.default}}},"/page3":{path:"/page3",component:{default:{componentClass:f.default}}}}},C=(0,r.withRouter)((function(e){var n=e.location;return o.default.createElement("div",null,o.default.createElement("h3",null,"Features"),o.default.createElement("ul",null,o.default.createElement("li",null,"Contains 3 different primary routes: /page1, /page2, and /page3"),o.default.createElement("ul",null,o.default.createElement("li",null,"/page1 - Has content, inner routes, and an associated menu"),o.default.createElement("li",null,"/page2 - Has content and an associated menu"),o.default.createElement("li",null,"/page3 - Has only content")),o.default.createElement("li",null,"Has a Header that is rendered for all routes (matched to `/` path)"),o.default.createElement("li",null,"Header provides links to other primary routes for breakpoints `medium`, `large`, and `huge`"),o.default.createElement("li",null,"When size is `tiny` or `small`, a new Menu is presented to expose links to primary routes (the Header hides its links at these sizes)"),o.default.createElement("li",null,"Page menus expose navigation to parent menus"),o.default.createElement("li",null,"Page content and menus expose Layout-provided functionality")),o.default.createElement("h3",null,"Configuration"),o.default.createElement(s.default,{isAnimated:!0,closedButtonText:"View"},o.default.createElement(u.default,{id:"navigation-layout-standard-config",src:p.default})),o.default.createElement("h3",null,"Browser Location: ".concat(n.pathname)),o.default.createElement(l.default,{config:w,menuText:"Example Menu",className:b("example-menu")}))})),P=function(){return o.default.createElement(r.MemoryRouter,{initialEntries:["/page1","/page1/item1","/page1/item2","/page2","page3"],initialIndex:0},o.default.createElement(C,null))};n.default=P},2092:function(e,n,t){"use strict";t.r(n),n.default="```js\nimport HeaderExample from './HeaderExample';\nimport MenuExample from './MenuExample';\nimport Page1Content from './Page1Content';\nimport Page2Content from './Page2Content';\nimport Page3Content from './Page3Content';\nimport Page1Menu from './Page1Menu';\nimport Page2Menu from './Page2Menu';\n\nconst config = {\n  header: {\n    '/': {\n      path: '/',\n      component: {\n        default: {\n          componentClass: HeaderExample,\n        },\n      },\n    },\n  },\n  menu: {\n    '/': {\n      path: '/',\n      component: {\n        tiny: {\n          componentClass: MenuExample,\n        },\n        small: {\n          componentClass: MenuExample,\n        },\n      },\n    },\n    '/page1': {\n      path: '/page1',\n      component: {\n        default: {\n          componentClass: Page1Menu,\n        },\n      },\n    },\n    '/page2': {\n      path: '/page2',\n      component: {\n        default: {\n          componentClass: Page2Menu,\n        },\n      },\n    },\n  },\n  content: {\n    '/page1': {\n      path: '/page1',\n      component: {\n        default: {\n          componentClass: Page1Content,\n        },\n      },\n    },\n    '/page2': {\n      path: '/page2',\n      component: {\n        default: {\n          componentClass: Page2Content,\n        },\n      },\n    },\n    '/page3': {\n      path: '/page3',\n      component: {\n        default: {\n          componentClass: Page3Content,\n        },\n      },\n    },\n  },\n};\n```"},2093:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=t(82),s=a(t(2094)),l=i.default.bind(s.default),p={layoutConfig:r.default.shape({})},c=function(e){var n=e.layoutConfig;return o.default.createElement("div",{className:l("content-wrapper1")},o.default.createElement("div",{className:l("content-wrapper2")},o.default.createElement("h2",null,"Header"),n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:l("button")},"Toggle Menu"),"small"!==n.size&&"tiny"!==n.size&&o.default.createElement(u.Link,{to:"/page1",className:l("link")},"Page 1"),"small"!==n.size&&"tiny"!==n.size&&o.default.createElement(u.Link,{to:"/page2",className:l("link")},"Page 2"),"small"!==n.size&&"tiny"!==n.size&&o.default.createElement(u.Link,{to:"/page3",className:l("link")},"Page 3")))};c.propTypes=p;var d=(0,u.withRouter)(c);n.default=d},2094:function(e,n,t){e.exports={"content-wrapper1":"HeaderExample-module__content-wrapper1___3GhTR","content-wrapper2":"HeaderExample-module__content-wrapper2___3r3mX",link:"HeaderExample-module__link___282L8",button:"HeaderExample-module__button___2xKol"}},2095:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=t(82),s=a(t(1142)),l=i.default.bind(s.default),p=function(e){var n=e.layoutConfig;return o.default.createElement("div",{className:l("content-wrapper1")},o.default.createElement("div",{className:l("content-wrapper2")},n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:l("button")},"Toggle Menu"),n.togglePin&&!n.menuIsPinned&&o.default.createElement("button",{type:"button",onClick:n.togglePin,className:l("button")},"Pin"),n.togglePin&&n.menuIsPinned&&o.default.createElement("button",{type:"button",onClick:n.togglePin,className:l("button")},"Unpin"),o.default.createElement("h2",null,"Menu"),o.default.createElement("br",null),o.default.createElement(u.Link,{to:"/page1"},"Page 1"),o.default.createElement("br",null),o.default.createElement(u.Link,{to:"/page2"},"Page 2"),o.default.createElement("br",null),o.default.createElement(u.Link,{to:"/page3"},"Page 3")))};p.propTypes={layoutConfig:r.default.shape({toggleMenu:r.default.func,togglePin:r.default.func,menuIsPinned:r.default.bool})};var c=(0,u.withRouter)(p);n.default=c},2096:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=t(82),s=a(t(1142)),l=i.default.bind(s.default),p=function(e){var n=e.layoutConfig;return o.default.createElement("div",{className:l("content-wrapper1")},o.default.createElement("div",{className:l("content-wrapper2")},o.default.createElement("h2",null,"Page 1 Content"),n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:l("button")},"Toggle Menu"),o.default.createElement(u.Route,{path:"/page1/item1",render:function(){return o.default.createElement("h2",null,"Item 1")}}),o.default.createElement(u.Route,{path:"/page1/item2",render:function(){return o.default.createElement("h2",null,"Item 2")}})))};p.propTypes={layoutConfig:r.default.shape({toggleMenu:r.default.func})};var c=p;n.default=c},2097:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=a(t(1142)),s=i.default.bind(u.default),l=function(e){var n=e.layoutConfig;return o.default.createElement("div",{className:s("content-wrapper1")},o.default.createElement("div",{className:s("content-wrapper2")},o.default.createElement("h2",null,"Page 2 Content"),n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:s("button")},"Toggle Menu")))};l.propTypes={layoutConfig:r.default.shape({toggleMenu:r.default.func})};var p=l;n.default=p},2098:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=a(t(1142)),s=i.default.bind(u.default),l=function(e){var n=e.layoutConfig;return o.default.createElement("div",{className:s("content-wrapper1")},o.default.createElement("div",{className:s("content-wrapper2")},o.default.createElement("h2",null,"Page 3 Content"),n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:s("button")},"Toggle Menu")))};l.propTypes={layoutConfig:r.default.shape({toggleMenu:r.default.func})};var p=l;n.default=p},2099:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=t(82),s=a(t(1029)),l=a(t(1142)),p=i.default.bind(l.default),c=function(e){var n=e.layoutConfig,t=e.routingStackDelegate;return o.default.createElement("div",{className:p("content-wrapper1")},o.default.createElement("div",{className:p("content-wrapper2")},t&&t.showParent&&o.default.createElement("button",{type:"button",onClick:t.showParent,className:p("button")},"Go Back"),n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:p("button")},"Toggle Menu"),n.togglePin&&!n.menuIsPinned&&o.default.createElement("button",{type:"button",onClick:n.togglePin,className:p("button")},"Pin"),n.togglePin&&n.menuIsPinned&&o.default.createElement("button",{type:"button",onClick:n.togglePin,className:p("button")},"Unpin"),o.default.createElement("h2",null,"Page 1 Menu"),o.default.createElement("br",null),o.default.createElement(u.Link,{to:"/page1/item1"},"Item 1"),o.default.createElement("br",null),o.default.createElement(u.Link,{to:"/page1/item2"},"Item 2")))};c.propTypes={layoutConfig:r.default.shape({toggleMenu:r.default.func,togglePin:r.default.func,menuIsPinned:r.default.bool}),routingStackDelegate:s.default.propType};var d=(0,u.withRouter)(c);n.default=d},2100:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(4)),r=a(t(2)),u=t(82),s=a(t(1029)),l=a(t(1142)),p=i.default.bind(l.default),c=function(e){var n=e.layoutConfig,t=e.routingStackDelegate;return o.default.createElement("div",{className:p("content-wrapper1")},o.default.createElement("div",{className:p("content-wrapper2")},t&&t.showParent&&o.default.createElement("button",{type:"button",onClick:t.showParent,className:p("button")},"Go Back"),n.toggleMenu&&o.default.createElement("button",{type:"button",onClick:n.toggleMenu,className:p("button")},"Toggle Menu"),n.togglePin&&!n.menuIsPinned&&o.default.createElement("button",{type:"button",onClick:n.togglePin,className:p("button")},"Pin"),n.togglePin&&n.menuIsPinned&&o.default.createElement("button",{type:"button",onClick:n.togglePin,className:p("button")},"Unpin"),o.default.createElement("h2",null,"Page 2 Menu")))};c.propTypes={layoutConfig:r.default.shape({toggleMenu:r.default.func,togglePin:r.default.func,menuIsPinned:r.default.bool}),routingStackDelegate:s.default.propType};var d=(0,u.withRouter)(c);n.default=d},2101:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport classNames from 'classnames/bind';\nimport { MemoryRouter, withRouter } from 'react-router-dom';\nimport Markdown from 'terra-markdown';\nimport ToggleButton from 'terra-toggle-button';\nimport NavigationLayout from 'terra-navigation-layout';\nimport ConfigReadMe from 'terra-navigation-layout/lib/terra-dev-site/doc/example/NavigationLayoutStandardConfig.md';\nimport HeaderExample from 'terra-navigation-layout/lib/terra-dev-site/doc/example/HeaderExample';\nimport MenuExample from 'terra-navigation-layout/lib/terra-dev-site/doc/example/MenuExample';\nimport Page1Content from 'terra-navigation-layout/lib/terra-dev-site/doc/example/Page1Content';\nimport Page2Content from 'terra-navigation-layout/lib/terra-dev-site/doc/example/Page2Content';\nimport Page3Content from 'terra-navigation-layout/lib/terra-dev-site/doc/example/Page3Content';\nimport Page1Menu from 'terra-navigation-layout/lib/terra-dev-site/doc/example/Page1Menu';\nimport Page2Menu from 'terra-navigation-layout/lib/terra-dev-site/doc/example/Page2Menu';\nimport styles from './NavigationLayoutDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\n// If changing config, ensure NavigationLayoutStandardConfig.md is updated to match\nconst config = {\n  header: {\n    '/': {\n      path: '/',\n      component: {\n        default: {\n          componentClass: HeaderExample,\n        },\n      },\n    },\n  },\n  menu: {\n    '/': {\n      path: '/',\n      component: {\n        tiny: {\n          componentClass: MenuExample,\n        },\n        small: {\n          componentClass: MenuExample,\n        },\n      },\n    },\n    '/page1': {\n      path: '/page1',\n      component: {\n        default: {\n          componentClass: Page1Menu,\n        },\n      },\n    },\n    '/page2': {\n      path: '/page2',\n      component: {\n        default: {\n          componentClass: Page2Menu,\n        },\n      },\n    },\n  },\n  content: {\n    '/page1': {\n      path: '/page1',\n      component: {\n        default: {\n          componentClass: Page1Content,\n        },\n      },\n    },\n    '/page2': {\n      path: '/page2',\n      component: {\n        default: {\n          componentClass: Page2Content,\n        },\n      },\n    },\n    '/page3': {\n      path: '/page3',\n      component: {\n        default: {\n          componentClass: Page3Content,\n        },\n      },\n    },\n  },\n};\n\nconst NavigationLayoutStandard = withRouter(({ location }) => (\n  <div>\n    <h3>Features</h3>\n    <ul>\n      <li>Contains 3 different primary routes: /page1, /page2, and /page3</li>\n      <ul>\n        <li>/page1 - Has content, inner routes, and an associated menu</li>\n        <li>/page2 - Has content and an associated menu</li>\n        <li>/page3 - Has only content</li>\n      </ul>\n      <li>Has a Header that is rendered for all routes (matched to `/` path)</li>\n      <li>Header provides links to other primary routes for breakpoints `medium`, `large`, and `huge`</li>\n      <li>When size is `tiny` or `small`, a new Menu is presented to expose links to primary routes (the Header hides its links at these sizes)</li>\n      <li>Page menus expose navigation to parent menus</li>\n      <li>Page content and menus expose Layout-provided functionality</li>\n    </ul>\n    <h3>Configuration</h3>\n    <ToggleButton isAnimated closedButtonText=\"View\">\n      <Markdown id=\"navigation-layout-standard-config\" src={ConfigReadMe} />\n    </ToggleButton>\n    <h3>{`Browser Location: ${location.pathname}`}</h3>\n    <NavigationLayout\n      config={config}\n      menuText=\"Example Menu\"\n      className={cx('example-menu')}\n    />\n  </div>\n));\n\nconst NavigationLayoutRouter = () => (\n  <MemoryRouter\n    initialEntries={['/page1', '/page1/item1', '/page1/item2', '/page2', 'page3']}\n    initialIndex={0}\n  >\n    <NavigationLayoutStandard />\n  </MemoryRouter>\n);\n\nexport default NavigationLayoutRouter;\n"},2366:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t(0)),i=a(t(1004)),r=t(2083),u=a(t(2084)),s=a(t(2085)),l=a(t(2086)),p=a(t(2101)),c=function(){return o.default.createElement(i.default,{packageName:r.name,readme:u.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(r.name),examples:[{title:"Example Navigation Layout",example:o.default.createElement(l.default,null),source:p.default}],propsTables:[{componentSrc:s.default}]})};n.default=c}}]);
//# sourceMappingURL=88-6aaab6eb531b3a9ccdf3.js.map