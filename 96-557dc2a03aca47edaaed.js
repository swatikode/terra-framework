(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{1005:function(t,e){},1080:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=h(n(0)),o=h(n(2)),s=h(n(357)),i=h(n(359)),r=h(n(365));function h(t){return t&&t.__esModule?t:{default:t}}function l(){return(l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}function c(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},s=Object.keys(t);for(a=0;a<s.length;a++)n=s[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(a=0;a<s.length;a++)n=s[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var d={inputId:o.default.string.isRequired,label:o.default.node.isRequired,defaultValue:o.default.oneOfType([o.default.string,o.default.number]),disabled:o.default.bool,error:o.default.node,errorIcon:o.default.element,help:o.default.node,hideRequired:o.default.bool,inputAttrs:o.default.object,isIncomplete:o.default.bool,isInline:o.default.bool,isInvalid:o.default.bool,isLabelHidden:o.default.bool,labelAttrs:o.default.object,maxWidth:o.default.string,onChange:o.default.func,placeholder:o.default.string,refCallback:o.default.func,required:o.default.bool,showOptional:o.default.bool,type:o.default.string,value:o.default.oneOfType([o.default.string,o.default.number])},u={defaultValue:void 0,disabled:!1,error:null,errorIcon:a.default.createElement(i.default,null),help:null,hideRequired:!1,inputAttrs:{},isIncomplete:!1,isInline:!1,isInvalid:!1,isLabelHidden:!1,labelAttrs:{},onChange:void 0,placeholder:void 0,maxWidth:void 0,refCallback:void 0,required:!1,showOptional:!1,type:void 0,value:void 0},m=function(t){var e,n=t.defaultValue,o=t.disabled,i=t.error,h=t.errorIcon,d=t.help,u=t.hideRequired,m=t.inputAttrs,p=t.inputId,f=t.isIncomplete,g=t.isInline,v=t.isInvalid,b=t.isLabelHidden,C=t.label,k=t.labelAttrs,A=t.maxWidth,T=t.onChange,N=t.placeholder,R=t.refCallback,y=t.required,E=t.showOptional,O=t.type,w=t.value,B=c(t,["defaultValue","disabled","error","errorIcon","help","hideRequired","inputAttrs","inputId","isIncomplete","isInline","isInvalid","isLabelHidden","label","labelAttrs","maxWidth","onChange","placeholder","refCallback","required","showOptional","type","value"]);d&&i&&v?e="".concat(p,"-error ").concat(p,"-help"):(d&&(e="".concat(p,"-help")),i&&v&&(e="".concat(p,"-error")));var I=O||m.type;return a.default.createElement(s.default,l({label:C,labelAttrs:k,error:i,errorIcon:h,help:d,hideRequired:u,required:y,showOptional:E,isInvalid:v,isInline:g,isLabelHidden:b,htmlFor:p,maxWidth:A},B),a.default.createElement(r.default,l({},m,{disabled:m.disabled||o,id:p,isIncomplete:f,type:I,onChange:T,placeholder:N||m.placeholder,value:w,defaultValue:n,refCallback:R,"aria-describedby":e})))};m.propTypes=d,m.defaultProps=u;var p=m;e.default=p},1403:function(t,e,n){t.exports={"content-wrapper":"HookshotDocCommon-module__content-wrapper___IYzGo","bounded-parent-node-wrapper":"HookshotDocCommon-module__bounded-parent-node-wrapper___1MXNy","coords-parent-node-wrapper":"HookshotDocCommon-module__coords-parent-node-wrapper___3yaxP","select-wrapper":"HookshotDocCommon-module__select-wrapper___1RMuw","heading-wrapper":"HookshotDocCommon-module__heading-wrapper___1DuOz",label:"HookshotDocCommon-module__label___1qWH6","input-wrapper":"HookshotDocCommon-module__input-wrapper___1OVxx","button-wrapper":"HookshotDocCommon-module__button-wrapper___2r9ch","custom-button":"HookshotDocCommon-module__custom-button___1QwCG"}},2017:function(t){t.exports=JSON.parse('{"name":"terra-hookshot","main":"lib/Hookshot.js","version":"5.22.0","description":"The Terra Hookshot component positions portaled content according to target and content attachments, ensuring they stay visually connected.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","terra-hookshot","Hookshot","Position","Attached","Portal","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"dependencies":{"classlist-polyfill":"^1.2.0","classnames":"^2.2.5","keycode-js":"^2.0.1","prop-types":"^15.5.8","react-onclickoutside":"^6.7.1","react-portal":"^4.1.2","resize-observer-polyfill":"^1.4.1"},"devDependencies":{"terra-button":"^3.3.0","terra-doc-template":"^2.2.0","terra-form-input":"^2.3.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},2018:function(t,e,n){"use strict";n.r(e),e.default='# Terra Hookshot\n\nThe Terra Hookshot component positions content according to a targeted attachment, ensuring they stay connected.\n\nHookshot is currently utilized in the following component(s):<br />\n[Popup][1]\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-hookshot`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Usage\n\n```jsx\nimport React from \'react\';\nimport Hookshot from \'terra-hookshot\';\n\n\nrender() {\n  return (\n    <Hookshot\n      attachmentBehavior="auto"\n      attachmentMargin={10}\n      boundingRef={boundingRef}\n      content=<Hookshot.Content />\n      contentAttachment="bottom center"\n      contentOffset={{ horizontal: 10, vertical: 10 }}\n      isEnabled\n      isOpen={this.state.isOpen}\n      onPosition={this.handleOnPosition}\n      targetRef={this.getTargetRef}\n      targetAttachment="top center"\n    />\n  );\n}\n\n```\n\n[1]: https://github.com/cerner/terra-framework/tree/master/packages/terra-popup/docs\n'},2019:function(t,e,n){"use strict";n.r(e),e.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Portal } from 'react-portal';\nimport HookshotContent from './HookshotContent';\nimport HookshotUtils from './_HookshotUtils';\n\nconst VERTICAL_ATTACHMENTS = [\n  'top',\n  'middle',\n  'bottom',\n];\n\nconst HORIZONTAL_ATTACHMENTS = [\n  'start',\n  'center',\n  'end',\n];\n\nconst ATTACHMENT_BEHAVIORS = [\n  'auto',\n  'flip',\n  'push',\n  'none',\n];\n\nconst propTypes = {\n  /**\n   * How the content should be positioned when the primary attachment is not available.\n   * Valid values:\n   *  'auto': returns 180 degrees, returns rotate 90 degree, returns rotate -90 degrees, returns primary attachment\n   *  'flip': returns 180 degrees, returns primary attachment\n   *  'push': pushes content to remain within the bounding rect, returns primary attachment\n   *  'none': returns primary attachment\n   */\n  attachmentBehavior: PropTypes.oneOf(ATTACHMENT_BEHAVIORS),\n  /**\n   * Value in px of the margin to place between the target and the content.\n   */\n  attachmentMargin: PropTypes.number,\n  /**\n   * Reference to the bounding container. Defaults to window unless attachment behavior is set to none.\n   */\n  boundingRef: PropTypes.func,\n  /**\n   * The HookshotContent to be attached.\n   */\n  children: PropTypes.element.isRequired,\n  /**\n   * Object containing the vertical and horizontal attachment values for the content.\n   * Valid values: { horizontal: ['start', 'center', 'end'], vertical: ['top', 'middle', 'bottom'] }.\n   */\n  contentAttachment: PropTypes.shape({\n    horizontal: PropTypes.oneOf(HORIZONTAL_ATTACHMENTS),\n    vertical: PropTypes.oneOf(VERTICAL_ATTACHMENTS),\n  }).isRequired,\n  /**\n   * Object containing the vertical and horizontal offset values in px for the content.\n   */\n  contentOffset: PropTypes.shape({\n    horizontal: PropTypes.number,\n    vertical: PropTypes.number,\n  }),\n  /**\n   * Determines whether the content should be actively positioned via hookshot.\n   */\n  isEnabled: PropTypes.bool,\n  /**\n   * Should the content be presented.\n   */\n  isOpen: PropTypes.bool,\n  /**\n   * Callback function when the content has been positioned.\n   */\n  onPosition: PropTypes.func,\n  /**\n   * Client coordinates to serve as the anchor point for the hookshot'd content.\n   */\n  targetCoordinates: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n  /**\n   * Element to serve as the anchor point for the hookshot'd content. (If targetCoordinates are provided, this is ignored.)\n   */\n  targetRef: PropTypes.func,\n  /**\n   * Object containing the vertical and horizontal attachment values for the target.\n   * Valid values: { horizontal: ['start', 'center', 'end'], vertical: ['top', 'middle', 'bottom'] }.\n   * If targetCoordinates are provided { horizontal: 'center', vertical: 'middle' } will be applied.\n   */\n  targetAttachment: PropTypes.shape({\n    horizontal: PropTypes.oneOf(HORIZONTAL_ATTACHMENTS),\n    vertical: PropTypes.oneOf(VERTICAL_ATTACHMENTS),\n  }),\n  /**\n   * Object containing the vertical and horizontal offset values in px for the target.\n   */\n  targetOffset: PropTypes.shape({\n    horizontal: PropTypes.number,\n    vertical: PropTypes.number,\n  }),\n};\n\nconst defaultProps = {\n  attachmentMargin: 0,\n  attachmentBehavior: 'auto',\n  contentOffset: { horizontal: 0, vertical: 0 },\n  isEnabled: false,\n  isOpen: false,\n  targetOffset: { horizontal: 0, vertical: 0 },\n};\n\nclass Hookshot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setContentNode = this.setContentNode.bind(this);\n    this.getNodeRects = this.getNodeRects.bind(this);\n    this.update = this.update.bind(this);\n    this.tick = this.tick.bind(this);\n    this.getBoundingRef = this.getBoundingRef.bind(this);\n    this.getTargetRef = this.getTargetRef.bind(this);\n    this.getValidBoundingRect = this.getValidBoundingRect.bind(this);\n    this.getValidTargetRect = this.getValidTargetRect.bind(this);\n    this.listenersAdded = false;\n    this.lastCall = null;\n    this.lastDuration = null;\n    this.pendingTimeout = null;\n  }\n\n  componentDidMount() {\n    if (this.props.isEnabled && this.props.isOpen) {\n      if (!this.listenersAdded) {\n        this.enableListeners();\n      }\n      this.update();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.isEnabled && this.props.isOpen) {\n      if (!this.listenersAdded) {\n        this.enableListeners();\n      }\n      this.update();\n    } else {\n      this.disableListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  setContentNode(node) {\n    this.contentNode = node;\n  }\n\n  getBoundingRef() {\n    return this.props.boundingRef ? this.props.boundingRef() : undefined;\n  }\n\n  getTargetRef() {\n    return this.props.targetRef ? this.props.targetRef() : undefined;\n  }\n\n  getValidBoundingRect() {\n    if (this.props.attachmentBehavior === 'none') {\n      return undefined;\n    }\n    return HookshotUtils.getBoundingRect(this.getBoundingRef() || 'window');\n  }\n\n  getValidTargetRect() {\n    if (this.props.targetCoordinates) {\n      return HookshotUtils.getRectFromCoords(this.props.targetCoordinates);\n    }\n    return HookshotUtils.getBounds(this.getTargetRef());\n  }\n\n  getNodeRects(resetContentCache) {\n    return {\n      contentRect: resetContentCache ? HookshotUtils.getBounds(this.contentNode) : this.cachedRects.contentRect,\n      targetRect: this.getValidTargetRect(),\n      boundingRect: this.getValidBoundingRect(),\n    };\n  }\n\n  tick(event) {\n    if (this.lastDuration && this.lastDuration > 16) {\n      // Throttle to 60fps, in order to handle safari and mobile performance\n      this.lastDuration = Math.min(this.lastDuration - 16, 100);\n\n      // Just in case this is the last event, remember to position just once more\n      this.pendingTimeout = setTimeout(this.tick, 100);\n      return;\n    }\n\n    if (this.lastCall && (performance.now() - this.lastCall) < 10) {\n      // Some browsers call events a little too frequently, refuse to run more than is reasonable\n      return;\n    }\n\n    if (this.pendingTimeout != null) {\n      clearTimeout(this.pendingTimeout);\n      this.pendingTimeout = null;\n    }\n\n    this.lastCall = performance.now();\n    this.update(event);\n    this.lastDuration = performance.now() - this.lastCall;\n  }\n\n  enableListeners() {\n    const childElement = this.getTargetRef() || this.getBoundingRef();\n    if (!childElement) {\n      return;\n    }\n\n    ['resize', 'scroll', 'touchmove'].forEach(event => window.addEventListener(event, this.tick));\n\n    this.parentListeners = [];\n    const scrollParents = HookshotUtils.getScrollParents(childElement);\n    scrollParents.forEach((parent) => {\n      if (parent !== childElement.ownerDocument) {\n        parent.addEventListener('scroll', this.tick);\n        this.parentListeners.push(parent);\n      }\n    });\n    this.listenersAdded = true;\n  }\n\n  disableListeners() {\n    ['resize', 'scroll', 'touchmove'].forEach(event => window.removeEventListener(event, this.tick));\n\n    if (this.parentListeners) {\n      this.parentListeners.forEach((parent) => {\n        parent.removeEventListener('scroll', this.tick);\n      });\n      this.parentListeners = null;\n    }\n    this.listenersAdded = false;\n  }\n\n  position(event, resetContentCache) {\n    this.cachedRects = this.getNodeRects(resetContentCache);\n    this.content.rect = this.cachedRects.contentRect;\n    this.target.rect = this.cachedRects.targetRect;\n\n    const result = HookshotUtils.positionStyleFromBounds(\n      this.cachedRects.boundingRect,\n      this.content,\n      this.target,\n      this.props.attachmentMargin,\n      this.props.attachmentBehavior,\n    );\n\n    let styleUpdated = false;\n    const newTransform = `translate3d(${result.style.left}, ${result.style.top}, 0px)`;\n    if (this.contentNode.style.transform !== newTransform) {\n      this.contentNode.style.transform = newTransform;\n      styleUpdated = true;\n    }\n    if (this.contentNode.style.opacity !== '1') {\n      this.contentNode.style.opacity = '1';\n      styleUpdated = true;\n    }\n    if (styleUpdated) {\n      this.cachedRects.contentRect = HookshotUtils.getBounds(this.contentNode);\n      result.positions.content.rect = this.cachedRects.contentRect;\n    }\n\n    if (this.props.onPosition) {\n      this.props.onPosition(\n        event,\n        result.positions,\n      );\n    }\n  }\n\n  update(event) {\n    if ((!this.getTargetRef() && !this.props.targetCoordinates) || !this.contentNode) {\n      return;\n    }\n    this.updateHookshot(event);\n  }\n\n  updateHookshot(event) {\n    const resetCache = !event || (event.type !== 'scroll' && event.type !== 'touchmove');\n    this.position(event, resetCache);\n  }\n\n  cloneContent(content) {\n    return React.cloneElement(content, { refCallback: this.wrappedRefCallback(content), disableOnClickOutside: !content.props.onOutsideClick });\n  }\n\n  wrappedRefCallback(content) {\n    const initialRefCallback = content.props.refCallback;\n\n    return (node) => {\n      this.setContentNode(node);\n\n      if (initialRefCallback) {\n        initialRefCallback(node);\n      }\n    };\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      attachmentBehavior,\n      attachmentMargin,\n      boundingRef,\n      children,\n      contentAttachment,\n      contentOffset,\n      isEnabled,\n      isOpen,\n      targetCoordinates,\n      targetRef,\n      targetAttachment,\n      targetOffset,\n      onPosition,\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n    if (!isOpen) {\n      return null;\n    }\n\n    const isRTL = document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl';\n    this.content = {\n      offset: HookshotUtils.getDirectionalOffset(contentOffset, isRTL),\n      attachment: HookshotUtils.getDirectionalAttachment(contentAttachment, isRTL),\n    };\n    this.target = {\n      offset: HookshotUtils.getDirectionalOffset(targetOffset, isRTL),\n    };\n\n    if (targetCoordinates) {\n      this.target.attachment = HookshotUtils.coordinateAttachment;\n    } else if (targetAttachment) {\n      this.target.attachment = HookshotUtils.getDirectionalAttachment(targetAttachment, isRTL);\n    } else {\n      this.target.attachment = HookshotUtils.mirrorAttachment(this.content.attachment);\n    }\n\n    return (\n      <Portal isOpened={isOpen}>\n        {this.cloneContent(children)}\n      </Portal>\n    );\n  }\n}\n\nHookshot.propTypes = propTypes;\nHookshot.defaultProps = defaultProps;\nHookshot.horizontalAttachments = HORIZONTAL_ATTACHMENTS;\nHookshot.verticalAttachments = VERTICAL_ATTACHMENTS;\nHookshot.attachmentBehaviors = ATTACHMENT_BEHAVIORS;\nHookshot.Utils = HookshotUtils;\nHookshot.Content = HookshotContent;\n\nexport default Hookshot;\n"},2020:function(t,e,n){"use strict";n.r(e),e.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport * as KeyCode from 'keycode-js';\nimport onClickOutside from 'react-onclickoutside';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport styles from './HookshotContent.module.scss';\nimport 'classlist-polyfill'; // Full polyfill for browsers with no classList support\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The children to be displayed as content within the content.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The function callback when a child content resize event occurs.\n   */\n  onContentResize: PropTypes.func,\n  /**\n   * The function callback when am escape keydown event occurs.\n   */\n  onEsc: PropTypes.func,\n  /**\n   * The function callback when a click outside event occurs.\n   */\n  onOutsideClick: PropTypes.func,\n  /**\n   * The function callback when a resize event occurs.\n   */\n  onResize: PropTypes.func,\n  /**\n   * The function returning the frame html reference.\n   */\n  refCallback: PropTypes.func,\n};\n\nclass HookshotContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleResize = this.debounce(this.handleResize.bind(this), 100);\n    this.enableEscListener = this.enableEscListener.bind(this);\n    this.disableEscListener = this.disableEscListener.bind(this);\n    this.enableResizeListener = this.enableResizeListener.bind(this);\n    this.disableResizeListener = this.disableResizeListener.bind(this);\n    this.enableContentResizeListener = this.enableContentResizeListener.bind(this);\n    this.disableContentResizeListener = this.disableContentResizeListener.bind(this);\n    this.updateListeners = this.updateListeners.bind(this);\n    this.animationFrameID = null;\n  }\n\n  componentDidMount() {\n    this.updateListeners();\n  }\n\n  componentDidUpdate() {\n    this.updateListeners();\n  }\n\n  componentWillUnmount() {\n    this.disableEscListener();\n    this.disableResizeListener();\n    this.disableContentResizeListener();\n  }\n\n  handleResize(event) {\n    if (this.props.onResize) {\n      this.props.onResize(event);\n    }\n  }\n\n  handleClickOutside(event) {\n    if (this.props.onOutsideClick) {\n      this.props.onOutsideClick(event);\n    }\n  }\n\n  handleKeydown(event) {\n    if (event.keyCode === KeyCode.KEY_ESCAPE) {\n      event.preventDefault();\n      this.props.onEsc(event);\n    }\n  }\n\n  updateListeners() {\n    if (this.props.onEsc) {\n      this.enableEscListener();\n    } else {\n      this.disableEscListener();\n    }\n\n    if (this.props.onResize) {\n      this.enableResizeListener();\n    } else {\n      this.disableResizeListener();\n    }\n\n    if (this.props.onContentResize) {\n      this.enableContentResizeListener();\n    } else {\n      this.disableContentResizeListener();\n    }\n  }\n\n  enableEscListener() {\n    if (!this.escListenerAdded) {\n      document.addEventListener('keydown', this.handleKeydown);\n      this.escListenerAdded = true;\n    }\n  }\n\n  disableEscListener() {\n    if (this.escListenerAdded) {\n      document.removeEventListener('keydown', this.handleKeydown);\n      this.escListenerAdded = false;\n    }\n  }\n\n  enableResizeListener() {\n    if (!this.resizeListenerAdded) {\n      window.addEventListener('resize', this.handleResize);\n      this.resizeListenerAdded = true;\n    }\n  }\n\n  disableResizeListener() {\n    if (this.resizeListenerAdded) {\n      window.removeEventListener('resize', this.handleResize);\n      this.resizeListenerAdded = false;\n    }\n  }\n\n  enableContentResizeListener() {\n    if (!this.contentResizeListenerAdded) {\n      this.resizeObserver = new ResizeObserver((entries) => {\n        this.animationFrameID = window.requestAnimationFrame(() => {\n          this.props.onContentResize(entries[0].contentRect);\n        });\n      });\n      this.resizeObserver.observe(this.contentNode);\n      this.contentResizeListenerAdded = true;\n    }\n  }\n\n  disableContentResizeListener() {\n    if (this.contentResizeListenerAdded) {\n      window.cancelAnimationFrame(this.animationFrameID);\n      this.resizeObserver.disconnect(this.contentNode);\n      this.contentNode = null;\n      this.contentResizeListenerAdded = false;\n    }\n  }\n\n  debounce(fn, delay) {\n    let timer = null;\n    return (...args) => {\n      const context = this;\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        fn.apply(context, args);\n      }, delay);\n    };\n  }\n\n  render() {\n    const {\n      children,\n      onContentResize,\n      onEsc,\n      onOutsideClick,\n      onResize,\n      refCallback,\n      ...customProps\n    } = this.props;\n\n    // Delete the unnecessary props that come from react-onclickoutside.\n    delete customProps.disableOnClickOutside;\n    delete customProps.enableOnClickOutside;\n    delete customProps.eventTypes;\n    delete customProps.excludeScrollbar;\n    delete customProps.outsideClickIgnoreClass;\n    delete customProps.preventDefault;\n    delete customProps.stopPropagation;\n    // Delete the closePortal prop that comes from react-portal.\n    delete customProps.closePortal;\n\n    return (\n      <div\n        {...customProps}\n        className={cx(['content', customProps.className])}\n        ref={(element) => { this.contentNode = element; if (refCallback) { refCallback(element); } }}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nHookshotContent.propTypes = propTypes;\nconst onClickOutsideContent = onClickOutside(HookshotContent);\n\nexport default onClickOutsideContent;\n"},2021:function(t,e,n){"use strict";n.r(e),e.default="import React from 'react';\nimport classNames from 'classnames/bind';\nimport Button from 'terra-button';\nimport InputField from 'terra-form-input/lib/InputField';\nimport Hookshot from 'terra-hookshot';\nimport styles from './HookshotDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst ATTACHMENT_POSITIONS = [\n  'top start',\n  'top center',\n  'top end',\n  'middle start',\n  'middle center',\n  'middle end',\n  'bottom start',\n  'bottom center',\n  'bottom end',\n];\n\nconst generateOptions = values => (\n  values.map((currentValue, index) => {\n    const keyValue = index;\n    return <option key={keyValue} value={currentValue}>{currentValue}</option>;\n  })\n);\n\nconst attachmentValues = (attachment) => {\n  if (attachment === 'middle start') {\n    return { vertical: 'middle', horizontal: 'start' };\n  } if (attachment === 'middle end') {\n    return { vertical: 'middle', horizontal: 'end' };\n  } if (attachment === 'middle center') {\n    return { vertical: 'middle', horizontal: 'center' };\n  } if (attachment === 'top start') {\n    return { vertical: 'top', horizontal: 'start' };\n  } if (attachment === 'top end') {\n    return { vertical: 'top', horizontal: 'end' };\n  } if (attachment === 'top center') {\n    return { vertical: 'top', horizontal: 'center' };\n  } if (attachment === 'bottom start') {\n    return { vertical: 'bottom', horizontal: 'start' };\n  } if (attachment === 'bottom end') {\n    return { vertical: 'bottom', horizontal: 'end' };\n  }\n  return { vertical: 'bottom', horizontal: 'center' };\n};\n\nconst getId = name => `${name}Example`;\n\nclass HookshotStandard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.handleAttachementBehaviorChange = this.handleAttachementBehaviorChange.bind(this);\n    this.handleContentAttachmentChange = this.handleContentAttachmentChange.bind(this);\n    this.handleTargetAttachmentChange = this.handleTargetAttachmentChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      isOpen: false,\n      hookshotContentAttachment: ATTACHMENT_POSITIONS[1],\n      hookshotTargetAttachment: ATTACHMENT_POSITIONS[7],\n      hookshotAttachmentBehavior: Hookshot.attachmentBehaviors[0],\n      hookshotAttachmentMargin: 0,\n    };\n  }\n\n  handleButtonClick() {\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n  }\n\n  handleRequestClose() {\n    this.setState({ isOpen: false });\n  }\n\n  handleAttachementBehaviorChange(event) {\n    this.setState({ hookshotAttachmentBehavior: event.target.value });\n  }\n\n  handleContentAttachmentChange(event) {\n    this.setState({ hookshotContentAttachment: event.target.value });\n  }\n\n  handleTargetAttachmentChange(event) {\n    this.setState({ hookshotTargetAttachment: event.target.value });\n  }\n\n  handleInputChange(event) {\n    const value = Number.parseFloat(event.target.value);\n    this.setState({ [event.target.name]: value });\n  }\n\n  render() {\n    const hookshotContent = (\n      <Hookshot.Content\n        onEsc={this.handleRequestClose}\n        onOutsideClick={this.handleRequestClose}\n        onResize={this.handleRequestClose}\n      >\n        <div className={cx('content-wrapper')}>Hookshot</div>\n      </Hookshot.Content>\n    );\n\n    return (\n      <div>\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotAttachmentBehavior')} className={cx('label')}>Attachment Behavior</label>\n        </div>\n        <select\n          id={getId('hookshotAttachmentBehavior')}\n          name=\"hookshotAttachmentBehavior\"\n          value={this.state.hookshotAttachmentBehavior}\n          onChange={this.handleAttachementBehaviorChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(Hookshot.attachmentBehaviors)}\n        </select>\n        <br />\n        <br />\n        <InputField\n          label=\"Attachment Margin in Px\"\n          inputId={getId('hookshotAttachmentMargin')}\n          inputAttrs={{ name: 'hookshotAttachmentMargin', type: 'number' }}\n          defaultValue={this.state.hookshotAttachmentMargin}\n          className={cx('input-wrapper')}\n          onChange={this.handleInputChange}\n        />\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotContentAttachment')} className={cx('label')}>Content Attachment</label>\n        </div>\n        <select\n          id={getId('hookshotContentAttachment')}\n          name=\"hookshotContentAttachment\"\n          value={this.state.hookshotContentAttachment}\n          onChange={this.handleContentAttachmentChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(ATTACHMENT_POSITIONS)}\n        </select>\n        <br />\n        <br />\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotTargetAttachment')} className={cx('label')}>Target Attachment</label>\n        </div>\n        <select\n          id={getId('hookshotTargetAttachment')}\n          name=\"hookshotTargetAttachment\"\n          value={this.state.hookshotTargetAttachment}\n          onChange={this.handleTargetAttachmentChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(ATTACHMENT_POSITIONS)}\n        </select>\n        <br />\n        <br />\n        <Hookshot\n          attachmentBehavior={this.state.hookshotAttachmentBehavior}\n          attachmentMargin={this.state.hookshotAttachmentMargin}\n          contentAttachment={attachmentValues(this.state.hookshotContentAttachment)}\n          isEnabled\n          isOpen={this.state.isOpen}\n          targetAttachment={attachmentValues(this.state.hookshotTargetAttachment)}\n          targetRef={() => document.getElementById('hookshot-standard-button')}\n        >\n          {hookshotContent}\n        </Hookshot>\n        <Button id=\"hookshot-standard-button\" text=\"Hookshot Example\" onClick={this.handleButtonClick} />\n      </div>\n    );\n  }\n}\n\nexport default HookshotStandard;\n"},2022:function(t,e,n){"use strict";n.r(e),e.default="import React from 'react';\nimport classNames from 'classnames/bind';\nimport Button from 'terra-button';\nimport InputField from 'terra-form-input/lib/InputField';\nimport Hookshot from 'terra-hookshot';\nimport styles from './HookshotDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst ATTACHMENT_POSITIONS = [\n  'top start',\n  'top center',\n  'top end',\n  'middle start',\n  'middle center',\n  'middle end',\n  'bottom start',\n  'bottom center',\n  'bottom end',\n];\n\nconst generateOptions = values => (\n  values.map((currentValue, index) => {\n    const keyValue = index;\n    return <option key={keyValue} value={currentValue}>{currentValue}</option>;\n  })\n);\n\nconst attachmentValues = (attachment) => {\n  if (attachment === 'middle start') {\n    return { vertical: 'middle', horizontal: 'start' };\n  } if (attachment === 'middle end') {\n    return { vertical: 'middle', horizontal: 'end' };\n  } if (attachment === 'middle center') {\n    return { vertical: 'middle', horizontal: 'center' };\n  } if (attachment === 'top start') {\n    return { vertical: 'top', horizontal: 'start' };\n  } if (attachment === 'top end') {\n    return { vertical: 'top', horizontal: 'end' };\n  } if (attachment === 'top center') {\n    return { vertical: 'top', horizontal: 'center' };\n  } if (attachment === 'bottom start') {\n    return { vertical: 'bottom', horizontal: 'start' };\n  } if (attachment === 'bottom end') {\n    return { vertical: 'bottom', horizontal: 'end' };\n  }\n  return { vertical: 'bottom', horizontal: 'center' };\n};\n\nconst getId = name => `${name}BoundedExample`;\n\nclass HookshotStandard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.handleAttachementBehaviorChange = this.handleAttachementBehaviorChange.bind(this);\n    this.handleContentAttachmentChange = this.handleContentAttachmentChange.bind(this);\n    this.handleTargetAttachmentChange = this.handleTargetAttachmentChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.setParentNode = this.setParentNode.bind(this);\n    this.getParentNode = this.getParentNode.bind(this);\n    this.state = {\n      isOpen: false,\n      hookshotContentAttachment: ATTACHMENT_POSITIONS[1],\n      hookshotTargetAttachment: ATTACHMENT_POSITIONS[7],\n      hookshotAttachmentBehavior: Hookshot.attachmentBehaviors[0],\n      hookshotAttachmentMargin: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.parentNode.scrollTop = 225;\n    this.parentNode.scrollLeft = 475;\n  }\n\n  setParentNode(node) {\n    this.parentNode = node;\n  }\n\n  getParentNode() {\n    return this.parentNode;\n  }\n\n  handleButtonClick() {\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n  }\n\n  handleRequestClose() {\n    this.setState({ isOpen: false });\n  }\n\n  handleAttachementBehaviorChange(event) {\n    this.setState({ hookshotAttachmentBehavior: event.target.value });\n  }\n\n  handleContentAttachmentChange(event) {\n    this.setState({ hookshotContentAttachment: event.target.value });\n  }\n\n  handleTargetAttachmentChange(event) {\n    this.setState({ hookshotTargetAttachment: event.target.value });\n  }\n\n  handleInputChange(event) {\n    this.setState({ [event.target.name]: Number.parseFloat(event.target.value) });\n  }\n\n  render() {\n    const hookshotContent = (\n      <Hookshot.Content\n        onEsc={this.handleRequestClose}\n        onOutsideClick={this.handleRequestClose}\n        onResize={this.handleRequestClose}\n      >\n        <div className={cx('content-wrapper')}>Hookshot</div>\n      </Hookshot.Content>\n    );\n\n    return (\n      <div>\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotAttachmentBehavior')} className={cx('label')}>Attachment Behavior</label>\n        </div>\n        <select\n          id={getId('hookshotAttachmentBehavior')}\n          name=\"hookshotAttachmentBehavior\"\n          value={this.state.hookshotAttachmentBehavior}\n          onChange={this.handleAttachementBehaviorChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(Hookshot.attachmentBehaviors)}\n        </select>\n        <br />\n        <br />\n        <InputField\n          label=\"Attachment Margin in Px\"\n          inputId={getId('hookshotAttachmentMargin')}\n          inputAttrs={{ name: 'hookshotAttachmentMargin', type: 'number' }}\n          defaultValue={this.state.hookshotAttachmentMargin}\n          className={cx('input-wrapper')}\n          onChange={this.handleInputChange}\n        />\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotContentAttachment')} className={cx('label')}>Content Attachment</label>\n        </div>\n        <select\n          id={getId('hookshotContentAttachment')}\n          name=\"hookshotContentAttachment\"\n          value={this.state.hookshotContentAttachment}\n          onChange={this.handleContentAttachmentChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(ATTACHMENT_POSITIONS)}\n        </select>\n        <br />\n        <br />\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotTargetAttachment')} className={cx('label')}>Target Attachment</label>\n        </div>\n        <select\n          id={getId('hookshotTargetAttachment')}\n          name=\"hookshotTargetAttachment\"\n          value={this.state.hookshotTargetAttachment}\n          onChange={this.handleTargetAttachmentChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(ATTACHMENT_POSITIONS)}\n        </select>\n        <br />\n        <br />\n        <Hookshot\n          attachmentBehavior={this.state.hookshotAttachmentBehavior}\n          attachmentMargin={this.state.hookshotAttachmentMargin}\n          boundingRef={this.getParentNode}\n          contentAttachment={attachmentValues(this.state.hookshotContentAttachment)}\n          isEnabled\n          isOpen={this.state.isOpen}\n          targetAttachment={attachmentValues(this.state.hookshotTargetAttachment)}\n          targetRef={() => document.getElementById('hookshot-bounded-button')}\n        >\n          {hookshotContent}\n        </Hookshot>\n        <div\n          className={cx('bounded-parent-node-wrapper')}\n          ref={this.setParentNode}\n        >\n          <div className={cx('button-wrapper')}>\n            <Button id=\"hookshot-bounded-button\" text=\"Hookshot Example\" onClick={this.handleButtonClick} className={cx('custom-button')} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HookshotStandard;\n"},2023:function(t,e,n){"use strict";n.r(e),e.default="import React from 'react';\nimport classNames from 'classnames/bind';\nimport InputField from 'terra-form-input/lib/InputField';\nimport Hookshot from 'terra-hookshot';\nimport styles from './HookshotDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst ATTACHMENT_POSITIONS = [\n  'top start',\n  'top center',\n  'top end',\n  'middle start',\n  'middle center',\n  'middle end',\n  'bottom start',\n  'bottom center',\n  'bottom end',\n];\n\nconst generateOptions = values => (\n  values.map((currentValue, index) => {\n    const keyValue = index;\n    return <option key={keyValue} value={currentValue}>{currentValue}</option>;\n  })\n);\n\nconst attachmentValues = (attachment) => {\n  if (attachment === 'middle start') {\n    return { vertical: 'middle', horizontal: 'start' };\n  } if (attachment === 'middle end') {\n    return { vertical: 'middle', horizontal: 'end' };\n  } if (attachment === 'middle center') {\n    return { vertical: 'middle', horizontal: 'center' };\n  } if (attachment === 'top start') {\n    return { vertical: 'top', horizontal: 'start' };\n  } if (attachment === 'top end') {\n    return { vertical: 'top', horizontal: 'end' };\n  } if (attachment === 'top center') {\n    return { vertical: 'top', horizontal: 'center' };\n  } if (attachment === 'bottom start') {\n    return { vertical: 'bottom', horizontal: 'start' };\n  } if (attachment === 'bottom end') {\n    return { vertical: 'bottom', horizontal: 'end' };\n  }\n  return { vertical: 'bottom', horizontal: 'center' };\n};\n\nconst getId = name => `${name}CoordsExample`;\n\nclass HookshotStandard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRegionClick = this.handleRegionClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.setParentNode = this.setParentNode.bind(this);\n    this.getParentNode = this.getParentNode.bind(this);\n    this.handleAttachementBehaviorChange = this.handleAttachementBehaviorChange.bind(this);\n    this.handleContentAttachmentChange = this.handleContentAttachmentChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      isOpen: false,\n      coordinates: undefined,\n      hookshotContentAttachment: ATTACHMENT_POSITIONS[1],\n      hookshotAttachmentBehavior: Hookshot.attachmentBehaviors[0],\n      hookshotAttachmentMargin: 0,\n    };\n  }\n\n  setParentNode(node) {\n    this.parentNode = node;\n  }\n\n  getParentNode() {\n    return this.parentNode;\n  }\n\n  handleRegionClick(event) {\n    const coordinates = { x: event.clientX, y: event.clientY };\n    this.setState(prevState => ({ isOpen: !prevState.isOpen, coordinates }));\n  }\n\n  handleRequestClose() {\n    this.setState({ isOpen: false });\n  }\n\n  handleAttachementBehaviorChange(event) {\n    this.setState({ hookshotAttachmentBehavior: event.target.value });\n  }\n\n  handleContentAttachmentChange(event) {\n    this.setState({ hookshotContentAttachment: event.target.value });\n  }\n\n  handleInputChange(event) {\n    this.setState({ [event.target.name]: Number.parseFloat(event.target.value) });\n  }\n\n  render() {\n    const hookshotContent = (\n      <Hookshot.Content\n        onEsc={this.handleRequestClose}\n        onOutsideClick={this.handleRequestClose}\n        onResize={this.handleRequestClose}\n      >\n        <div className={cx('content-wrapper')}>Hookshot</div>\n      </Hookshot.Content>\n    );\n\n    return (\n      /* eslint-disable jsx-a11y/no-static-element-interactions */\n      <div>\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotAttachmentBehavior')} className={cx('label')}>Attachment Behavior</label>\n        </div>\n        <select\n          id={getId('hookshotAttachmentBehavior')}\n          name=\"hookshotAttachmentBehavior\"\n          value={this.state.hookshotAttachmentBehavior}\n          onChange={this.handleAttachementBehaviorChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(Hookshot.attachmentBehaviors)}\n        </select>\n        <br />\n        <br />\n        <InputField\n          label=\"Attachment Margin in Px\"\n          inputId={getId('hookshotAttachmentMargin')}\n          inputAttrs={{ name: 'hookshotAttachmentMargin', type: 'number' }}\n          defaultValue={this.state.hookshotAttachmentMargin}\n          className={cx('input-wrapper')}\n          onChange={this.handleInputChange}\n        />\n        <div className={cx('heading-wrapper')}>\n          <label htmlFor={getId('hookshotContentAttachment')} className={cx('label')}>Content Attachment</label>\n        </div>\n        <select\n          id={getId('hookshotContentAttachment')}\n          name=\"hookshotContentAttachment\"\n          value={this.state.hookshotContentAttachment}\n          onChange={this.handleContentAttachmentChange}\n          className={cx('select-wrapper')}\n        >\n          {generateOptions(ATTACHMENT_POSITIONS)}\n        </select>\n        <br />\n        <br />\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n        <div\n          onClick={this.handleRegionClick}\n          className={cx('coords-parent-node-wrapper')}\n          ref={this.setParentNode}\n        >\n          Click Inside\n          <Hookshot\n            attachmentBehavior={this.state.hookshotAttachmentBehavior}\n            attachmentMargin={this.state.hookshotAttachmentMargin}\n            boundingRef={this.getParentNode}\n            contentAttachment={attachmentValues(this.state.hookshotContentAttachment)}\n            isEnabled\n            isOpen={this.state.isOpen}\n            targetCoordinates={this.state.coordinates}\n          >\n            {hookshotContent}\n          </Hookshot>\n        </div>\n      </div>\n      /* eslint-enable jsx-a11y/no-static-element-interactions */\n    );\n  }\n}\n\nexport default HookshotStandard;\n"},2024:function(t,e,n){"use strict";var a=n(5);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(n(163)),s=a(n(20)),i=a(n(22)),r=a(n(23)),h=a(n(24)),l=a(n(27)),c=a(n(25)),d=a(n(0)),u=a(n(4)),m=a(n(54)),p=a(n(1080)),f=a(n(164)),g=a(n(1403)),v=u.default.bind(g.default),b=["top start","top center","top end","middle start","middle center","middle end","bottom start","bottom center","bottom end"],C=function(t){return t.map((function(t,e){var n=e;return d.default.createElement("option",{key:n,value:t},t)}))},k=function(t){return"middle start"===t?{vertical:"middle",horizontal:"start"}:"middle end"===t?{vertical:"middle",horizontal:"end"}:"middle center"===t?{vertical:"middle",horizontal:"center"}:"top start"===t?{vertical:"top",horizontal:"start"}:"top end"===t?{vertical:"top",horizontal:"end"}:"top center"===t?{vertical:"top",horizontal:"center"}:"bottom start"===t?{vertical:"bottom",horizontal:"start"}:"bottom end"===t?{vertical:"bottom",horizontal:"end"}:{vertical:"bottom",horizontal:"center"}},A=function(t){return"".concat(t,"Example")},T=function(t){function e(t){var n;return(0,s.default)(this,e),(n=(0,r.default)(this,(0,h.default)(e).call(this,t))).handleButtonClick=n.handleButtonClick.bind((0,l.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,l.default)(n)),n.handleAttachementBehaviorChange=n.handleAttachementBehaviorChange.bind((0,l.default)(n)),n.handleContentAttachmentChange=n.handleContentAttachmentChange.bind((0,l.default)(n)),n.handleTargetAttachmentChange=n.handleTargetAttachmentChange.bind((0,l.default)(n)),n.handleInputChange=n.handleInputChange.bind((0,l.default)(n)),n.state={isOpen:!1,hookshotContentAttachment:b[1],hookshotTargetAttachment:b[7],hookshotAttachmentBehavior:f.default.attachmentBehaviors[0],hookshotAttachmentMargin:0},n}return(0,c.default)(e,t),(0,i.default)(e,[{key:"handleButtonClick",value:function(){this.setState((function(t){return{isOpen:!t.isOpen}}))}},{key:"handleRequestClose",value:function(){this.setState({isOpen:!1})}},{key:"handleAttachementBehaviorChange",value:function(t){this.setState({hookshotAttachmentBehavior:t.target.value})}},{key:"handleContentAttachmentChange",value:function(t){this.setState({hookshotContentAttachment:t.target.value})}},{key:"handleTargetAttachmentChange",value:function(t){this.setState({hookshotTargetAttachment:t.target.value})}},{key:"handleInputChange",value:function(t){var e=Number.parseFloat(t.target.value);this.setState((0,o.default)({},t.target.name,e))}},{key:"render",value:function(){var t=d.default.createElement(f.default.Content,{onEsc:this.handleRequestClose,onOutsideClick:this.handleRequestClose,onResize:this.handleRequestClose},d.default.createElement("div",{className:v("content-wrapper")},"Hookshot"));return d.default.createElement("div",null,d.default.createElement("div",{className:v("heading-wrapper")},d.default.createElement("label",{htmlFor:A("hookshotAttachmentBehavior"),className:v("label")},"Attachment Behavior")),d.default.createElement("select",{id:A("hookshotAttachmentBehavior"),name:"hookshotAttachmentBehavior",value:this.state.hookshotAttachmentBehavior,onChange:this.handleAttachementBehaviorChange,className:v("select-wrapper")},C(f.default.attachmentBehaviors)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement(p.default,{label:"Attachment Margin in Px",inputId:A("hookshotAttachmentMargin"),inputAttrs:{name:"hookshotAttachmentMargin",type:"number"},defaultValue:this.state.hookshotAttachmentMargin,className:v("input-wrapper"),onChange:this.handleInputChange}),d.default.createElement("div",{className:v("heading-wrapper")},d.default.createElement("label",{htmlFor:A("hookshotContentAttachment"),className:v("label")},"Content Attachment")),d.default.createElement("select",{id:A("hookshotContentAttachment"),name:"hookshotContentAttachment",value:this.state.hookshotContentAttachment,onChange:this.handleContentAttachmentChange,className:v("select-wrapper")},C(b)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement("div",{className:v("heading-wrapper")},d.default.createElement("label",{htmlFor:A("hookshotTargetAttachment"),className:v("label")},"Target Attachment")),d.default.createElement("select",{id:A("hookshotTargetAttachment"),name:"hookshotTargetAttachment",value:this.state.hookshotTargetAttachment,onChange:this.handleTargetAttachmentChange,className:v("select-wrapper")},C(b)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement(f.default,{attachmentBehavior:this.state.hookshotAttachmentBehavior,attachmentMargin:this.state.hookshotAttachmentMargin,contentAttachment:k(this.state.hookshotContentAttachment),isEnabled:!0,isOpen:this.state.isOpen,targetAttachment:k(this.state.hookshotTargetAttachment),targetRef:function(){return document.getElementById("hookshot-standard-button")}},t),d.default.createElement(m.default,{id:"hookshot-standard-button",text:"Hookshot Example",onClick:this.handleButtonClick}))}}]),e}(d.default.Component);e.default=T},2025:function(t,e,n){"use strict";var a=n(5);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(n(163)),s=a(n(20)),i=a(n(22)),r=a(n(23)),h=a(n(24)),l=a(n(27)),c=a(n(25)),d=a(n(0)),u=a(n(4)),m=a(n(54)),p=a(n(1080)),f=a(n(164)),g=a(n(1403)),v=u.default.bind(g.default),b=["top start","top center","top end","middle start","middle center","middle end","bottom start","bottom center","bottom end"],C=function(t){return t.map((function(t,e){var n=e;return d.default.createElement("option",{key:n,value:t},t)}))},k=function(t){return"middle start"===t?{vertical:"middle",horizontal:"start"}:"middle end"===t?{vertical:"middle",horizontal:"end"}:"middle center"===t?{vertical:"middle",horizontal:"center"}:"top start"===t?{vertical:"top",horizontal:"start"}:"top end"===t?{vertical:"top",horizontal:"end"}:"top center"===t?{vertical:"top",horizontal:"center"}:"bottom start"===t?{vertical:"bottom",horizontal:"start"}:"bottom end"===t?{vertical:"bottom",horizontal:"end"}:{vertical:"bottom",horizontal:"center"}},A=function(t){return"".concat(t,"BoundedExample")},T=function(t){function e(t){var n;return(0,s.default)(this,e),(n=(0,r.default)(this,(0,h.default)(e).call(this,t))).handleButtonClick=n.handleButtonClick.bind((0,l.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,l.default)(n)),n.handleAttachementBehaviorChange=n.handleAttachementBehaviorChange.bind((0,l.default)(n)),n.handleContentAttachmentChange=n.handleContentAttachmentChange.bind((0,l.default)(n)),n.handleTargetAttachmentChange=n.handleTargetAttachmentChange.bind((0,l.default)(n)),n.handleInputChange=n.handleInputChange.bind((0,l.default)(n)),n.setParentNode=n.setParentNode.bind((0,l.default)(n)),n.getParentNode=n.getParentNode.bind((0,l.default)(n)),n.state={isOpen:!1,hookshotContentAttachment:b[1],hookshotTargetAttachment:b[7],hookshotAttachmentBehavior:f.default.attachmentBehaviors[0],hookshotAttachmentMargin:0},n}return(0,c.default)(e,t),(0,i.default)(e,[{key:"componentDidMount",value:function(){this.parentNode.scrollTop=225,this.parentNode.scrollLeft=475}},{key:"setParentNode",value:function(t){this.parentNode=t}},{key:"getParentNode",value:function(){return this.parentNode}},{key:"handleButtonClick",value:function(){this.setState((function(t){return{isOpen:!t.isOpen}}))}},{key:"handleRequestClose",value:function(){this.setState({isOpen:!1})}},{key:"handleAttachementBehaviorChange",value:function(t){this.setState({hookshotAttachmentBehavior:t.target.value})}},{key:"handleContentAttachmentChange",value:function(t){this.setState({hookshotContentAttachment:t.target.value})}},{key:"handleTargetAttachmentChange",value:function(t){this.setState({hookshotTargetAttachment:t.target.value})}},{key:"handleInputChange",value:function(t){this.setState((0,o.default)({},t.target.name,Number.parseFloat(t.target.value)))}},{key:"render",value:function(){var t=d.default.createElement(f.default.Content,{onEsc:this.handleRequestClose,onOutsideClick:this.handleRequestClose,onResize:this.handleRequestClose},d.default.createElement("div",{className:v("content-wrapper")},"Hookshot"));return d.default.createElement("div",null,d.default.createElement("div",{className:v("heading-wrapper")},d.default.createElement("label",{htmlFor:A("hookshotAttachmentBehavior"),className:v("label")},"Attachment Behavior")),d.default.createElement("select",{id:A("hookshotAttachmentBehavior"),name:"hookshotAttachmentBehavior",value:this.state.hookshotAttachmentBehavior,onChange:this.handleAttachementBehaviorChange,className:v("select-wrapper")},C(f.default.attachmentBehaviors)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement(p.default,{label:"Attachment Margin in Px",inputId:A("hookshotAttachmentMargin"),inputAttrs:{name:"hookshotAttachmentMargin",type:"number"},defaultValue:this.state.hookshotAttachmentMargin,className:v("input-wrapper"),onChange:this.handleInputChange}),d.default.createElement("div",{className:v("heading-wrapper")},d.default.createElement("label",{htmlFor:A("hookshotContentAttachment"),className:v("label")},"Content Attachment")),d.default.createElement("select",{id:A("hookshotContentAttachment"),name:"hookshotContentAttachment",value:this.state.hookshotContentAttachment,onChange:this.handleContentAttachmentChange,className:v("select-wrapper")},C(b)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement("div",{className:v("heading-wrapper")},d.default.createElement("label",{htmlFor:A("hookshotTargetAttachment"),className:v("label")},"Target Attachment")),d.default.createElement("select",{id:A("hookshotTargetAttachment"),name:"hookshotTargetAttachment",value:this.state.hookshotTargetAttachment,onChange:this.handleTargetAttachmentChange,className:v("select-wrapper")},C(b)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement(f.default,{attachmentBehavior:this.state.hookshotAttachmentBehavior,attachmentMargin:this.state.hookshotAttachmentMargin,boundingRef:this.getParentNode,contentAttachment:k(this.state.hookshotContentAttachment),isEnabled:!0,isOpen:this.state.isOpen,targetAttachment:k(this.state.hookshotTargetAttachment),targetRef:function(){return document.getElementById("hookshot-bounded-button")}},t),d.default.createElement("div",{className:v("bounded-parent-node-wrapper"),ref:this.setParentNode},d.default.createElement("div",{className:v("button-wrapper")},d.default.createElement(m.default,{id:"hookshot-bounded-button",text:"Hookshot Example",onClick:this.handleButtonClick,className:v("custom-button")}))))}}]),e}(d.default.Component);e.default=T},2026:function(t,e,n){"use strict";var a=n(5);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(n(163)),s=a(n(20)),i=a(n(22)),r=a(n(23)),h=a(n(24)),l=a(n(27)),c=a(n(25)),d=a(n(0)),u=a(n(4)),m=a(n(1080)),p=a(n(164)),f=a(n(1403)),g=u.default.bind(f.default),v=["top start","top center","top end","middle start","middle center","middle end","bottom start","bottom center","bottom end"],b=function(t){return t.map((function(t,e){var n=e;return d.default.createElement("option",{key:n,value:t},t)}))},C=function(t){return"".concat(t,"CoordsExample")},k=function(t){function e(t){var n;return(0,s.default)(this,e),(n=(0,r.default)(this,(0,h.default)(e).call(this,t))).handleRegionClick=n.handleRegionClick.bind((0,l.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,l.default)(n)),n.setParentNode=n.setParentNode.bind((0,l.default)(n)),n.getParentNode=n.getParentNode.bind((0,l.default)(n)),n.handleAttachementBehaviorChange=n.handleAttachementBehaviorChange.bind((0,l.default)(n)),n.handleContentAttachmentChange=n.handleContentAttachmentChange.bind((0,l.default)(n)),n.handleInputChange=n.handleInputChange.bind((0,l.default)(n)),n.state={isOpen:!1,coordinates:void 0,hookshotContentAttachment:v[1],hookshotAttachmentBehavior:p.default.attachmentBehaviors[0],hookshotAttachmentMargin:0},n}return(0,c.default)(e,t),(0,i.default)(e,[{key:"setParentNode",value:function(t){this.parentNode=t}},{key:"getParentNode",value:function(){return this.parentNode}},{key:"handleRegionClick",value:function(t){var e={x:t.clientX,y:t.clientY};this.setState((function(t){return{isOpen:!t.isOpen,coordinates:e}}))}},{key:"handleRequestClose",value:function(){this.setState({isOpen:!1})}},{key:"handleAttachementBehaviorChange",value:function(t){this.setState({hookshotAttachmentBehavior:t.target.value})}},{key:"handleContentAttachmentChange",value:function(t){this.setState({hookshotContentAttachment:t.target.value})}},{key:"handleInputChange",value:function(t){this.setState((0,o.default)({},t.target.name,Number.parseFloat(t.target.value)))}},{key:"render",value:function(){var t,e=d.default.createElement(p.default.Content,{onEsc:this.handleRequestClose,onOutsideClick:this.handleRequestClose,onResize:this.handleRequestClose},d.default.createElement("div",{className:g("content-wrapper")},"Hookshot"));return(d.default.createElement("div",null,d.default.createElement("div",{className:g("heading-wrapper")},d.default.createElement("label",{htmlFor:C("hookshotAttachmentBehavior"),className:g("label")},"Attachment Behavior")),d.default.createElement("select",{id:C("hookshotAttachmentBehavior"),name:"hookshotAttachmentBehavior",value:this.state.hookshotAttachmentBehavior,onChange:this.handleAttachementBehaviorChange,className:g("select-wrapper")},b(p.default.attachmentBehaviors)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement(m.default,{label:"Attachment Margin in Px",inputId:C("hookshotAttachmentMargin"),inputAttrs:{name:"hookshotAttachmentMargin",type:"number"},defaultValue:this.state.hookshotAttachmentMargin,className:g("input-wrapper"),onChange:this.handleInputChange}),d.default.createElement("div",{className:g("heading-wrapper")},d.default.createElement("label",{htmlFor:C("hookshotContentAttachment"),className:g("label")},"Content Attachment")),d.default.createElement("select",{id:C("hookshotContentAttachment"),name:"hookshotContentAttachment",value:this.state.hookshotContentAttachment,onChange:this.handleContentAttachmentChange,className:g("select-wrapper")},b(v)),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement("div",{onClick:this.handleRegionClick,className:g("coords-parent-node-wrapper"),ref:this.setParentNode},"Click Inside",d.default.createElement(p.default,{attachmentBehavior:this.state.hookshotAttachmentBehavior,attachmentMargin:this.state.hookshotAttachmentMargin,boundingRef:this.getParentNode,contentAttachment:(t=this.state.hookshotContentAttachment,"middle start"===t?{vertical:"middle",horizontal:"start"}:"middle end"===t?{vertical:"middle",horizontal:"end"}:"middle center"===t?{vertical:"middle",horizontal:"center"}:"top start"===t?{vertical:"top",horizontal:"start"}:"top end"===t?{vertical:"top",horizontal:"end"}:"top center"===t?{vertical:"top",horizontal:"center"}:"bottom start"===t?{vertical:"bottom",horizontal:"start"}:"bottom end"===t?{vertical:"bottom",horizontal:"end"}:{vertical:"bottom",horizontal:"center"}),isEnabled:!0,isOpen:this.state.isOpen,targetCoordinates:this.state.coordinates},e))))}}]),e}(d.default.Component);e.default=k},2350:function(t,e,n){"use strict";var a=n(5);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(n(0)),s=a(n(1004)),i=n(2017),r=a(n(2018)),h=a(n(2019)),l=a(n(2020)),c=a(n(2021)),d=a(n(2022)),u=a(n(2023)),m=a(n(2024)),p=a(n(2025)),f=a(n(2026)),g=function(){return o.default.createElement(s.default,{packageName:i.name,readme:r.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(i.name),examples:[{title:"Window Bound Hookshot",example:o.default.createElement(m.default,null),source:c.default},{title:"Container Bound Hookshot",example:o.default.createElement(p.default,null),source:d.default},{title:"Coordinate Targeted Hookshot",example:o.default.createElement(f.default,null),source:u.default}],propsTables:[{componentName:"Hookshot",componentSrc:h.default},{componentName:"Hookshot Content",componentSrc:l.default}]})};e.default=g}}]);
//# sourceMappingURL=96-557dc2a03aca47edaaed.js.map