{"version":3,"sources":["webpack:///./packages/terra-date-input/lib/DateInputField.js","webpack:///./packages/terra-date-input/lib/DateInputField.module.scss?e812","webpack:///./packages/terra-date-input/docs/DateInputField.md","webpack:///./packages/terra-date-input/src/DateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/DefaultDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/DefaultDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/InlineDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/InlineDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/OptionalDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/OptionalDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/RequiredDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/RequiredDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/HideRequiredDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/HideRequiredDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/DayMonthYearDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/DayMonthYearDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/MonthDayYearDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/MonthDayYearDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/example/IncompleteDateInputField.js","webpack:///./packages/terra-date-input/src/terra-dev-site/doc/example/IncompleteDateInputField.jsx","webpack:///./packages/terra-date-input/lib/terra-dev-site/doc/DateInput/DateInputField.2.doc.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_defineProperty2","_extends2","_objectWithoutProperties2","_react","_propTypes","_reactIntl","_bind","_v","_IconError","_terraVisuallyHiddenText","_DateInput","_DateInputFieldModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","cx","bind","propTypes","legend","string","isRequired","name","dayAttributes","disabled","bool","displayFormat","error","node","help","hideRequired","isIncomplete","isInline","isInvalid","isLegendHidden","legendAttributes","monthAttributes","maxWidth","onBlur","func","onChange","onFocus","required","showOptional","yearAttributes","defaultProps","undefined","DateInputField","props","customProps","uniqueid","useRef","dateInputFieldClasses","className","legendClassNames","helpAriaDescriptionId","concat","current","errorAriaDescriptionId","ariaDescriptionIds","customMonthAriaDescribedById","monthAriaDesciptionIds","customDayAriaDescribedById","dayAriaDesciptionIds","customYearAriaDescribedById","yearAriaDesciptionIds","legendGroup","createElement","Fragment","FormattedMessage","id","requiredText","text","optionalText","_default","module","_slicedToArray2","_DateInputField","_useState","useState","_useState2","setValue","_useState3","_useState4","setIsInvalid","event","dateString","type","onClick","invalid","dateFieldValue1","setDateFieldValue1","dateFieldValue2","setDateFieldValue2","_useState5","_useState6","setIsInline","_useState7","_useState8","inline","setIsIncomplete","incomplete","_terraDocTemplate","_package","_DateInputField2","_DefaultDateInputField","_DefaultDateInputField2","_InlineDateInputField","_InlineDateInputField2","_OptionalDateInputField","_OptionalDateInputField2","_RequiredDateInputField","_RequiredDateInputField2","_HideRequiredDateInputField","_HideRequiredDateInputField2","_DayMonthYearDateInputField","_DayMonthYearDateInputField2","_MonthDayYearDateInputField","_MonthDayYearDateInputField2","_IncompleteDateInputField","_IncompleteDateInputField2","packageName","readme","srcPath","examples","title","example","description","propsTables","componentName","componentSrc"],"mappings":"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","file":"78-b917f366f65ab7140e48.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _IconError = _interopRequireDefault(require(\"terra-icon/lib/icon/IconError\"));\n\nvar _terraVisuallyHiddenText = _interopRequireDefault(require(\"terra-visually-hidden-text\"));\n\nvar _DateInput = _interopRequireDefault(require(\"./DateInput\"));\n\nvar _DateInputFieldModule = _interopRequireDefault(require(\"./DateInputField.module.scss\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar cx = _bind.default.bind(_DateInputFieldModule.default);\n\nvar propTypes = {\n  /**\n   * The legend of the Date Input fieldset\n   */\n  legend: _propTypes.default.string.isRequired,\n\n  /**\n   * Name of the date input. The name should be unique.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * Custom input attributes to apply to the day input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  dayAttributes: _propTypes.default.object,\n\n  /**\n   * Whether the date input should be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Can be used to set the display format. One of `month-day-year` or `day-month-year`.\n   * Overrides default locale display format.\n   */\n  displayFormat: _propTypes.default.string,\n\n  /**\n   * Error message for when the field is invalid. This will only be displayed if isInvalid is true.\n   */\n  error: _propTypes.default.node,\n\n  /**\n   * Help element to display with the field.\n   */\n  help: _propTypes.default.node,\n\n  /**\n   * Whether or not to hide the required indicator on the label.\n   */\n  hideRequired: _propTypes.default.bool,\n\n  /**\n  * Whether the field displays as Incomplete. Use when no value has been provided. _(usage note: `required` must also be set)_.\n  */\n  isIncomplete: _propTypes.default.bool,\n\n  /**\n   * Whether or not the field is an inline field.\n   */\n  isInline: _propTypes.default.bool,\n\n  /**\n  * Whether the field displays as Invalid. Use when value does not meet validation pattern.\n  */\n  isInvalid: _propTypes.default.bool,\n\n  /**\n   * Whether or not the legend is visible. Use this props to hide a legend while still creating it on the DOM for accessibility.\n   */\n  isLegendHidden: _propTypes.default.bool,\n\n  /**\n   * Attributes to attach to the legend.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  legendAttributes: _propTypes.default.object,\n\n  /**\n   * Custom select attributes to apply to the month select\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  monthAttributes: _propTypes.default.object,\n\n  /**\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\n   */\n  maxWidth: _propTypes.default.string,\n\n  /**\n   * A callback function triggered when the date input component loses focus.\n   * This event does not get triggered when the focus is moved from the date input to the calendar button since the focus is still within the main date input component.\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * A callback function to execute when a date is entered.\n   * The first parameter is the event. The second parameter is the changed date value.\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * A callback function triggered when the date input component receives focus.\n   * This event does not get triggered when the focus is moved from the date input to the calendar button since the focus is still within the main date input component.\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * Whether or not the date input field is required.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * Whether or not to append the 'optional' label to a non-required field label.\n   */\n  showOptional: _propTypes.default.bool,\n\n  /**\n   * An date string representation of the date value used for the component. This should be in ISO 8601 format: YYYY-MM-DD.\n   */\n  value: _propTypes.default.string,\n\n  /**\n   * Custom input attributes to apply to the year input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  yearAttributes: _propTypes.default.object\n};\nvar defaultProps = {\n  dayAttributes: {},\n  disabled: false,\n  displayFormat: undefined,\n  error: null,\n  help: null,\n  hideRequired: false,\n  isIncomplete: false,\n  isInline: false,\n  isInvalid: false,\n  isLegendHidden: false,\n  legendAttributes: {},\n  monthAttributes: {},\n  maxWidth: undefined,\n  onBlur: undefined,\n  onChange: undefined,\n  onFocus: undefined,\n  required: false,\n  showOptional: false,\n  value: '',\n  yearAttributes: {}\n};\n\nvar DateInputField = function DateInputField(props) {\n  var dayAttributes = props.dayAttributes,\n      disabled = props.disabled,\n      displayFormat = props.displayFormat,\n      error = props.error,\n      help = props.help,\n      hideRequired = props.hideRequired,\n      isIncomplete = props.isIncomplete,\n      isInline = props.isInline,\n      isInvalid = props.isInvalid,\n      isLegendHidden = props.isLegendHidden,\n      legend = props.legend,\n      legendAttributes = props.legendAttributes,\n      monthAttributes = props.monthAttributes,\n      maxWidth = props.maxWidth,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      required = props.required,\n      showOptional = props.showOptional,\n      value = props.value,\n      yearAttributes = props.yearAttributes,\n      customProps = (0, _objectWithoutProperties2.default)(props, [\"dayAttributes\", \"disabled\", \"displayFormat\", \"error\", \"help\", \"hideRequired\", \"isIncomplete\", \"isInline\", \"isInvalid\", \"isLegendHidden\", \"legend\", \"legendAttributes\", \"monthAttributes\", \"maxWidth\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"required\", \"showOptional\", \"value\", \"yearAttributes\"]);\n  var uniqueid = (0, _react.useRef)((0, _v.default)());\n  var dateInputFieldClasses = cx(['date-input-field', {\n    'is-inline': isInline\n  }, customProps.className]);\n  var legendClassNames = cx(['legend', legendAttributes.className]);\n  /**\n   * aria-describedby ids\n   * Used to map legend, help text, and error messages with input/select elements\n   */\n\n  var helpAriaDescriptionId = help ? \"terra-date-input-field-description-help-\".concat(uniqueid.current) : '';\n  var errorAriaDescriptionId = isInvalid && error ? \"terra-date-input-field-description-error-\".concat(uniqueid.current) : '';\n  var ariaDescriptionIds = \"\".concat(errorAriaDescriptionId, \" \").concat(helpAriaDescriptionId);\n  var customMonthAriaDescribedById = monthAttributes['aria-describedby'] ? monthAttributes['aria-describedby'] : '';\n  var monthAriaDesciptionIds = \"\".concat(ariaDescriptionIds, \" \").concat(customMonthAriaDescribedById);\n  var customDayAriaDescribedById = dayAttributes['aria-describedby'] ? dayAttributes['aria-describedby'] : '';\n  var dayAriaDesciptionIds = \"\".concat(ariaDescriptionIds, \" \").concat(customDayAriaDescribedById);\n  var customYearAriaDescribedById = yearAttributes['aria-describedby'] ? yearAttributes['aria-describedby'] : '';\n  var yearAriaDesciptionIds = \"\".concat(ariaDescriptionIds, \" \").concat(customYearAriaDescribedById);\n\n  var legendGroup = _react.default.createElement(\"legend\", {\n    className: cx(['legend-group', {\n      'legend-group-hidden': isLegendHidden\n    }])\n  }, _react.default.createElement(\"div\", (0, _extends2.default)({}, legendAttributes, {\n    className: legendClassNames\n  }), isInvalid && _react.default.createElement(\"span\", {\n    className: cx('error-icon')\n  }, _react.default.createElement(_IconError.default, null)), required && (isInvalid || !hideRequired) && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: cx('required')\n  }, \"*\"), _react.default.createElement(_reactIntl.FormattedMessage, {\n    id: \"Terra.date.input.required\"\n  }, function (requiredText) {\n    return _react.default.createElement(_terraVisuallyHiddenText.default, {\n      text: requiredText\n    });\n  })), legend, required && !isInvalid && hideRequired && _react.default.createElement(\"span\", {\n    className: cx('required-hidden')\n  }, \"*\"), showOptional && !required && _react.default.createElement(_reactIntl.FormattedMessage, {\n    id: \"Terra.date.input.optional\"\n  }, function (optionalText) {\n    return _react.default.createElement(\"span\", {\n      className: cx('optional')\n    }, optionalText);\n  }), !isInvalid && _react.default.createElement(\"span\", {\n    className: cx('error-icon-hidden')\n  })));\n\n  return _react.default.createElement(\"fieldset\", (0, _extends2.default)({}, customProps, {\n    className: dateInputFieldClasses\n  }), legendGroup, _react.default.createElement(_DateInput.default, {\n    name: name,\n    onChange: onChange,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    value: value,\n    displayFormat: displayFormat,\n    disabled: disabled,\n    isInvalid: isInvalid,\n    isIncomplete: isIncomplete,\n    required: required,\n    monthAttributes: _objectSpread({}, monthAttributes, {}, {\n      'aria-describedby': monthAriaDesciptionIds\n    }),\n    dayAttributes: _objectSpread({}, dayAttributes, {}, {\n      'aria-describedby': dayAriaDesciptionIds\n    }),\n    yearAttributes: _objectSpread({}, yearAttributes, {}, {\n      'aria-describedby': yearAriaDesciptionIds\n    })\n  }), isInvalid && error && _react.default.createElement(\"div\", {\n    id: errorAriaDescriptionId,\n    className: cx('error-text')\n  }, error), help && _react.default.createElement(\"div\", {\n    id: helpAriaDescriptionId,\n    className: cx('help-text')\n  }, help));\n};\n\nDateInputField.propTypes = propTypes;\nDateInputField.defaultProps = defaultProps;\nvar _default = DateInputField;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-input-field\":\"DateInputField-module__date-input-field___3OhAN\",\"is-inline\":\"DateInputField-module__is-inline___3ybbS\",\"legend-group\":\"DateInputField-module__legend-group___3EFZW\",\"legend-group-hidden\":\"DateInputField-module__legend-group-hidden___1BTOn\",\"legend\":\"DateInputField-module__legend___12gOI\",\"error-icon\":\"DateInputField-module__error-icon___sBkYW\",\"error-icon-hidden\":\"DateInputField-module__error-icon-hidden___CTMdH\",\"required\":\"DateInputField-module__required___3PcZR\",\"required-hidden\":\"DateInputField-module__required-hidden___xq1oX\",\"optional\":\"DateInputField-module__optional___2G3Od\",\"help-text\":\"DateInputField-module__help-text___bmpIC\",\"error-text\":\"DateInputField-module__error-text____FqDM\"};","export default \"# Terra Date Input Field\\n\\nDateInputField is a component of terra-date-input that provides a container for rendering the related date inputs. DateInputField includes displays for help text, error text, required or optional indication, and invalid states.\\n\\n## Component Features\\n\\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n * [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\"","export default \"import React, { useRef } from 'react';\\nimport PropTypes from 'prop-types';\\nimport { FormattedMessage } from 'react-intl';\\nimport classNames from 'classnames/bind';\\nimport uuidv4 from 'uuid/v4';\\nimport IconError from 'terra-icon/lib/icon/IconError';\\nimport VisuallyHiddenText from 'terra-visually-hidden-text';\\n\\nimport DateInput from './DateInput';\\nimport styles from './DateInputField.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * The legend of the Date Input fieldset\\n   */\\n  legend: PropTypes.string.isRequired,\\n  /**\\n   * Name of the date input. The name should be unique.\\n   */\\n  name: PropTypes.string.isRequired,\\n  /**\\n   * Custom input attributes to apply to the day input\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  dayAttributes: PropTypes.object,\\n  /**\\n   * Whether the date input should be disabled.\\n   */\\n  disabled: PropTypes.bool,\\n  /**\\n   * Can be used to set the display format. One of `month-day-year` or `day-month-year`.\\n   * Overrides default locale display format.\\n   */\\n  displayFormat: PropTypes.string,\\n  /**\\n   * Error message for when the field is invalid. This will only be displayed if isInvalid is true.\\n   */\\n  error: PropTypes.node,\\n  /**\\n   * Help element to display with the field.\\n   */\\n  help: PropTypes.node,\\n  /**\\n   * Whether or not to hide the required indicator on the label.\\n   */\\n  hideRequired: PropTypes.bool,\\n  /**\\n  * Whether the field displays as Incomplete. Use when no value has been provided. _(usage note: `required` must also be set)_.\\n  */\\n  isIncomplete: PropTypes.bool,\\n  /**\\n   * Whether or not the field is an inline field.\\n   */\\n  isInline: PropTypes.bool,\\n  /**\\n  * Whether the field displays as Invalid. Use when value does not meet validation pattern.\\n  */\\n  isInvalid: PropTypes.bool,\\n  /**\\n   * Whether or not the legend is visible. Use this props to hide a legend while still creating it on the DOM for accessibility.\\n   */\\n  isLegendHidden: PropTypes.bool,\\n  /**\\n   * Attributes to attach to the legend.\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  legendAttributes: PropTypes.object,\\n  /**\\n   * Custom select attributes to apply to the month select\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  monthAttributes: PropTypes.object,\\n  /**\\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\\n   */\\n  maxWidth: PropTypes.string,\\n  /**\\n   * A callback function triggered when the date input component loses focus.\\n   * This event does not get triggered when the focus is moved from the date input to the calendar button since the focus is still within the main date input component.\\n   */\\n  onBlur: PropTypes.func,\\n  /**\\n   * A callback function to execute when a date is entered.\\n   * The first parameter is the event. The second parameter is the changed date value.\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   * A callback function triggered when the date input component receives focus.\\n   * This event does not get triggered when the focus is moved from the date input to the calendar button since the focus is still within the main date input component.\\n   */\\n  onFocus: PropTypes.func,\\n  /**\\n   * Whether or not the date input field is required.\\n   */\\n  required: PropTypes.bool,\\n  /**\\n   * Whether or not to append the 'optional' label to a non-required field label.\\n   */\\n  showOptional: PropTypes.bool,\\n  /**\\n   * An date string representation of the date value used for the component. This should be in ISO 8601 format: YYYY-MM-DD.\\n   */\\n  value: PropTypes.string,\\n  /**\\n   * Custom input attributes to apply to the year input\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  yearAttributes: PropTypes.object,\\n};\\n\\nconst defaultProps = {\\n  dayAttributes: {},\\n  disabled: false,\\n  displayFormat: undefined,\\n  error: null,\\n  help: null,\\n  hideRequired: false,\\n  isIncomplete: false,\\n  isInline: false,\\n  isInvalid: false,\\n  isLegendHidden: false,\\n  legendAttributes: {},\\n  monthAttributes: {},\\n  maxWidth: undefined,\\n  onBlur: undefined,\\n  onChange: undefined,\\n  onFocus: undefined,\\n  required: false,\\n  showOptional: false,\\n  value: '',\\n  yearAttributes: {},\\n};\\n\\nconst DateInputField = (props) => {\\n  const {\\n    dayAttributes,\\n    disabled,\\n    displayFormat,\\n    error,\\n    help,\\n    hideRequired,\\n    isIncomplete,\\n    isInline,\\n    isInvalid,\\n    isLegendHidden,\\n    legend,\\n    legendAttributes,\\n    monthAttributes,\\n    maxWidth,\\n    name,\\n    onBlur,\\n    onChange,\\n    onFocus,\\n    required,\\n    showOptional,\\n    value,\\n    yearAttributes,\\n    ...customProps\\n  } = props;\\n\\n  const uniqueid = useRef(uuidv4());\\n\\n  const dateInputFieldClasses = cx([\\n    'date-input-field',\\n    { 'is-inline': isInline },\\n    customProps.className,\\n  ]);\\n\\n  const legendClassNames = cx([\\n    'legend',\\n    legendAttributes.className,\\n  ]);\\n\\n  /**\\n   * aria-describedby ids\\n   * Used to map legend, help text, and error messages with input/select elements\\n   */\\n  const helpAriaDescriptionId = help ? `terra-date-input-field-description-help-${uniqueid.current}` : '';\\n  const errorAriaDescriptionId = isInvalid && error ? `terra-date-input-field-description-error-${uniqueid.current}` : '';\\n  const ariaDescriptionIds = `${errorAriaDescriptionId} ${helpAriaDescriptionId}`;\\n\\n  const customMonthAriaDescribedById = monthAttributes['aria-describedby'] ? monthAttributes['aria-describedby'] : '';\\n  const monthAriaDesciptionIds = `${ariaDescriptionIds} ${customMonthAriaDescribedById}`;\\n\\n  const customDayAriaDescribedById = dayAttributes['aria-describedby'] ? dayAttributes['aria-describedby'] : '';\\n  const dayAriaDesciptionIds = `${ariaDescriptionIds} ${customDayAriaDescribedById}`;\\n\\n  const customYearAriaDescribedById = yearAttributes['aria-describedby'] ? yearAttributes['aria-describedby'] : '';\\n  const yearAriaDesciptionIds = `${ariaDescriptionIds} ${customYearAriaDescribedById}`;\\n\\n  const legendGroup = (\\n    <legend className={cx(['legend-group', { 'legend-group-hidden': isLegendHidden }])}>\\n      <div {...legendAttributes} className={legendClassNames}>\\n        {isInvalid && <span className={cx('error-icon')}><IconError /></span>}\\n        {required && (isInvalid || !hideRequired) && (\\n          <React.Fragment>\\n            <div aria-hidden=\\\"true\\\" className={cx('required')}>*</div>\\n            <FormattedMessage id=\\\"Terra.date.input.required\\\">\\n              {requiredText => (\\n                <VisuallyHiddenText text={requiredText} />\\n              )}\\n            </FormattedMessage>\\n          </React.Fragment>\\n        )}\\n        {legend}\\n        {required && !isInvalid && hideRequired && <span className={cx('required-hidden')}>*</span>}\\n        {showOptional && !required\\n          && (\\n            <FormattedMessage id=\\\"Terra.date.input.optional\\\">\\n              {optionalText => (\\n                <span className={cx('optional')}>{optionalText}</span>\\n              )}\\n            </FormattedMessage>\\n          )}\\n        {!isInvalid && <span className={cx('error-icon-hidden')} />}\\n      </div>\\n    </legend>\\n  );\\n\\n  return (\\n    <fieldset {...customProps} className={dateInputFieldClasses}>\\n      {legendGroup}\\n      <DateInput\\n        name={name}\\n        onChange={onChange}\\n        onBlur={onBlur}\\n        onFocus={onFocus}\\n        value={value}\\n        displayFormat={displayFormat}\\n        disabled={disabled}\\n        isInvalid={isInvalid}\\n        isIncomplete={isIncomplete}\\n        required={required}\\n        monthAttributes={{ ...monthAttributes, ...{ 'aria-describedby': monthAriaDesciptionIds } }}\\n        dayAttributes={{ ...dayAttributes, ...{ 'aria-describedby': dayAriaDesciptionIds } }}\\n        yearAttributes={{ ...yearAttributes, ...{ 'aria-describedby': yearAriaDesciptionIds } }}\\n      />\\n      {isInvalid && error && <div id={errorAriaDescriptionId} className={cx('error-text')}>{error}</div>}\\n      {help && <div id={helpAriaDescriptionId} className={cx('help-text')}>{help}</div>}\\n    </fieldset>\\n  );\\n};\\n\\nDateInputField.propTypes = propTypes;\\nDateInputField.defaultProps = defaultProps;\\n\\nexport default DateInputField;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isInvalid = _useState4[0],\n      setIsInvalid = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    error: \"Error message\",\n    help: \"Help message\",\n    isInvalid: isInvalid\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isInvalid={isInvalid}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      dateFieldValue1 = _useState2[0],\n      setDateFieldValue1 = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      dateFieldValue2 = _useState4[0],\n      setDateFieldValue2 = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(true),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      isInline = _useState6[0],\n      setIsInline = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      isInvalid = _useState8[0],\n      setIsInvalid = _useState8[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: dateFieldValue1,\n    onChange: function onChange(event, dateString) {\n      return setDateFieldValue1(dateString);\n    },\n    isInline: isInline,\n    isInvalid: isInvalid,\n    error: \"Error message\",\n    help: \"Help message\"\n  }), _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: dateFieldValue2,\n    onChange: function onChange(event, dateString) {\n      return setDateFieldValue2(dateString);\n    },\n    isInline: isInline,\n    isInvalid: isInvalid,\n    error: \"Error message\",\n    help: \"Help message\"\n  }), _react.default.createElement(\"p\", null, \"First DateInputField Value: \".concat(dateFieldValue1)), _react.default.createElement(\"p\", null, \"Second DateInputField Value: \".concat(dateFieldValue2)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInline(function (inline) {\n        return !inline;\n      });\n    }\n  }, \"Toggle isInline\"), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [dateFieldValue1, setDateFieldValue1] = useState('');\\n  const [dateFieldValue2, setDateFieldValue2] = useState('');\\n  const [isInline, setIsInline] = useState(true);\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={dateFieldValue1}\\n        onChange={(event, dateString) => setDateFieldValue1(dateString)}\\n        isInline={isInline}\\n        isInvalid={isInvalid}\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n      />\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={dateFieldValue2}\\n        onChange={(event, dateString) => setDateFieldValue2(dateString)}\\n        isInline={isInline}\\n        isInvalid={isInvalid}\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n      />\\n      <p>{`First DateInputField Value: ${dateFieldValue1}`}</p>\\n      <p>{`Second DateInputField Value: ${dateFieldValue2}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInline(inline => !inline)}>Toggle isInline</button>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isInvalid = _useState4[0],\n      setIsInvalid = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    showOptional: true,\n    error: \"Error message\",\n    help: \"Help message\",\n    isInvalid: isInvalid\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        showOptional\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isInvalid={isInvalid}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isInvalid = _useState4[0],\n      setIsInvalid = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    required: true,\n    error: \"Error message\",\n    help: \"Help message\",\n    isInvalid: isInvalid\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        required\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isInvalid={isInvalid}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isInvalid = _useState4[0],\n      setIsInvalid = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    required: true,\n    hideRequired: true,\n    error: \"Error message\",\n    help: \"Help message\",\n    isInvalid: isInvalid\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        required\\n        hideRequired\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isInvalid={isInvalid}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isInvalid = _useState4[0],\n      setIsInvalid = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    displayFormat: \"day-month-year\",\n    error: \"Error message\",\n    help: \"Help message\",\n    isInvalid: isInvalid\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        displayFormat=\\\"day-month-year\\\"\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isInvalid={isInvalid}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isInvalid = _useState4[0],\n      setIsInvalid = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    displayFormat: \"month-day-year\",\n    error: \"Error message\",\n    help: \"Help message\",\n    isInvalid: isInvalid\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsInvalid(function (invalid) {\n        return !invalid;\n      });\n    }\n  }, \"Toggle isInvalid\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isInvalid, setIsInvalid] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        displayFormat=\\\"month-day-year\\\"\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isInvalid={isInvalid}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsInvalid(invalid => !invalid)}>Toggle isInvalid</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"terra-date-input/lib/DateInputField\"));\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar Example = function Example() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isIncomplete = _useState4[0],\n      setIsIncomplete = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_DateInputField.default, {\n    legend: \"Legend text\",\n    name: \"date-input-value\",\n    value: value,\n    onChange: function onChange(event, dateString) {\n      return setValue(dateString);\n    },\n    required: true,\n    error: \"Error message\",\n    help: \"Help message\",\n    isIncomplete: isIncomplete\n  }), _react.default.createElement(\"p\", null, \"DateInputField Value: \".concat(value)), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setIsIncomplete(function (incomplete) {\n        return !incomplete;\n      });\n    }\n  }, \"Toggle isIncomplete\"));\n};\n\nvar _default = Example;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DateInputField from 'terra-date-input/lib/DateInputField';\\n\\nconst Example = () => {\\n  const [value, setValue] = useState('');\\n  const [isIncomplete, setIsIncomplete] = useState(false);\\n\\n  return (\\n    <React.Fragment>\\n      <DateInputField\\n        legend=\\\"Legend text\\\"\\n        name=\\\"date-input-value\\\"\\n        value={value}\\n        onChange={(event, dateString) => setValue(dateString)}\\n        required\\n        error=\\\"Error message\\\"\\n        help=\\\"Help message\\\"\\n        isIncomplete={isIncomplete}\\n      />\\n      <p>{`DateInputField Value: ${value}`}</p>\\n      <button type=\\\"button\\\" onClick={() => setIsIncomplete(incomplete => !incomplete)}>Toggle isIncomplete</button>\\n    </React.Fragment>\\n  );\\n};\\n\\nexport default Example;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _DateInputField = _interopRequireDefault(require(\"../../../../docs/DateInputField.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _DateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/DateInputField\"));\n\nvar _DefaultDateInputField = _interopRequireDefault(require(\"../example/DefaultDateInputField\"));\n\nvar _DefaultDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/DefaultDateInputField.jsx\"));\n\nvar _InlineDateInputField = _interopRequireDefault(require(\"../example/InlineDateInputField\"));\n\nvar _InlineDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/InlineDateInputField.jsx\"));\n\nvar _OptionalDateInputField = _interopRequireDefault(require(\"../example/OptionalDateInputField\"));\n\nvar _OptionalDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/OptionalDateInputField.jsx\"));\n\nvar _RequiredDateInputField = _interopRequireDefault(require(\"../example/RequiredDateInputField\"));\n\nvar _RequiredDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/RequiredDateInputField.jsx\"));\n\nvar _HideRequiredDateInputField = _interopRequireDefault(require(\"../example/HideRequiredDateInputField\"));\n\nvar _HideRequiredDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/HideRequiredDateInputField.jsx\"));\n\nvar _DayMonthYearDateInputField = _interopRequireDefault(require(\"../example/DayMonthYearDateInputField\"));\n\nvar _DayMonthYearDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/DayMonthYearDateInputField.jsx\"));\n\nvar _MonthDayYearDateInputField = _interopRequireDefault(require(\"../example/MonthDayYearDateInputField\"));\n\nvar _MonthDayYearDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/MonthDayYearDateInputField.jsx\"));\n\nvar _IncompleteDateInputField = _interopRequireDefault(require(\"../example/IncompleteDateInputField\"));\n\nvar _IncompleteDateInputField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/IncompleteDateInputField.jsx\"));\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-duplicates, import/no-unresolved */\n// Component Source\n// Example Files\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _DateInputField.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Default DateInputField',\n      example: _react.default.createElement(_DefaultDateInputField.default, null),\n      source: _DefaultDateInputField2.default\n    }, {\n      title: 'Required DateInputField',\n      example: _react.default.createElement(_RequiredDateInputField.default, null),\n      source: _RequiredDateInputField2.default\n    }, {\n      title: 'Hide Required DateInputField',\n      example: _react.default.createElement(_HideRequiredDateInputField.default, null),\n      source: _HideRequiredDateInputField2.default\n    }, {\n      title: 'Inline DateInputField',\n      example: _react.default.createElement(_InlineDateInputField.default, null),\n      source: _InlineDateInputField2.default\n    }, {\n      title: 'Optional DateInputField',\n      example: _react.default.createElement(_OptionalDateInputField.default, null),\n      source: _OptionalDateInputField2.default\n    }, {\n      title: 'Month Day Year Display Format DateInputField',\n      example: _react.default.createElement(_MonthDayYearDateInputField.default, null),\n      source: _MonthDayYearDateInputField2.default\n    }, {\n      title: 'Day Month Year Display Format DateInputField',\n      example: _react.default.createElement(_DayMonthYearDateInputField.default, null),\n      source: _DayMonthYearDateInputField2.default\n    }, {\n      title: 'Incomplete DateInputField',\n      description: 'Applies theme-specific styling for incomplete. ***Note: Only use incomplete if given specific guidance, reserved for specific applications when no value has been provided. Not for general use.***',\n      example: _react.default.createElement(_IncompleteDateInputField.default, null),\n      source: _IncompleteDateInputField2.default\n    }],\n    propsTables: [{\n      componentName: 'DateInputField',\n      componentSrc: _DateInputField2.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}