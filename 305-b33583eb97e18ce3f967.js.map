{"version":3,"sources":["webpack:///./packages/terra-modal-manager/docs/UPGRADEGUIDE.md","webpack:///./packages/terra-modal-manager/lib/terra-dev-site/doc/modal-manager/UpgradeGuide.3.doc.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_terraDocTemplate","_package","_UPGRADEGUIDE","_default","createElement","packageName","name","srcPath","concat","readme"],"mappings":"upDAAA,OAAe,+wD,kCCEf,IAAIA,EAAyBC,EAAQ,GAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAExCO,EAAoBR,EAAuBC,EAAQ,OAEnDQ,EAAWR,EAAQ,MAEnBS,EAAgBV,EAAuBC,EAAQ,OAU/CU,EARU,WACZ,OAAOJ,EAAOD,QAAQM,cAAcJ,EAAkBF,QAAS,CAC7DO,YAAaJ,EAASK,KACtBC,QAAS,kEAAkEC,OAAOP,EAASK,MAC3FG,OAAQP,EAAcJ,WAK1BF,EAAQE,QAAUK","file":"305-b33583eb97e18ce3f967.js","sourcesContent":["export default \"# Terra Modal Manager - Upgrade Guide\\n\\n## Upgrading from v3.x to v4.x\\n\\nWith the release of terra-disclosure-manager v3.x, the ModalManager now provides its APIs through context instead of prop injection. Please view the terra-disclosure-manager documentation/upgrade guide for more information. \\n\\nThe below example code details the changes necessary to interact with terra-modal-manager v4.x.\\n\\n```diff\\n/**\\n * v3.x to v4.x\\n */\\n import Base from 'terra-base';\\n import ModalManager from 'terra-modal-manager'; \\n- import AppDelegate from 'terra-app-delegate';\\n+ import { withDisclosureManager, disclosureManagerShape } from 'terra-disclosure-manager';\\n\\n- const MyDisclosureComponent = ({ app }) => (\\n+ const MyDisclosureComponent = withDisclosureManager(({ disclosureManager }) => (\\n   <Button\\n     text=\\\"Close Modal\\\"\\n     onClick={() => { \\n-      app.closeDisclosure();\\n+      disclosureManager.closeDisclosure();\\n     }}\\n   />\\n- );\\n+ ));\\n\\n MyDisclosureComponent.propType = {\\n-   app: AppDelegate.propType,\\n+   disclosureManager: disclosureManagerShape,\\n };\\n\\n- const MyComponent = ({ app }) => (\\n+ const MyComponent = withDisclosureManager(({ disclosureManager }) => (\\n    <Button\\n      text=\\\"Launch Modal\\\"\\n      onClick={() => { \\n-       app.disclose({\\n+       disclosureManager.disclose({\\n          preferredType: 'modal',\\n          content: {\\n            key: 'MY-MODAL-DISCLOSURE',\\n            component: <MyDisclosureComponent />,\\n          }\\n        });\\n      }}\\n   />\\n- );\\n+ ));\\n \\n MyComponent.propType = {\\n-   app: AppDelegate.propType,\\n+   disclosureManager: disclosureManagerShape,\\n };\\n\\n const MyApp = () => (\\n   <Base locale=\\\"en\\\">\\n     <ModalManager>\\n       <MyComponent />\\n     </ModalManager>\\n   </Base>\\n );\\n```\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _UPGRADEGUIDE = _interopRequireDefault(require(\"../../../../docs/UPGRADEGUIDE.md\"));\n\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    readme: _UPGRADEGUIDE.default\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}