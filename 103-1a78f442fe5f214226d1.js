(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{1005:function(e,t){},1023:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=s(n(0)),a=s(n(2)),o=s(n(4)),r=s(n(1046));function s(e){return e&&e.__esModule?e:{default:e}}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=o.default.bind(r.default),d={variant:a.default.oneOf(["light","dark"]),title:a.default.string},m=function(e){var t=e.variant,n=e.title,a=l(e,["variant","title"]),o=u(["placeholder",a.className]),r=u(["inner","is-".concat(t)]);return i.default.createElement("div",c({},a,{className:o}),i.default.createElement("div",{className:r},i.default.createElement("h2",null,n)))};m.propTypes=d,m.defaultProps={variant:"dark",title:""};var f=m;t.default=f},1046:function(e,t,n){e.exports={placeholder:"Placeholder-module__placeholder___37I0I",inner:"Placeholder-module__inner___2DX7N","is-light":"Placeholder-module__is-light___3__YD","is-dark":"Placeholder-module__is-dark___9wQwQ"}},1074:function(e,t,n){e.exports={placeholder:"InfiniteListDocExampleCommon-module__placeholder___3oD89","item-content":"InfiniteListDocExampleCommon-module__item-content___19iKr","main-content":"InfiniteListDocExampleCommon-module__main-content___1JBWw"}},1099:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),o=i(n(4)),r=i(n(1074)),s=o.default.bind(r.default),c=function(e){var t=e.children;return a.default.createElement("div",{className:s("main-content")},t)};t.default=c},1141:function(e){e.exports=JSON.parse('{"name":"terra-infinite-list","main":"lib/index.js","version":"3.23.0","description":"The infinite list component provides virtual dom management and data request callbacks to manage large data sets within a list.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","terra-infinite-list","InfiniteList","Infinite","List","Virtualization","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","resize-observer-polyfill":"^1.4.1","terra-list":"^4.0.0","terra-visually-hidden-text":"^2.0.0"},"devDependencies":{"terra-doc-template":"^2.2.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","props-table":"props-table ./src/InfiniteList.jsx --out-dir ./docs/props-table","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},2041:function(e,t,n){"use strict";n.r(t),t.default="# Terra InfiniteList - Subsections\n\nTo achieve sections within the InfiniteList the only supported implementation is directly consuming the static variant of the `SectionHeader` and `SubsectionHeader` component. Expand/collapse functionality is not supported within the infinite list. \n\n## Map Section Structure\nSo in our first step a `SectionHeader` needs to be created for each associated section. We'll add it to the initialization of an array that will be expanded in the following steps.\n```jsx\n  const createSection = (sectionData) => {\n    const section = [\n      <SectionHeader\n        key={sectionData.key}\n        title={sectionData.title}\n      />,\n    ];\n    return section;\n  };\n```\nNext we'll create an array with the first item being our section header, and then loop through the associated child sub sections for the section appending them to the initial array.\n```jsx\n  const createSection = (sectionData) => {\n    const section = [\n      <SectionHeader\n        key={sectionData.key}\n        title={sectionData.title}\n      />,\n    ];\n    sectionData.childItems.forEach(childItem => section.push(createSection(childItem)));\n    return section;\n  };\n```\n## Map Subsection Structure\nSo in our first step a `SubsectionHeader` needs to be created for each associated section. We'll add it to the initialization of an array that will be expanded in following steps.\n```jsx\nconst createSubSection = (subsectionData) => {\n  const section = [\n    <SubsectionHeader\n      key={subsectionData.key}\n      title={subsectionData.title}\n    />,\n  ];\n  return section;\n};\n```\nNext we'll create an array with the first item being our subsection header, and then loop through the associated child items for the section appending them to the initial array.\n```jsx\nconst createSubSection = (subsectionData) => {\n  const section = [\n    <SubsectionHeader\n      key={subsectionData.key}\n      title={subsectionData.title}\n    />,\n  ];\n  subsectionData.childItems.forEach(childItem => section.push(createListItem(childItem)));\n  return section;\n};\n```\n## Unpack Data\nWe can then implement the unpack of our data into our list items.\n```jsx\nconst createListItem = itemData => (\n  <Item key={itemData.key}>\n    <Placeholder title={itemData.title} />\n  </Item>\n);\n\nconst createSections = data => data.map(section => createSection(section));\n```\nThen we can implement a method to loop through our data and create the section with our methods and call it from our render method.\n```jsx\nconst InfiniteListSection = () => (\n  <MyExampleContainer>\n    <InfiniteList\n      dividerStyle=\"standard\"\n      isFinishedLoading\n    >\n      {createSections(mockData)}\n    </InfiniteList>\n  </MyExampleContainer>\n);\n```\n\nUsing these steps we get the following example:\n"},2042:function(e,t,n){"use strict";var i=n(15),a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n(0)),r=i(n(364)),s=a(n(1023)),c=a(n(4)),l=a(n(2043)),u=a(n(1099)),d=a(n(1074)),m=c.default.bind(d.default),f=function(e){var t=[o.default.createElement(r.SubsectionHeader,{key:e.key,title:e.title})];return e.childItems.forEach((function(e){return t.push((n=e,o.default.createElement(r.Item,{key:n.key},o.default.createElement(s.default,{title:n.title,className:m("placeholder")}))));var n})),t},p=function(e){return e.map((function(e){return function(e){var t=[o.default.createElement(r.SectionHeader,{key:e.key,title:e.title})];return e.childItems.forEach((function(e){return t.push(f(e))})),t}(e)}))},h=function(){return o.default.createElement(u.default,null,o.default.createElement(r.default,{dividerStyle:"standard",isFinishedLoading:!0},p(l.default)))};t.default=h},2043:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=[{title:"Section 0",key:"unique-key-0",childItems:[{title:"Subsection 0-0",key:"unique-key-0-0",childItems:[{title:"Item 0-0-0",key:"unique-0-0-0"},{title:"Item 0-0-1",key:"unique-0-0-1"},{title:"Item 0-0-2",key:"unique-0-0-2"},{title:"Item 0-0-3",key:"unique-0-0-3"},{title:"Item 0-0-4",key:"unique-0-0-4"},{title:"Item 0-0-5",key:"unique-0-0-5"}]},{title:"Subsection 0-1",key:"unique-key-0-1",childItems:[{title:"Item 0-1-0",key:"unique-0-1-0"},{title:"Item 0-1-1",key:"unique-0-1-1"},{title:"Item 0-1-2",key:"unique-0-1-2"},{title:"Item 0-1-3",key:"unique-0-1-3"},{title:"Item 0-1-4",key:"unique-0-1-4"},{title:"Item 0-1-5",key:"unique-0-1-5"}]}]},{title:"Section 1",key:"unique-key-1",childItems:[{title:"Subsection 1-0",key:"unique-key-1-0",childItems:[{title:"Item 1-0-0",key:"unique-1-0-0"},{title:"Item 1-0-1",key:"unique-1-0-1"},{title:"Item 1-0-2",key:"unique-1-0-2"},{title:"Item 1-0-3",key:"unique-1-0-3"},{title:"Item 1-0-4",key:"unique-1-0-4"},{title:"Item 1-0-5",key:"unique-1-0-5"}]},{title:"Subsection 1-1",key:"unique-key-1-1",childItems:[{title:"Item 1-1-0",key:"unique-1-1-0"},{title:"Item 1-1-1",key:"unique-1-1-1"},{title:"Item 1-1-2",key:"unique-1-1-2"},{title:"Item 1-1-3",key:"unique-1-1-3"},{title:"Item 1-1-4",key:"unique-1-1-4"},{title:"Item 1-1-5",key:"unique-1-1-5"}]}]},{title:"Section 2",key:"unique-key-2",childItems:[{title:"Subsection 2-0",key:"unique-key-2-0",childItems:[{title:"Item 2-0-0",key:"unique-2-0-0"},{title:"Item 2-0-1",key:"unique-2-0-1"},{title:"Item 2-0-2",key:"unique-2-0-2"},{title:"Item 2-0-3",key:"unique-2-0-3"},{title:"Item 2-0-4",key:"unique-2-0-4"},{title:"Item 2-0-5",key:"unique-2-0-5"}]},{title:"Subsection 2-1",key:"unique-key-2-1",childItems:[{title:"Item 2-1-0",key:"unique-2-1-0"},{title:"Item 2-1-1",key:"unique-2-1-1"},{title:"Item 2-1-2",key:"unique-2-1-2"},{title:"Item 2-1-3",key:"unique-2-1-3"},{title:"Item 2-1-4",key:"unique-2-1-4"},{title:"Item 2-1-5",key:"unique-2-1-5"}]}]}];t.default=i},2044:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport InfiniteList, { Item, SectionHeader, SubsectionHeader } from 'terra-infinite-list/lib/index';\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\nimport classNames from 'classnames/bind';\n\nimport mockData from './mock-data/mock-subsection';\nimport MyExampleContainer from '../common/MyExampleContainer';\nimport styles from '../example/InfiniteListDocExampleCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst createListItem = itemData => (\n  <Item key={itemData.key}>\n    <Placeholder title={itemData.title} className={cx('placeholder')} />\n  </Item>\n);\n\nconst createSubSection = (subsectionData) => {\n  const section = [\n    <SubsectionHeader\n      key={subsectionData.key}\n      title={subsectionData.title}\n    />,\n  ];\n  subsectionData.childItems.forEach(childItem => section.push(createListItem(childItem)));\n  return section;\n};\n\nconst createSection = (sectionData) => {\n  const section = [\n    <SectionHeader\n      key={sectionData.key}\n      title={sectionData.title}\n    />,\n  ];\n  sectionData.childItems.forEach(subsection => section.push(createSubSection(subsection)));\n  return section;\n};\n\nconst createSections = data => data.map(section => createSection(section));\n\nconst InfiniteListSection = () => (\n  <MyExampleContainer>\n    <InfiniteList\n      dividerStyle=\"standard\"\n      isFinishedLoading\n    >\n      {createSections(mockData)}\n    </InfiniteList>\n  </MyExampleContainer>\n);\n\nexport default InfiniteListSection;\n"},2354:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),o=i(n(1004)),r=n(1141),s=i(n(2041)),c=i(n(2042)),l=i(n(2044)),u=function(){return a.default.createElement(o.default,{packageName:r.name,readme:s.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(r.name),examples:[{title:"Sections Header Infinite List",example:a.default.createElement(c.default,null),source:l.default}]})};t.default=u}}]);
//# sourceMappingURL=103-1a78f442fe5f214226d1.js.map