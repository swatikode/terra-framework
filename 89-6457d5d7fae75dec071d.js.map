{"version":3,"sources":["webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/example/AbstractModalDocCommon.module.scss?d469","webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/example/ExampleAbstractSize.module.scss?7e22","webpack:///./packages/terra-abstract-modal/docs/README.md","webpack:///./packages/terra-abstract-modal/src/AbstractModal.jsx","webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/example/AbstractModalIsOpened.js","webpack:///./packages/terra-abstract-modal/src/terra-dev-site/doc/example/AbstractModalIsOpened.jsx","webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/example/AbstractModalCloseOnOutsideClick.js","webpack:///./packages/terra-abstract-modal/src/terra-dev-site/doc/example/AbstractModalCloseOnOutsideClick.jsx","webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/example/AbstractModalIsFullscreen.js","webpack:///./packages/terra-abstract-modal/src/terra-dev-site/doc/example/AbstractModalIsFullscreen.jsx","webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/example/AbstractModalAlertDialog.js","webpack:///./packages/terra-abstract-modal/src/terra-dev-site/doc/example/AbstractModalAlertDialog.jsx","webpack:///./packages/terra-abstract-modal/lib/terra-dev-site/doc/abstract-modal/AbstractModal.doc.js"],"names":["module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_react","_terraAbstractModal","_bind","_ExampleAbstractSizeModule","_AbstractModalDocCommonModule","cx","bind","_default","_React$Component","AbstractModalIsOpen","_this","this","call","state","isOpen","handleOpenModal","handleCloseModal","key","setState","createElement","ariaLabel","onRequestClose","classNameModal","className","type","onClick","Component","AbstractModalCloseOnOutsideClick","closeOnOutsideClick","AbstractModalIsFullscreen","isFullscreen","_interopRequireWildcard","AlertDialogContent","_ref","confirmBtn","useRef","useEffect","current","focus","id","ref","AbstractModalAlertDialog","role","_terraDocTemplate","_README","_package","_AbstractModal","_AbstractModalIsOpened","_AbstractModalIsOpened2","_AbstractModalCloseOnOutsideClick","_AbstractModalCloseOnOutsideClick2","_AbstractModalIsFullscreen","_AbstractModalIsFullscreen2","_AbstractModalAlertDialog","_AbstractModalAlertDialog2","packageName","name","readme","srcPath","concat","examples","title","example","source","propsTables","componentName","componentSrc"],"mappings":"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","file":"89-6457d5d7fae75dec071d.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-wrapper\":\"AbstractModalDocCommon-module__content-wrapper___TPyHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed-size\":\"ExampleAbstractSize-module__fixed-size___1tr2m\"};","export default \"# Terra Abstract Modal\\n\\nThe abstract modal is a structural component that provides the ability to display portal'd content in a layer above the app. It consists of an overlay and an unstyled absolute positioned div in which content can be placed. The abstract modal is not intended to be consumed directly, but rather wrapped in a higher order component. Higher order components can provide the abstract modal with sizing, visual styles, and content (e.g; header, body, and actionable buttons). The abstract modals maximum size is constrained by the viewport size, so the content placed inside the modal needs to be responsive.\\n\\nOur recommendation for HOC is the [terra-modal-manager][1], as it provides sizing, responsive behavior, visual styles, and a disclosure stack.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-abstract-modal`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n| react-intl | ^2.9.0 |\\n\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n[1]: https://github.com/cerner/terra-framework/tree/master/packages/terra-modal-manager/docs\\n\\n## Component Features\\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Portal } from 'react-portal';\\nimport * as KeyCode from 'keycode-js';\\nimport 'mutationobserver-shim';\\nimport './_contains-polyfill';\\nimport './_matches-polyfill';\\nimport ModalContent from './_ModalContent';\\n\\nconst zIndexes = ['6000', '7000', '8000', '9000'];\\n\\nconst propTypes = {\\n  /**\\n   * String that labels the modal for screen readers.\\n   */\\n  ariaLabel: PropTypes.string.isRequired,\\n  /**\\n   * Content inside the modal dialog.\\n   */\\n  children: PropTypes.node.isRequired,\\n  /**\\n   * CSS classnames that are appended to the modal.\\n   */\\n  classNameModal: PropTypes.string,\\n  /**\\n   * CSS classnames that are appended to the overlay.\\n   */\\n  classNameOverlay: PropTypes.string,\\n  /**\\n   * If set to true, the modal will close when the esc key is pressed.\\n   */\\n  closeOnEsc: PropTypes.bool,\\n  /**\\n   * If set to true, the modal will close when a mouse click is triggered outside the modal.\\n   */\\n  closeOnOutsideClick: PropTypes.bool,\\n  /**\\n   * If set to true, the modal will be fullscreen on all breakpoint sizes.\\n   */\\n  isFullscreen: PropTypes.bool,\\n  /**\\n   * If set to true, the modal will rendered as opened.\\n   */\\n  isOpen: PropTypes.bool.isRequired,\\n  /**\\n   * Callback function indicating a close condition was met, should be combined with isOpen for state management.\\n   */\\n  onRequestClose: PropTypes.func.isRequired,\\n  /**\\n   * Role attribute on the modal dialog.\\n   */\\n  role: PropTypes.string,\\n  /**\\n   * Allows assigning of root element custom data attribute for easy selecting of document base component.\\n   */\\n  rootSelector: PropTypes.string,\\n  /**\\n   * Z-Index layer to apply to the ModalContent and ModalOverlay. Valid values are the standard modal layer: '6000', and the max layer: '8000'.\\n   */\\n  zIndex: PropTypes.oneOf(zIndexes),\\n};\\n\\nconst defaultProps = {\\n  classNameModal: null,\\n  classNameOverlay: null,\\n  closeOnEsc: true,\\n  closeOnOutsideClick: true,\\n  isFullscreen: false,\\n  role: 'dialog',\\n  rootSelector: '#root',\\n  zIndex: '6000',\\n};\\n\\nclass AbstractModal extends React.Component {\\n  constructor() {\\n    super();\\n    this.state = {\\n      modalTrigger: undefined,\\n    };\\n    this.handleKeydown = this.handleKeydown.bind(this);\\n    this.showModalDomUpdates = this.showModalDomUpdates.bind(this);\\n    this.hideModalDomUpdates = this.hideModalDomUpdates.bind(this);\\n    this.modalElement = React.createRef();\\n  }\\n\\n  componentDidMount() {\\n    // eslint-disable-next-line no-prototype-builtins\\n    if (!Element.prototype.hasOwnProperty('inert')) {\\n      // IE10 throws an error if wicg-inert is imported too early, as wicg-inert tries to set an observer on document.body which may not exist on import\\n      // eslint-disable-next-line global-require\\n      require('wicg-inert/dist/inert');\\n    }\\n    document.addEventListener('keydown', this.handleKeydown);\\n\\n    if (this.props.isOpen) {\\n      this.showModalDomUpdates();\\n    }\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (this.props.isOpen) {\\n      if (!prevProps.isOpen) {\\n        this.showModalDomUpdates();\\n      }\\n    } else if (prevProps.isOpen) {\\n      this.hideModalDomUpdates();\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    document.removeEventListener('keydown', this.handleKeydown);\\n    this.hideModalDomUpdates();\\n  }\\n\\n  showModalDomUpdates() {\\n    const mainDocumentElement = document.querySelector(this.props.rootSelector);\\n    // Store element that was last focused prior to modal opening\\n    this.setState({ modalTrigger: document.activeElement });\\n\\n    if (mainDocumentElement) {\\n      const inert = +mainDocumentElement.getAttribute('data-overlay-count');\\n\\n      if (!mainDocumentElement.hasAttribute('data-overlay-count')) {\\n        mainDocumentElement.setAttribute('data-overlay-count', '1');\\n        mainDocumentElement.setAttribute('inert', '');\\n      } else if (mainDocumentElement && mainDocumentElement.hasAttribute('data-overlay-count')) {\\n        mainDocumentElement.setAttribute('data-overlay-count', `${inert + 1}`);\\n      }\\n\\n      // Handle focus shift for VoiceOver on iOS\\n      if ('ontouchstart' in window) {\\n        this.modalElement.current.querySelector('[data-terra-abstract-modal-begin]').focus();\\n      } else {\\n        // Shift focus to modal dialog\\n        this.modalElement.current.focus();\\n      }\\n    }\\n  }\\n\\n  hideModalDomUpdates() {\\n    const mainDocumentElement = document.querySelector(this.props.rootSelector);\\n\\n    if (mainDocumentElement) {\\n      const inert = +mainDocumentElement.getAttribute('data-overlay-count');\\n\\n      if (inert === 1) {\\n        mainDocumentElement.removeAttribute('data-overlay-count');\\n        mainDocumentElement.removeAttribute('inert');\\n        // Ensures aria-hidden is properly cleaned up\\n        setTimeout(() => mainDocumentElement.removeAttribute('aria-hidden'), 0);\\n      } else if (inert && inert > 1) {\\n        mainDocumentElement.setAttribute('data-overlay-count', `${inert - 1}`);\\n      }\\n    }\\n\\n    setTimeout(() => {\\n      if (this.state.modalTrigger && this.state.modalTrigger.focus) {\\n        // Shift focus back to element that was last focused prior to opening the modal\\n        this.state.modalTrigger.focus();\\n      } else {\\n        // In some cases on IE, when the focus cannot be restored on the element (SVG element, for instance)\\n        // that was last focused prior to opening the modal, place the focus on the HTML body element to repro\\n        // the behavior noticed on other major browsers.\\n        document.querySelector('body').focus();\\n      }\\n    }, 0); // Allows inert processing to finish before shifting focus back\\n  }\\n\\n  handleKeydown(e) {\\n    const body = document.querySelector('body');\\n    if (e.keyCode === KeyCode.KEY_ESCAPE && this.props.isOpen && this.props.closeOnEsc) {\\n      if (this.modalElement.current) {\\n        if (e.target === this.modalElement.current || this.modalElement.current.contains(e.target) || e.target === body) {\\n          this.props.onRequestClose();\\n        }\\n      }\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      ariaLabel,\\n      children,\\n      classNameModal,\\n      classNameOverlay,\\n      closeOnEsc,\\n      closeOnOutsideClick,\\n      isFullscreen,\\n      isOpen,\\n      role,\\n      rootSelector,\\n      onRequestClose,\\n      zIndex,\\n      ...customProps\\n    } = this.props;\\n\\n    if (!isOpen) {\\n      return null;\\n    }\\n\\n    return (\\n      <Portal\\n        isOpened={isOpen}\\n      >\\n        <ModalContent\\n          {...customProps}\\n          closeOnOutsideClick={closeOnOutsideClick}\\n          ariaLabel={ariaLabel}\\n          classNameModal={classNameModal}\\n          classNameOverlay={classNameOverlay}\\n          role={role}\\n          isFullscreen={isFullscreen}\\n          onRequestClose={onRequestClose}\\n          zIndex={zIndex}\\n          aria-modal=\\\"true\\\"\\n          ref={this.modalElement}\\n        >\\n          {children}\\n        </ModalContent>\\n      </Portal>\\n    );\\n  }\\n}\\n\\nAbstractModal.propTypes = propTypes;\\nAbstractModal.defaultProps = defaultProps;\\n\\nexport default AbstractModal;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraAbstractModal = _interopRequireDefault(require(\"terra-abstract-modal\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ExampleAbstractSizeModule = _interopRequireDefault(require(\"./ExampleAbstractSize.module.scss\"));\n\nvar _AbstractModalDocCommonModule = _interopRequireDefault(require(\"./AbstractModalDocCommon.module.scss\"));\n\nvar cx = _bind.default.bind(_AbstractModalDocCommonModule.default);\n\nvar AbstractModalIsOpen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(AbstractModalIsOpen, _React$Component);\n\n  function AbstractModalIsOpen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AbstractModalIsOpen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractModalIsOpen).call(this));\n    _this.state = {\n      isOpen: false\n    };\n    _this.handleOpenModal = _this.handleOpenModal.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleCloseModal = _this.handleCloseModal.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(AbstractModalIsOpen, [{\n    key: \"handleOpenModal\",\n    value: function handleOpenModal() {\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        isOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_terraAbstractModal.default, {\n        ariaLabel: \"Default Modal\",\n        isOpen: this.state.isOpen,\n        onRequestClose: this.handleCloseModal,\n        classNameModal: _ExampleAbstractSizeModule.default['fixed-size']\n      }, _react.default.createElement(\"div\", {\n        className: cx('content-wrapper')\n      }, _react.default.createElement(\"h1\", null, \"Default Modal\"), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"You can close the modal by:\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, \"- Pressing the ESC key\"), _react.default.createElement(\"li\", null, \"- Clicking on the overlay\"), _react.default.createElement(\"li\", null, \"- Clicking on the close button\")), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"On smaller screens, the modal will take up the full screen.\"), _react.default.createElement(\"p\", null), _react.default.createElement(\"br\", null), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleCloseModal\n      }, \"Close Modal\"))), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleOpenModal\n      }, \"Open Modal\"));\n    }\n  }]);\n  return AbstractModalIsOpen;\n}(_react.default.Component);\n\nvar _default = AbstractModalIsOpen;\nexports.default = _default;","export default \"import React from 'react';\\nimport AbstractModal from 'terra-abstract-modal';\\nimport classNames from 'classnames/bind';\\nimport styles from './ExampleAbstractSize.module.scss';\\nimport generalStyles from './AbstractModalDocCommon.module.scss';\\n\\nconst cx = classNames.bind(generalStyles);\\n\\nclass AbstractModalIsOpen extends React.Component {\\n  constructor() {\\n    super();\\n\\n    this.state = {\\n      isOpen: false,\\n    };\\n\\n    this.handleOpenModal = this.handleOpenModal.bind(this);\\n    this.handleCloseModal = this.handleCloseModal.bind(this);\\n  }\\n\\n  handleOpenModal() {\\n    this.setState({ isOpen: true });\\n  }\\n\\n  handleCloseModal() {\\n    this.setState({ isOpen: false });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <AbstractModal\\n          ariaLabel=\\\"Default Modal\\\"\\n          isOpen={this.state.isOpen}\\n          onRequestClose={this.handleCloseModal}\\n          classNameModal={styles['fixed-size']}\\n        >\\n          <div className={cx('content-wrapper')}>\\n            <h1>Default Modal</h1>\\n            <br />\\n            <p>You can close the modal by:</p>\\n            <ul>\\n              <li>- Pressing the ESC key</li>\\n              <li>- Clicking on the overlay</li>\\n              <li>- Clicking on the close button</li>\\n            </ul>\\n            <br />\\n            <p>On smaller screens, the modal will take up the full screen.</p>\\n            <p />\\n            <br />\\n            <button type=\\\"button\\\" onClick={this.handleCloseModal}>Close Modal</button>\\n          </div>\\n        </AbstractModal>\\n        <button type=\\\"button\\\" onClick={this.handleOpenModal}>Open Modal</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default AbstractModalIsOpen;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraAbstractModal = _interopRequireDefault(require(\"terra-abstract-modal\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ExampleAbstractSizeModule = _interopRequireDefault(require(\"./ExampleAbstractSize.module.scss\"));\n\nvar _AbstractModalDocCommonModule = _interopRequireDefault(require(\"./AbstractModalDocCommon.module.scss\"));\n\nvar cx = _bind.default.bind(_AbstractModalDocCommonModule.default);\n\nvar AbstractModalCloseOnOutsideClick =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(AbstractModalCloseOnOutsideClick, _React$Component);\n\n  function AbstractModalCloseOnOutsideClick() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AbstractModalCloseOnOutsideClick);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractModalCloseOnOutsideClick).call(this));\n    _this.state = {\n      isOpen: false\n    };\n    _this.handleOpenModal = _this.handleOpenModal.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleCloseModal = _this.handleCloseModal.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(AbstractModalCloseOnOutsideClick, [{\n    key: \"handleOpenModal\",\n    value: function handleOpenModal() {\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        isOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_terraAbstractModal.default, {\n        ariaLabel: \"Modal disable close on outside click\",\n        isOpen: this.state.isOpen,\n        closeOnOutsideClick: false,\n        onRequestClose: this.handleCloseModal,\n        classNameModal: _ExampleAbstractSizeModule.default['fixed-size']\n      }, _react.default.createElement(\"div\", {\n        className: cx('content-wrapper')\n      }, _react.default.createElement(\"h1\", null, \"Modal disable close on outside click\"), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"You can close the modal by:\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, \"- Pressing the ESC key\"), _react.default.createElement(\"li\", null, \"- Clicking on the close button\")), _react.default.createElement(\"br\", null), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleCloseModal\n      }, \"Close Modal\"))), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleOpenModal\n      }, \"Open Modal\"));\n    }\n  }]);\n  return AbstractModalCloseOnOutsideClick;\n}(_react.default.Component);\n\nvar _default = AbstractModalCloseOnOutsideClick;\nexports.default = _default;","export default \"import React from 'react';\\nimport AbstractModal from 'terra-abstract-modal';\\nimport classNames from 'classnames/bind';\\nimport styles from './ExampleAbstractSize.module.scss';\\nimport generalStyles from './AbstractModalDocCommon.module.scss';\\n\\nconst cx = classNames.bind(generalStyles);\\n\\nclass AbstractModalCloseOnOutsideClick extends React.Component {\\n  constructor() {\\n    super();\\n\\n    this.state = {\\n      isOpen: false,\\n    };\\n\\n    this.handleOpenModal = this.handleOpenModal.bind(this);\\n    this.handleCloseModal = this.handleCloseModal.bind(this);\\n  }\\n\\n  handleOpenModal() {\\n    this.setState({ isOpen: true });\\n  }\\n\\n  handleCloseModal() {\\n    this.setState({ isOpen: false });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <AbstractModal\\n          ariaLabel=\\\"Modal disable close on outside click\\\"\\n          isOpen={this.state.isOpen}\\n          closeOnOutsideClick={false}\\n          onRequestClose={this.handleCloseModal}\\n          classNameModal={styles['fixed-size']}\\n        >\\n          <div className={cx('content-wrapper')}>\\n            <h1>Modal disable close on outside click</h1>\\n            <br />\\n            <p>You can close the modal by:</p>\\n            <ul>\\n              <li>- Pressing the ESC key</li>\\n              <li>- Clicking on the close button</li>\\n            </ul>\\n            <br />\\n            <button type=\\\"button\\\" onClick={this.handleCloseModal}>Close Modal</button>\\n          </div>\\n        </AbstractModal>\\n        <button type=\\\"button\\\" onClick={this.handleOpenModal}>Open Modal</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default AbstractModalCloseOnOutsideClick;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraAbstractModal = _interopRequireDefault(require(\"terra-abstract-modal\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _AbstractModalDocCommonModule = _interopRequireDefault(require(\"./AbstractModalDocCommon.module.scss\"));\n\nvar cx = _bind.default.bind(_AbstractModalDocCommonModule.default);\n\nvar AbstractModalIsFullscreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(AbstractModalIsFullscreen, _React$Component);\n\n  function AbstractModalIsFullscreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AbstractModalIsFullscreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractModalIsFullscreen).call(this));\n    _this.state = {\n      isOpen: false\n    };\n    _this.handleOpenModal = _this.handleOpenModal.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleCloseModal = _this.handleCloseModal.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(AbstractModalIsFullscreen, [{\n    key: \"handleOpenModal\",\n    value: function handleOpenModal() {\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        isOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_terraAbstractModal.default, {\n        ariaLabel: \"Fullscreen Modal\",\n        isOpen: this.state.isOpen,\n        isFullscreen: true,\n        onRequestClose: this.handleCloseModal\n      }, _react.default.createElement(\"div\", {\n        className: cx('content-wrapper')\n      }, _react.default.createElement(\"h1\", null, \"Fullscreen Modal\"), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"This modal will always take up the full screen.\"), _react.default.createElement(\"p\", null), _react.default.createElement(\"br\", null), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleCloseModal\n      }, \"Close Modal\"))), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleOpenModal\n      }, \"Open Modal\"));\n    }\n  }]);\n  return AbstractModalIsFullscreen;\n}(_react.default.Component);\n\nvar _default = AbstractModalIsFullscreen;\nexports.default = _default;","export default \"import React from 'react';\\nimport AbstractModal from 'terra-abstract-modal';\\nimport classNames from 'classnames/bind';\\nimport styles from './AbstractModalDocCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nclass AbstractModalIsFullscreen extends React.Component {\\n  constructor() {\\n    super();\\n\\n    this.state = {\\n      isOpen: false,\\n    };\\n\\n    this.handleOpenModal = this.handleOpenModal.bind(this);\\n    this.handleCloseModal = this.handleCloseModal.bind(this);\\n  }\\n\\n  handleOpenModal() {\\n    this.setState({ isOpen: true });\\n  }\\n\\n  handleCloseModal() {\\n    this.setState({ isOpen: false });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <AbstractModal\\n          ariaLabel=\\\"Fullscreen Modal\\\"\\n          isOpen={this.state.isOpen}\\n          isFullscreen\\n          onRequestClose={this.handleCloseModal}\\n        >\\n          <div className={cx('content-wrapper')}>\\n            <h1>Fullscreen Modal</h1>\\n            <br />\\n            <p>This modal will always take up the full screen.</p>\\n            <p />\\n            <br />\\n            <button type=\\\"button\\\" onClick={this.handleCloseModal}>Close Modal</button>\\n          </div>\\n        </AbstractModal>\\n        <button type=\\\"button\\\" onClick={this.handleOpenModal}>Open Modal</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default AbstractModalIsFullscreen;\\n\"","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _terraAbstractModal = _interopRequireDefault(require(\"terra-abstract-modal\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ExampleAbstractSizeModule = _interopRequireDefault(require(\"./ExampleAbstractSize.module.scss\"));\n\nvar _AbstractModalDocCommonModule = _interopRequireDefault(require(\"./AbstractModalDocCommon.module.scss\"));\n\nvar cx = _bind.default.bind(_AbstractModalDocCommonModule.default);\n/* eslint-disable-next-line react/prop-types */\n\n\nvar AlertDialogContent = function AlertDialogContent(_ref) {\n  var handleCloseModal = _ref.handleCloseModal;\n  var confirmBtn = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    confirmBtn.current.focus();\n  }, []);\n  return _react.default.createElement(\"div\", {\n    id: \"alert-dialog-content\",\n    className: cx('content-wrapper')\n  }, _react.default.createElement(\"h1\", null, \"Alert Dialog Modal\"), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"The abstract modal can be used to create an alert dialog modal. You can use the role,\", ' ', _react.default.createElement(\"code\", null, \"alertdialog\"), ' ', \", to create a modal dialog that interrupts the users workflow to get a response, usually some sort of confirmation.\"), _react.default.createElement(\"button\", {\n    ref: confirmBtn,\n    type: \"button\",\n    onClick: handleCloseModal\n  }, \"Confirm action\"), _react.default.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleCloseModal\n  }, \"Close Modal\"));\n};\n/* VoiceOver will not read the content of the modal dialog if the role attribute\n is set to `alertdialog` and ariaLabel is defined */\n\n\nvar ariaLabel = '';\n\nvar AbstractModalAlertDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(AbstractModalAlertDialog, _React$Component);\n\n  function AbstractModalAlertDialog() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AbstractModalAlertDialog);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractModalAlertDialog).call(this));\n    _this.state = {\n      isOpen: false\n    };\n    _this.handleOpenModal = _this.handleOpenModal.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleCloseModal = _this.handleCloseModal.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(AbstractModalAlertDialog, [{\n    key: \"handleOpenModal\",\n    value: function handleOpenModal() {\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        isOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_terraAbstractModal.default, {\n        ariaLabel: ariaLabel,\n        \"aria-labelledby\": \"alert-dialog-content\",\n        isOpen: this.state.isOpen,\n        onRequestClose: this.handleCloseModal,\n        closeOnOutsideClick: false,\n        classNameModal: _ExampleAbstractSizeModule.default['fixed-size'],\n        role: \"alertdialog\"\n      }, _react.default.createElement(AlertDialogContent, {\n        handleCloseModal: this.handleCloseModal\n      })), _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleOpenModal\n      }, \"Open Modal\"));\n    }\n  }]);\n  return AbstractModalAlertDialog;\n}(_react.default.Component);\n\nvar _default = AbstractModalAlertDialog;\nexports.default = _default;","export default \"import React, { useRef, useEffect } from 'react';\\nimport AbstractModal from 'terra-abstract-modal';\\nimport classNames from 'classnames/bind';\\nimport styles from './ExampleAbstractSize.module.scss';\\nimport generalStyles from './AbstractModalDocCommon.module.scss';\\n\\nconst cx = classNames.bind(generalStyles);\\n\\n/* eslint-disable-next-line react/prop-types */\\nconst AlertDialogContent = ({ handleCloseModal }) => {\\n  const confirmBtn = useRef(null);\\n\\n  useEffect(() => {\\n    confirmBtn.current.focus();\\n  }, []);\\n\\n  return (\\n    <div id=\\\"alert-dialog-content\\\" className={cx('content-wrapper')}>\\n      <h1>Alert Dialog Modal</h1>\\n      <br />\\n      <p>\\n        The abstract modal can be used to create an alert dialog modal. You can use the role,\\n        {' '}\\n        <code>alertdialog</code>\\n        {' '}\\n        , to create a modal dialog that interrupts the users workflow to get a response, usually some sort of confirmation.\\n      </p>\\n      <button ref={confirmBtn} type=\\\"button\\\" onClick={handleCloseModal}>Confirm action</button>\\n      <button type=\\\"button\\\" onClick={handleCloseModal}>Close Modal</button>\\n    </div>\\n  );\\n};\\n\\n/* VoiceOver will not read the content of the modal dialog if the role attribute\\n is set to `alertdialog` and ariaLabel is defined */\\nconst ariaLabel = '';\\n\\nclass AbstractModalAlertDialog extends React.Component {\\n  constructor() {\\n    super();\\n\\n    this.state = {\\n      isOpen: false,\\n    };\\n\\n    this.handleOpenModal = this.handleOpenModal.bind(this);\\n    this.handleCloseModal = this.handleCloseModal.bind(this);\\n  }\\n\\n  handleOpenModal() {\\n    this.setState({ isOpen: true });\\n  }\\n\\n  handleCloseModal() {\\n    this.setState({ isOpen: false });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <AbstractModal\\n          ariaLabel={ariaLabel}\\n          aria-labelledby=\\\"alert-dialog-content\\\"\\n          isOpen={this.state.isOpen}\\n          onRequestClose={this.handleCloseModal}\\n          closeOnOutsideClick={false}\\n          classNameModal={styles['fixed-size']}\\n          role=\\\"alertdialog\\\"\\n        >\\n          <AlertDialogContent handleCloseModal={this.handleCloseModal} />\\n        </AbstractModal>\\n        <button type=\\\"button\\\" onClick={this.handleOpenModal}>Open Modal</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default AbstractModalAlertDialog;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _AbstractModal = _interopRequireDefault(require(\"!raw-loader!../../../../src/AbstractModal\"));\n\nvar _AbstractModalIsOpened = _interopRequireDefault(require(\"../example/AbstractModalIsOpened\"));\n\nvar _AbstractModalIsOpened2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/AbstractModalIsOpened\"));\n\nvar _AbstractModalCloseOnOutsideClick = _interopRequireDefault(require(\"../example/AbstractModalCloseOnOutsideClick\"));\n\nvar _AbstractModalCloseOnOutsideClick2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/AbstractModalCloseOnOutsideClick\"));\n\nvar _AbstractModalIsFullscreen = _interopRequireDefault(require(\"../example/AbstractModalIsFullscreen\"));\n\nvar _AbstractModalIsFullscreen2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/AbstractModalIsFullscreen\"));\n\nvar _AbstractModalAlertDialog = _interopRequireDefault(require(\"../example/AbstractModalAlertDialog\"));\n\nvar _AbstractModalAlertDialog2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/AbstractModalAlertDialog\"));\n\n// Component Source\n// Example Files\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Default Modal',\n      example: _react.default.createElement(_AbstractModalIsOpened.default, null),\n      source: _AbstractModalIsOpened2.default\n    }, {\n      title: 'Disable closing the modal when clicking on the overlay',\n      example: _react.default.createElement(_AbstractModalCloseOnOutsideClick.default, null),\n      source: _AbstractModalCloseOnOutsideClick2.default\n    }, {\n      title: 'Fullscreen Modal',\n      example: _react.default.createElement(_AbstractModalIsFullscreen.default, null),\n      source: _AbstractModalIsFullscreen2.default\n    }, {\n      title: 'Alert Dialog Modal',\n      example: _react.default.createElement(_AbstractModalAlertDialog.default, null),\n      source: _AbstractModalAlertDialog2.default\n    }],\n    propsTables: [{\n      componentName: 'Modal',\n      componentSrc: _AbstractModal.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}