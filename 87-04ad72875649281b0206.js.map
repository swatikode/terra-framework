{"version":3,"sources":["webpack:///./packages/terra-menu/lib/terra-dev-site/doc/example/BasicMenu.js","webpack:///./packages/terra-menu/lib/terra-dev-site/doc/example/BasicMenu.module.scss?4472","webpack:///./packages/terra-menu/docs/README.md","webpack:///./packages/terra-menu/src/Menu.jsx","webpack:///./packages/terra-menu/src/MenuItem.jsx","webpack:///./packages/terra-menu/src/MenuItemGroup.jsx","webpack:///./packages/terra-menu/src/terra-dev-site/doc/example/BasicMenu.jsx","webpack:///./packages/terra-menu/lib/terra-dev-site/doc/example/MenuBounded.js","webpack:///./packages/terra-menu/lib/terra-dev-site/doc/example/MenuBounded.module.scss?1519","webpack:///./packages/terra-menu/src/terra-dev-site/doc/example/MenuBounded.jsx","webpack:///./packages/terra-menu/lib/terra-dev-site/doc/example/MenuWidths.js","webpack:///./packages/terra-menu/src/terra-dev-site/doc/example/MenuWidths.jsx","webpack:///./packages/terra-menu/lib/terra-dev-site/doc/example/MenuWithInstructionsForUse.js","webpack:///./packages/terra-menu/src/terra-dev-site/doc/example/MenuWithInstructionsForUse.jsx","webpack:///./packages/terra-menu/lib/terra-dev-site/doc/menu/Menu.1.doc.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_react","_terraButton","_propTypes","_terraMenu","_bind","_BasicMenuModule","cx","bind","propTypes","isArrowDisplayed","bool","contentWidth","string","boundingRef","func","BasicMenu","_React$Component","props","_this","this","call","handleButtonClick","handleRequestClose","setButtonNode","getButtonNode","handleToggle1OnClick","handleToggle2OnClick","handleOnChange","handleAction","handleCloseOnClick","state","open","toggle1Selected","toggle2Selected","groupSelectedIndex","undefined","actionClickCount","key","node","buttonNode","setState","event","preventDefault","prevState","index","newState","createElement","className","ref","isOpen","targetRef","onRequestClose","Item","text","isSelected","onClick","isSelectable","isDisabled","Divider","subMenuItems","ItemGroup","onChange","Component","_default","module","_BasicMenu","_MenuBoundedModule","MenuBounded","setParentNode","getParentNode","parentNode","MenuWidths","handleSelectChange","menuWidth","target","htmlFor","id","name","MenuWithInstructionsForUse","isInstructionsForUse","_terraDocTemplate","_README","_package","_Menu","_MenuItem","_MenuItemGroup","_BasicMenu2","_MenuBounded","_MenuBounded2","_MenuWidths","_MenuWidths2","_MenuWithInstructionsForUse","_MenuWithInstructionsForUse2","packageName","readme","srcPath","concat","examples","title","example","source","description","propsTables","componentName","componentSrc"],"mappings":"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","file":"87-04ad72875649281b0206.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _terraMenu = _interopRequireDefault(require(\"terra-menu\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _BasicMenuModule = _interopRequireDefault(require(\"./BasicMenu.module.scss\"));\n\nvar cx = _bind.default.bind(_BasicMenuModule.default);\n\nvar propTypes = {\n  isArrowDisplayed: _propTypes.default.bool,\n  contentWidth: _propTypes.default.string,\n  boundingRef: _propTypes.default.func\n};\n\nvar BasicMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(BasicMenu, _React$Component);\n\n  function BasicMenu(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BasicMenu);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BasicMenu).call(this, props));\n    _this.handleButtonClick = _this.handleButtonClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRequestClose = _this.handleRequestClose.bind((0, _assertThisInitialized2.default)(_this));\n    _this.setButtonNode = _this.setButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getButtonNode = _this.getButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleToggle1OnClick = _this.handleToggle1OnClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleToggle2OnClick = _this.handleToggle2OnClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleOnChange = _this.handleOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleAction = _this.handleAction.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleCloseOnClick = _this.handleCloseOnClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      open: false,\n      toggle1Selected: false,\n      toggle2Selected: false,\n      groupSelectedIndex: undefined,\n      actionClickCount: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(BasicMenu, [{\n    key: \"setButtonNode\",\n    value: function setButtonNode(node) {\n      this.buttonNode = node;\n    }\n  }, {\n    key: \"getButtonNode\",\n    value: function getButtonNode() {\n      return this.buttonNode;\n    }\n  }, {\n    key: \"handleButtonClick\",\n    value: function handleButtonClick() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleRequestClose\",\n    value: function handleRequestClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleCloseOnClick\",\n    value: function handleCloseOnClick(event) {\n      event.preventDefault();\n      this.handleRequestClose();\n    }\n  }, {\n    key: \"handleToggle1OnClick\",\n    value: function handleToggle1OnClick() {\n      this.setState(function (prevState) {\n        return {\n          toggle1Selected: !prevState.toggle1Selected\n        };\n      });\n      this.handleRequestClose();\n    }\n  }, {\n    key: \"handleToggle2OnClick\",\n    value: function handleToggle2OnClick() {\n      this.setState(function (prevState) {\n        return {\n          toggle2Selected: !prevState.toggle2Selected\n        };\n      });\n    }\n  }, {\n    key: \"handleOnChange\",\n    value: function handleOnChange(event, index) {\n      this.setState({\n        groupSelectedIndex: index\n      });\n    }\n  }, {\n    key: \"handleAction\",\n    value: function handleAction(event) {\n      event.preventDefault();\n      var newState = this.state;\n      newState.actionClickCount += 1;\n      this.setState(newState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", {\n        className: cx('menu-wrapper'),\n        ref: this.setButtonNode\n      }, _react.default.createElement(_terraMenu.default, {\n        isOpen: this.state.open,\n        targetRef: this.getButtonNode,\n        onRequestClose: this.handleRequestClose,\n        contentWidth: this.props.contentWidth,\n        isArrowDisplayed: this.props.isArrowDisplayed,\n        boundingRef: this.props.boundingRef\n      }, _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Toggle Item 1 - Closes Menu\",\n        key: \"Toggle1\",\n        isSelected: this.state.toggle1Selected,\n        onClick: this.handleToggle1OnClick,\n        isSelectable: true\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Toggle Item 2\",\n        key: \"Toggle2\",\n        isSelected: this.state.toggle2Selected,\n        onClick: this.handleToggle2OnClick,\n        isSelectable: true\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Disabled Item 1\",\n        key: \"Disabled1\",\n        isSelected: this.state.toggle1Selected,\n        onClick: this.handleToggle1OnClick,\n        isDisabled: true\n      }), _react.default.createElement(_terraMenu.default.Divider, {\n        key: \"Divider1\"\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Nested Menu 1\",\n        key: \"Nested1\",\n        subMenuItems: [_react.default.createElement(_terraMenu.default.Item, {\n          text: \"Action 1.1\",\n          key: \"1.1\",\n          onClick: this.handleAction\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Action 1.2\",\n          key: \"1.2\",\n          onClick: this.handleAction\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Action 1.3\",\n          key: \"1.3\",\n          onClick: this.handleAction\n        }), _react.default.createElement(_terraMenu.default.Divider, {\n          key: \"Divider1.1\"\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Close Action 1.1\",\n          key: \"1.4\",\n          onClick: this.handleCloseOnClick\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Close Action 1.2\",\n          key: \"1.5\",\n          onClick: this.handleCloseOnClick\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Close Action 1.3\",\n          key: \"1.6\",\n          onClick: this.handleCloseOnClick\n        })]\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Nested Menu 2 has a long title that will wrap and a truncated title when clicked\",\n        key: \"Nested2\",\n        isDisabled: true,\n        subMenuItems: [_react.default.createElement(_terraMenu.default.Item, {\n          text: \"Default 2.1\",\n          key: \"2.1\"\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Default 2.2\",\n          key: \"2.2\"\n        }), _react.default.createElement(_terraMenu.default.Item, {\n          text: \"Default 2.3\",\n          key: \"2.3\"\n        })]\n      }), _react.default.createElement(_terraMenu.default.Divider, {\n        key: \"Divider2\"\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Close Action\",\n        key: \"Action2\",\n        onClick: this.handleCloseOnClick\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Action\",\n        key: \"Action1\",\n        onClick: this.handleAction\n      }), _react.default.createElement(_terraMenu.default.Divider, {\n        key: \"Divider3\"\n      }), _react.default.createElement(_terraMenu.default.ItemGroup, {\n        key: \"Group\",\n        onChange: this.handleOnChange\n      }, _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Group Item 1\",\n        key: \"GroupItem1\",\n        isSelected: this.state.groupSelectedIndex === 0\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Group Item 2\",\n        key: \"GroupItem2\",\n        isSelected: this.state.groupSelectedIndex === 1\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Group Item 3\",\n        key: \"GroupItem3\",\n        isSelected: this.state.groupSelectedIndex === 2,\n        isDisabled: true\n      }))), _react.default.createElement(_terraButton.default, {\n        onClick: this.handleButtonClick,\n        text: \"Click Me\"\n      })), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"Action button has been clicked\", ' ', this.state.actionClickCount, ' ', \"times.\"));\n    }\n  }]);\n  return BasicMenu;\n}(_react.default.Component);\n\nBasicMenu.propTypes = propTypes;\nvar _default = BasicMenu;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-wrapper\":\"BasicMenu-module__menu-wrapper___1LrN8\"};","export default \"# Terra Menu\\n\\nThe menu is a popup component that displays a list of items, item groups, and dividers. Menu Items can be actionable, have toggle-style selection, or have nested submenu items. Menu Item groups are a single-select grouping of menu items.\\nThe Menu will determine the height of the popup based on the number of items in the main menu.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-menu`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport Button from 'terra-button';\\nimport Menu from 'terra-menu';\\n\\nclass BasicMenu extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleButtonClick = this.handleButtonClick.bind(this);\\n    this.handleRequestClose = this.handleRequestClose.bind(this);\\n    this.setButtonNode = this.setButtonNode.bind(this);\\n    this.getButtonNode = this.getButtonNode.bind(this);\\n    this.handleOnClickFirstMenu = this.handleOnClickFirstMenu.bind(this);\\n    this.handleOnClickSecondMenu = this.handleOnClickSecondMenu.bind(this);\\n    this.handleOnChange = this.handleOnChange.bind(this);\\n    this.state = {\\n      open: false,\\n      toggle1Selected: false,\\n      toggle2Selected: false,\\n      groupSelectedIndex: undefined,\\n    };\\n  }\\n\\n  setButtonNode(node) {\\n    this.buttonNode = node;\\n  }\\n\\n  getButtonNode() {\\n    return this.buttonNode;\\n  }\\n\\n  handleButtonClick() {\\n    this.setState({ open: true });\\n  }\\n\\n  handleRequestClose() {\\n    this.setState({ open: false });\\n  }\\n\\n  handleOnClickFirstMenu() {\\n    this.setState(prevState => ({ toggle1Selected: !prevState.toggle1Selected }));\\n  }\\n\\n  handleOnClickSecondMenu() {\\n    this.setState(prevState => ({ toggle2Selected: !prevState.toggle2Selected }));\\n  }\\n\\n  handleOnChange(event, index) {\\n    this.setState({ groupSelectedIndex: index });\\n  }\\n\\n  render() {\\n    return (\\n      <div ref={this.setButtonNode}>\\n        <Menu\\n          isOpen={this.state.open}\\n          targetRef={this.getButtonNode}\\n          onRequestClose={this.handleRequestClose}\\n          contentWidth=\\\"240\\\"\\n          isArrowDisplayed\\n        >\\n          <Menu.Item\\n            text=\\\"Toggle Item 1\\\"\\n            key=\\\"Toggle1\\\"\\n            isSelected={this.state.toggle1Selected}\\n            onClick={this.handleOnClickFirstMenu}\\n            isSelectable\\n          />\\n          <Menu.Item\\n            text=\\\"Toggle Item 2\\\"\\n            key=\\\"Toggle2\\\"\\n            isSelected={this.state.toggle2Selected}\\n            onClick={this.handleOnClickSecondMenu}\\n            isSelectable\\n          />\\n          <Menu.Divider key=\\\"Divider1\\\" />\\n          <Menu.Item\\n            text=\\\"Nested Menu 1\\\"\\n            key=\\\"Nested1\\\"\\n            subMenuItems={[\\n              <Menu.Item text=\\\"Alert Action 1.1\\\" key=\\\"1.1\\\" onClick={() => alert('Action 1.1')} />,\\n              <Menu.Item text=\\\"Alert Action 1.2\\\" key=\\\"1.2\\\" onClick={() => alert('Action 1.2')} />,\\n              <Menu.Item text=\\\"Alert Action 1.3\\\" key=\\\"1.3\\\" onClick={() => alert('Action 1.3')} />,\\n              <Menu.Divider key=\\\"Divider1.1\\\" />,\\n              <Menu.Item text=\\\"Close Action 1.1\\\" key=\\\"1.4\\\" onClick={this.handleRequestClose} />,\\n              <Menu.Item text=\\\"Close Action 1.2\\\" key=\\\"1.5\\\" onClick={this.handleRequestClose} />,\\n              <Menu.Item text=\\\"Close Action 1.3\\\" key=\\\"1.6\\\" onClick={this.handleRequestClose} />,\\n            ]}\\n          />\\n          <Menu.Item\\n            text=\\\"Nested Menu 2\\\"\\n            key=\\\"Nested2\\\"\\n            subMenuItems={[\\n              <Menu.Item text=\\\"Default 2.1\\\" key=\\\"2.1\\\" />,\\n              <Menu.Item text=\\\"Default 2.2\\\" key=\\\"2.2\\\" />,\\n              <Menu.Item text=\\\"Default 2.3\\\" key=\\\"2.3\\\" />,\\n            ]}\\n          />\\n          <Menu.Divider key=\\\"Divider2\\\" />\\n          <Menu.Item text=\\\"Alert Action\\\" key=\\\"Action1\\\" onClick={() => alert('Action 1')} />\\n          <Menu.Item text=\\\"Close Action\\\" key=\\\"Action2\\\" onClick={this.handleRequestClose} />\\n          <Menu.Divider key=\\\"Divider3\\\" />\\n          <Menu.ItemGroup key=\\\"Group\\\" onChange={this.handleOnChange}>\\n            <Menu.Item text=\\\"Group Item 1\\\" key=\\\"GroupItem1\\\" isSelected={this.state.groupSelectedIndex === 0} />\\n            <Menu.Item text=\\\"Group Item 2\\\" key=\\\"GroupItem2\\\" isSelected={this.state.groupSelectedIndex === 1} />\\n          </Menu.ItemGroup>\\n        </Menu>\\n        <Button onClick={this.handleButtonClick} text=\\\"Click Me\\\" />\\n      </div>\\n    );\\n  }\\n}\\n```\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Popup from 'terra-popup';\\nimport classNames from 'classnames/bind';\\nimport MenuItem from './MenuItem';\\nimport MenuItemGroup from './MenuItemGroup';\\nimport MenuDivider from './MenuDivider';\\nimport MenuContent from './_MenuContent';\\nimport styles from './Menu.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * List of Menu.Item(s)/Menu.ItemGroup(s)/Menu.Divider(s) to be displayed as content within the Menu.\\n   */\\n  children: PropTypes.node.isRequired,\\n  /**\\n   * Callback function indicating a close condition was met, should be combined with isOpen for state management.\\n   */\\n  onRequestClose: PropTypes.func.isRequired,\\n  /**\\n   * Target element for the menu to anchor to.\\n   */\\n  targetRef: PropTypes.func.isRequired,\\n  /**\\n   * Bounding container for the menu, will use window if no value provided.\\n   */\\n  boundingRef: PropTypes.func,\\n  /**\\n   * CSS classnames that are append to the arrow.\\n   */\\n  classNameArrow: PropTypes.string,\\n  /**\\n   * CSS classnames that are append to the menu content inner.\\n   */\\n  classNameContent: PropTypes.string,\\n  /**\\n   * CSS classnames that are append to the overlay.\\n   */\\n  classNameOverlay: PropTypes.string,\\n  /**\\n   * Should the menu be presented as open.\\n   */\\n  isOpen: PropTypes.bool,\\n  /**\\n   * A string representation of the width in px, limited to:\\n   * 160, 240, 320, 640, 960, 1280, 1760 or auto\\n   */\\n  contentWidth: PropTypes.oneOf(Object.keys(Popup.Opts.widths)),\\n  /**\\n   * Indicates if the menu should have an center aligned arrow displayed on dropdown.\\n   * Otherwise, the menu will display without an arrow and right aligned.\\n   */\\n  isArrowDisplayed: PropTypes.bool,\\n};\\n\\nconst defaultProps = {\\n  isArrowDisplayed: false,\\n  isOpen: false,\\n  contentWidth: '240',\\n};\\n\\nclass Menu extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.setPageDimensions = this.setPageDimensions.bind(this);\\n    this.push = this.push.bind(this);\\n    this.pop = this.pop.bind(this);\\n    this.state = { stack: [this] };\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if ((!this.props.isOpen && prevProps.isOpen) || this.props.children.length !== prevProps.children.length) {\\n      /* eslint-disable react/no-did-update-set-state */\\n      this.setState({ stack: [this] });\\n    }\\n  }\\n\\n  setPageDimensions(node) {\\n    if (node) {\\n      this.pageHeight = node.clientHeight;\\n      if (this.props.contentWidth === 'auto') {\\n        this.pageWidth = node.clientWidth;\\n      }\\n    } else {\\n      this.pageHeight = undefined;\\n      this.pageWidth = undefined;\\n    }\\n  }\\n\\n  pop() {\\n    if (this.state.stack.length > 1) {\\n      this.setState((prevState) => {\\n        const newStack = prevState.stack.slice();\\n        newStack.pop();\\n        return { stack: newStack };\\n      });\\n    }\\n  }\\n\\n  push(item) {\\n    this.setState((prevState) => {\\n      const newStack = prevState.stack.slice();\\n      newStack.push(item);\\n      return { stack: newStack };\\n    });\\n  }\\n\\n  render() {\\n    const {\\n      boundingRef,\\n      classNameArrow,\\n      classNameContent,\\n      classNameOverlay,\\n      onRequestClose,\\n      isOpen,\\n      children,\\n      targetRef,\\n      isArrowDisplayed,\\n      contentWidth,\\n      ...customProps\\n    } = this.props;\\n    const arrowClass = cx([\\n      'arrow',\\n      { submenu: this.state.stack.length > 1 },\\n      classNameArrow,\\n    ]);\\n\\n    const visiblePage = this.state.stack.length - 1;\\n    const slides = this.state.stack.map((item, index) => (\\n      <MenuContent\\n        // eslint-disable-next-line react/no-array-index-key\\n        key={`MenuPage-${index}`}\\n        title={item.props.text}\\n        onRequestNext={this.push}\\n        onRequestBack={this.pop}\\n        onRequestClose={this.props.onRequestClose}\\n        isHidden={index !== visiblePage}\\n        fixedHeight={this.pageHeight}\\n        fixedWidth={this.pageWidth}\\n        contentWidth={Popup.Opts.widths[contentWidth]}\\n        refCallback={visiblePage === 0 ? this.setPageDimensions : null}\\n        index={index}\\n        boundingRef={boundingRef}\\n        isFocused={index === visiblePage}\\n      >\\n        {item.props.children || item.props.subMenuItems}\\n      </MenuContent>\\n    ));\\n\\n    return (\\n      <Popup\\n        {...customProps}\\n        boundingRef={boundingRef}\\n        isArrowDisplayed={isArrowDisplayed}\\n        attachmentBehavior=\\\"flip\\\"\\n        contentAttachment={isArrowDisplayed ? 'top center' : 'top right'}\\n        contentHeight=\\\"auto\\\"\\n        contentWidth={this.props.contentWidth}\\n        classNameArrow={arrowClass}\\n        classNameContent={classNameContent}\\n        classNameOverlay={classNameOverlay}\\n        isOpen={isOpen}\\n        onRequestClose={onRequestClose}\\n        targetRef={targetRef}\\n        isHeaderDisabled\\n        isContentFocusDisabled\\n      >\\n        {slides}\\n      </Popup>\\n    );\\n  }\\n}\\n\\nMenu.propTypes = propTypes;\\nMenu.defaultProps = defaultProps;\\nMenu.Item = MenuItem;\\nMenu.ItemGroup = MenuItemGroup;\\nMenu.Divider = MenuDivider;\\nMenu.Opts = {\\n  widths: Popup.Opts.widths,\\n};\\n\\nexport default Menu;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Arrange from 'terra-arrange';\\nimport CheckIcon from 'terra-icon/lib/icon/IconCheckmark';\\nimport ChevronIcon from 'terra-icon/lib/icon/IconChevronRight';\\nimport InstructionsForUseIcon from 'terra-icon/lib/icon/IconConsultInstructionsForUse';\\nimport classNames from 'classnames/bind';\\nimport * as KeyCode from 'keycode-js';\\nimport styles from './MenuItem.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst contextTypes = {\\n  isGroupItem: PropTypes.bool,\\n  isSelectableMenu: PropTypes.bool,\\n};\\n\\nconst propTypes = {\\n  /**\\n   * Sets the item's text.\\n   */\\n  text: PropTypes.string,\\n\\n  /**\\n   * Indicates if item should be disabled\\n   */\\n  isDisabled: PropTypes.bool,\\n\\n  /**\\n   * Indicates if the item is selected. A selected item is indicated with a checkmark.\\n   */\\n  isSelected: PropTypes.bool,\\n\\n  /**\\n   * Indicates if the item should be selectable.\\n   */\\n  isSelectable: PropTypes.bool,\\n\\n  /**\\n   * Displays the  eIFU (electronic instructions for use) icon for menu item if set to true. (This icon is used to indicate Help content that is the equivalent of an instruction manual)\\n   */\\n  isInstructionsForUse: PropTypes.bool,\\n\\n  /**\\n   * List of Menu.Items to display in a submenu when this item is selected.\\n   */\\n  subMenuItems: PropTypes.arrayOf(PropTypes.element),\\n\\n  /**\\n   * Callback function for when item is clicked\\n   */\\n  onClick: PropTypes.func,\\n\\n  /**\\n   * Callback function for when selection state changes on a selectable item.\\n   */\\n  onChange: PropTypes.func,\\n\\n  /**\\n   * Indicates if the item has focus. This is used internally to control focus and does not set initial focus.\\n   */\\n  isActive: PropTypes.bool,\\n};\\n\\nconst defaultProps = {\\n  text: '',\\n  isSelected: false,\\n  isInstructionsForUse: false,\\n  isActive: false,\\n  isSelectable: undefined,\\n  isDisabled: false,\\n  subMenuItems: [],\\n};\\n\\nclass MenuItem extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n    this.wrapOnClick = this.wrapOnClick.bind(this);\\n    this.wrapOnKeyDown = this.wrapOnKeyDown.bind(this);\\n    this.wrapOnKeyUp = this.wrapOnKeyUp.bind(this);\\n    this.handleSelection = this.handleSelection.bind(this);\\n    this.setItemNode = this.setItemNode.bind(this);\\n    this.state = {\\n      isSelected: props.isSelected && props.isSelectable && !context.isGroupItem,\\n      isActive: false,\\n    };\\n  }\\n\\n  componentDidUpdate() {\\n    if (this.props.isActive && this.itemNode) {\\n      this.itemNode.focus();\\n    }\\n  }\\n\\n  setItemNode(node) {\\n    if (node) {\\n      this.itemNode = node;\\n    }\\n  }\\n\\n  handleSelection(event) {\\n    event.preventDefault();\\n\\n    if (this.props.isSelectable && !this.context.isGroupItem && !this.props.isDisabled) {\\n      this.setState(prevState => ({ isSelected: !prevState.isSelected }));\\n\\n      if (this.props.onChange) {\\n        this.props.onChange(event, !this.state.isSelected);\\n      }\\n    }\\n  }\\n\\n  wrapOnClick(event) {\\n    this.handleSelection(event);\\n\\n    if (this.props.onClick) {\\n      this.props.onClick(event);\\n    }\\n  }\\n\\n  wrapOnKeyDown(onKeyDown) {\\n    return ((event) => {\\n      if (event.nativeEvent.keyCode === KeyCode.KEY_RETURN || event.nativeEvent.keyCode === KeyCode.KEY_SPACE) {\\n        this.handleSelection(event);\\n\\n        // Only add active style if the menu doesn't have a sub menu to avoid active style being stuck enabled\\n        if (!(this.props.subMenuItems && this.props.subMenuItems.length > 0)) {\\n          this.setState({ isActive: true });\\n        }\\n\\n        if (this.props.onClick) {\\n          this.props.onClick(event);\\n        }\\n      // Remove active state when tab key is released while while holding the space key to avoid active style being stuck enabled\\n      } else if (event.nativeEvent.keyCode === KeyCode.KEY_TAB) {\\n        this.setState({ isActive: false });\\n      }\\n\\n      if (onKeyDown) {\\n        onKeyDown(event);\\n      }\\n    });\\n  }\\n\\n  wrapOnKeyUp(onKeyUp) {\\n    return ((event) => {\\n      if (event.nativeEvent.keyCode === KeyCode.KEY_RETURN || event.nativeEvent.keyCode === KeyCode.KEY_SPACE) {\\n        this.setState({ isActive: false });\\n      }\\n\\n      if (onKeyUp) {\\n        onKeyUp(event);\\n      }\\n    });\\n  }\\n\\n  render() {\\n    const {\\n      text,\\n      isDisabled,\\n      isSelected,\\n      isInstructionsForUse,\\n      isSelectable,\\n      subMenuItems,\\n      isActive,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isGroupItem, isSelectableMenu } = this.context;\\n\\n    const attributes = { ...customProps };\\n    attributes.tabIndex = isDisabled ? '-1' : '0';\\n    attributes['aria-disabled'] = isDisabled;\\n\\n    // This is passed down by the single select list in group item and not needed\\n    delete attributes.hasChevron;\\n\\n    if (isDisabled) {\\n      delete attributes.onClick;\\n      delete attributes.onKeyDown;\\n    } else {\\n      attributes.onClick = this.wrapOnClick;\\n      attributes.onKeyDown = this.wrapOnKeyDown(attributes.onKeyDown);\\n      attributes.onKeyUp = this.wrapOnKeyUp(attributes.Up);\\n    }\\n\\n    const markAsSelected = this.state.isSelected || (isGroupItem && isSelected);\\n\\n    const itemClassNames = cx([\\n      'item',\\n      { selected: markAsSelected },\\n      { 'is-disabled': isDisabled },\\n      // eslint-disable-next-line quote-props\\n      { 'active': this.state.isActive },\\n      attributes.className,\\n    ]);\\n\\n    const textContainer = <div className={cx('text')}>{text}</div>;\\n    const hasChevron = subMenuItems.length > 0;\\n    let content = textContainer;\\n    if (hasChevron || isSelectableMenu || isInstructionsForUse) {\\n      let fitStartIcon = null;\\n      if (isInstructionsForUse) {\\n        fitStartIcon = <InstructionsForUseIcon className={cx('start-icon')} />;\\n      } else if (isSelectableMenu) {\\n        fitStartIcon = <CheckIcon className={cx(['checkmark', 'start-icon'])} />;\\n      }\\n\\n      content = (\\n        <Arrange\\n          fitStart={fitStartIcon}\\n          fill={textContainer}\\n          fitEnd={hasChevron ? <ChevronIcon className={cx('chevron')} /> : null}\\n          align=\\\"center\\\"\\n        />\\n      );\\n    }\\n\\n    let role = 'menuitem';\\n    if (isGroupItem) {\\n      role = 'menuitemradio';\\n    } else if (isSelectable) {\\n      role = 'menuitemcheckbox';\\n    }\\n\\n    return (\\n      <li {...attributes} className={itemClassNames} ref={this.setItemNode} role={role} aria-checked={markAsSelected}>\\n        {content}\\n      </li>\\n    );\\n  }\\n}\\n\\nMenuItem.propTypes = propTypes;\\nMenuItem.defaultProps = defaultProps;\\nMenuItem.contextTypes = contextTypes;\\n\\nexport default MenuItem;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport List, { Utils } from 'terra-list';\\n\\nconst propTypes = {\\n  /**\\n   * Menu.Items to be grouped together.\\n   */\\n  children: PropTypes.node.isRequired,\\n  /**\\n   * Callback function called when selected index changes.\\n   */\\n  onChange: PropTypes.func,\\n};\\n\\nconst childContextTypes = {\\n  isGroupItem: PropTypes.bool,\\n};\\n\\nconst initialSingleSelectedIndex = (children) => {\\n  const childArray = React.Children.toArray(children);\\n  for (let i = 0; i < childArray.length; i += 1) {\\n    if (childArray[i].props.isSelected) {\\n      return i;\\n    }\\n  }\\n  return -1;\\n};\\n\\nclass MenuItemGroup extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.cloneChildren = this.cloneChildren.bind(this);\\n    this.handleItemSelection = this.handleItemSelection.bind(this);\\n    this.state = { selectedIndex: initialSingleSelectedIndex(props.children) };\\n  }\\n\\n  getChildContext() {\\n    return { isGroupItem: true };\\n  }\\n\\n  handleItemSelection(event, metaData) {\\n    if (this.state.selectedIndex !== metaData.index) {\\n      event.preventDefault();\\n      this.setState({ selectedIndex: metaData.index });\\n      if (this.props.onChange) {\\n        this.props.onChange(event, metaData.index);\\n      }\\n    }\\n  }\\n\\n  cloneChildren(children) {\\n    return React.Children.map(children, (child, index) => {\\n      let isSelectable = true;\\n      if (child.props.isSelectable === false) {\\n        isSelectable = false;\\n      }\\n      return React.cloneElement(child, {\\n        isSelectable,\\n        isSelected: this.state.selectedIndex === index,\\n        onClick: Utils.wrappedOnClickForItem(child.props.onClick, this.handleItemSelection, { index }),\\n        onKeyDown: Utils.wrappedOnKeyDownForItem(child.props.onKeyDown, this.handleItemSelection, { index }),\\n      });\\n    });\\n  }\\n\\n  render() {\\n    const { children, ...customProps } = this.props;\\n    const managedChildren = this.cloneChildren(children);\\n\\n    return (\\n      <List {...customProps} role=\\\"group\\\">\\n        {managedChildren}\\n      </List>\\n    );\\n  }\\n}\\n\\nMenuItemGroup.propTypes = propTypes;\\nMenuItemGroup.childContextTypes = childContextTypes;\\n\\nexport default MenuItemGroup;\\n\"","export default \"import React from 'react';\\nimport Button from 'terra-button';\\nimport PropTypes from 'prop-types';\\nimport Menu from 'terra-menu';\\nimport classNames from 'classnames/bind';\\nimport styles from './BasicMenu.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  isArrowDisplayed: PropTypes.bool,\\n  contentWidth: PropTypes.string,\\n  boundingRef: PropTypes.func,\\n};\\n\\nclass BasicMenu extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleButtonClick = this.handleButtonClick.bind(this);\\n    this.handleRequestClose = this.handleRequestClose.bind(this);\\n    this.setButtonNode = this.setButtonNode.bind(this);\\n    this.getButtonNode = this.getButtonNode.bind(this);\\n    this.handleToggle1OnClick = this.handleToggle1OnClick.bind(this);\\n    this.handleToggle2OnClick = this.handleToggle2OnClick.bind(this);\\n    this.handleOnChange = this.handleOnChange.bind(this);\\n    this.handleAction = this.handleAction.bind(this);\\n    this.handleCloseOnClick = this.handleCloseOnClick.bind(this);\\n    this.state = {\\n      open: false,\\n      toggle1Selected: false,\\n      toggle2Selected: false,\\n      groupSelectedIndex: undefined,\\n      actionClickCount: 0,\\n    };\\n  }\\n\\n  setButtonNode(node) {\\n    this.buttonNode = node;\\n  }\\n\\n  getButtonNode() {\\n    return this.buttonNode;\\n  }\\n\\n  handleButtonClick() {\\n    this.setState({ open: true });\\n  }\\n\\n  handleRequestClose() {\\n    this.setState({ open: false });\\n  }\\n\\n  handleCloseOnClick(event) {\\n    event.preventDefault();\\n    this.handleRequestClose();\\n  }\\n\\n  handleToggle1OnClick() {\\n    this.setState(prevState => ({ toggle1Selected: !prevState.toggle1Selected }));\\n    this.handleRequestClose();\\n  }\\n\\n  handleToggle2OnClick() {\\n    this.setState(prevState => ({ toggle2Selected: !prevState.toggle2Selected }));\\n  }\\n\\n  handleOnChange(event, index) {\\n    this.setState({ groupSelectedIndex: index });\\n  }\\n\\n  handleAction(event) {\\n    event.preventDefault();\\n    const newState = this.state;\\n    newState.actionClickCount += 1;\\n    this.setState(newState);\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <div className={cx('menu-wrapper')} ref={this.setButtonNode}>\\n          <Menu\\n            isOpen={this.state.open}\\n            targetRef={this.getButtonNode}\\n            onRequestClose={this.handleRequestClose}\\n            contentWidth={this.props.contentWidth}\\n            isArrowDisplayed={this.props.isArrowDisplayed}\\n            boundingRef={this.props.boundingRef}\\n          >\\n            <Menu.Item\\n              text=\\\"Toggle Item 1 - Closes Menu\\\"\\n              key=\\\"Toggle1\\\"\\n              isSelected={this.state.toggle1Selected}\\n              onClick={this.handleToggle1OnClick}\\n              isSelectable\\n            />\\n            <Menu.Item\\n              text=\\\"Toggle Item 2\\\"\\n              key=\\\"Toggle2\\\"\\n              isSelected={this.state.toggle2Selected}\\n              onClick={this.handleToggle2OnClick}\\n              isSelectable\\n            />\\n            <Menu.Item\\n              text=\\\"Disabled Item 1\\\"\\n              key=\\\"Disabled1\\\"\\n              isSelected={this.state.toggle1Selected}\\n              onClick={this.handleToggle1OnClick}\\n              isDisabled\\n            />\\n            <Menu.Divider key=\\\"Divider1\\\" />\\n            <Menu.Item\\n              text=\\\"Nested Menu 1\\\"\\n              key=\\\"Nested1\\\"\\n              subMenuItems={[\\n                <Menu.Item text=\\\"Action 1.1\\\" key=\\\"1.1\\\" onClick={this.handleAction} />,\\n                <Menu.Item text=\\\"Action 1.2\\\" key=\\\"1.2\\\" onClick={this.handleAction} />,\\n                <Menu.Item text=\\\"Action 1.3\\\" key=\\\"1.3\\\" onClick={this.handleAction} />,\\n                <Menu.Divider key=\\\"Divider1.1\\\" />,\\n                <Menu.Item text=\\\"Close Action 1.1\\\" key=\\\"1.4\\\" onClick={this.handleCloseOnClick} />,\\n                <Menu.Item text=\\\"Close Action 1.2\\\" key=\\\"1.5\\\" onClick={this.handleCloseOnClick} />,\\n                <Menu.Item text=\\\"Close Action 1.3\\\" key=\\\"1.6\\\" onClick={this.handleCloseOnClick} />,\\n              ]}\\n            />\\n            <Menu.Item\\n              text=\\\"Nested Menu 2 has a long title that will wrap and a truncated title when clicked\\\"\\n              key=\\\"Nested2\\\"\\n              isDisabled\\n              subMenuItems={[\\n                <Menu.Item text=\\\"Default 2.1\\\" key=\\\"2.1\\\" />,\\n                <Menu.Item text=\\\"Default 2.2\\\" key=\\\"2.2\\\" />,\\n                <Menu.Item text=\\\"Default 2.3\\\" key=\\\"2.3\\\" />,\\n              ]}\\n            />\\n            <Menu.Divider key=\\\"Divider2\\\" />\\n            <Menu.Item text=\\\"Close Action\\\" key=\\\"Action2\\\" onClick={this.handleCloseOnClick} />\\n            <Menu.Item text=\\\"Action\\\" key=\\\"Action1\\\" onClick={this.handleAction} />\\n            <Menu.Divider key=\\\"Divider3\\\" />\\n            <Menu.ItemGroup key=\\\"Group\\\" onChange={this.handleOnChange}>\\n              <Menu.Item text=\\\"Group Item 1\\\" key=\\\"GroupItem1\\\" isSelected={this.state.groupSelectedIndex === 0} />\\n              <Menu.Item text=\\\"Group Item 2\\\" key=\\\"GroupItem2\\\" isSelected={this.state.groupSelectedIndex === 1} />\\n              <Menu.Item text=\\\"Group Item 3\\\" key=\\\"GroupItem3\\\" isSelected={this.state.groupSelectedIndex === 2} isDisabled />\\n            </Menu.ItemGroup>\\n          </Menu>\\n          <Button onClick={this.handleButtonClick} text=\\\"Click Me\\\" />\\n        </div>\\n        <br />\\n        <p>\\n          Action button has been clicked\\n          {' '}\\n          {this.state.actionClickCount}\\n          {' '}\\n          times.\\n        </p>\\n      </div>\\n    );\\n  }\\n}\\n\\nBasicMenu.propTypes = propTypes;\\n\\nexport default BasicMenu;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _BasicMenu = _interopRequireDefault(require(\"./BasicMenu\"));\n\nvar _MenuBoundedModule = _interopRequireDefault(require(\"./MenuBounded.module.scss\"));\n\nvar cx = _bind.default.bind(_MenuBoundedModule.default);\n\nvar MenuBounded =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(MenuBounded, _React$Component);\n\n  function MenuBounded(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MenuBounded);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MenuBounded).call(this, props));\n    _this.setParentNode = _this.setParentNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getParentNode = _this.getParentNode.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(MenuBounded, [{\n    key: \"setParentNode\",\n    value: function setParentNode(node) {\n      this.parentNode = node;\n    }\n  }, {\n    key: \"getParentNode\",\n    value: function getParentNode() {\n      return this.parentNode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        className: cx('content-wrapper'),\n        ref: this.setParentNode\n      }, _react.default.createElement(_BasicMenu.default, {\n        boundingRef: this.getParentNode\n      }));\n    }\n  }]);\n  return MenuBounded;\n}(_react.default.Component);\n\nvar _default = MenuBounded;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-wrapper\":\"MenuBounded-module__content-wrapper___LFvkt\"};","export default \"import React from 'react';\\nimport classNames from 'classnames/bind';\\nimport BasicMenu from './BasicMenu';\\nimport styles from './MenuBounded.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nclass MenuBounded extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.setParentNode = this.setParentNode.bind(this);\\n    this.getParentNode = this.getParentNode.bind(this);\\n  }\\n\\n  setParentNode(node) {\\n    this.parentNode = node;\\n  }\\n\\n  getParentNode() {\\n    return this.parentNode;\\n  }\\n\\n  render() {\\n    return (\\n      <div\\n        className={cx('content-wrapper')}\\n        ref={this.setParentNode}\\n      >\\n        <BasicMenu boundingRef={this.getParentNode} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default MenuBounded;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _BasicMenu = _interopRequireDefault(require(\"./BasicMenu\"));\n\nvar MenuWidths =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(MenuWidths, _React$Component);\n\n  function MenuWidths(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MenuWidths);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MenuWidths).call(this, props));\n    _this.handleSelectChange = _this.handleSelectChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      menuWidth: undefined\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(MenuWidths, [{\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(event) {\n      this.setState({\n        menuWidth: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(\"label\", {\n        htmlFor: \"menuWidth\"\n      }, \"Select menu width \"), _react.default.createElement(\"select\", {\n        id: \"menuWidth\",\n        name: \"menuWidth\",\n        value: this.state.menuWidth,\n        onChange: this.handleSelectChange\n      }, _react.default.createElement(\"option\", {\n        value: undefined\n      }, \"Default\"), _react.default.createElement(\"option\", {\n        key: \"160\",\n        value: \"160\"\n      }, \"160\"), _react.default.createElement(\"option\", {\n        key: \"240\",\n        value: \"240\"\n      }, \"240\"), _react.default.createElement(\"option\", {\n        key: \"320\",\n        value: \"320\"\n      }, \"320\"), _react.default.createElement(\"option\", {\n        key: \"640\",\n        value: \"640\"\n      }, \"640\"), _react.default.createElement(\"option\", {\n        key: \"960\",\n        value: \"960\"\n      }, \"960\"), _react.default.createElement(\"option\", {\n        key: \"1280\",\n        value: \"1280\"\n      }, \"1280\"), _react.default.createElement(\"option\", {\n        key: \"1760\",\n        value: \"1760\"\n      }, \"1760\"), _react.default.createElement(\"option\", {\n        key: \"auto\",\n        value: \"auto\"\n      }, \"Auto\")), _react.default.createElement(\"br\", null), _react.default.createElement(\"br\", null), _react.default.createElement(_BasicMenu.default, {\n        contentWidth: this.state.menuWidth\n      }));\n    }\n  }]);\n  return MenuWidths;\n}(_react.default.Component);\n\nvar _default = MenuWidths;\nexports.default = _default;","export default \"import React from 'react';\\nimport BasicMenu from './BasicMenu';\\n\\nclass MenuWidths extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleSelectChange = this.handleSelectChange.bind(this);\\n    this.state = { menuWidth: undefined };\\n  }\\n\\n  handleSelectChange(event) {\\n    this.setState({ menuWidth: event.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <label htmlFor=\\\"menuWidth\\\">Select menu width </label>\\n        <select id=\\\"menuWidth\\\" name=\\\"menuWidth\\\" value={this.state.menuWidth} onChange={this.handleSelectChange}>\\n          <option value={undefined}>Default</option>\\n          <option key=\\\"160\\\" value=\\\"160\\\">160</option>\\n          <option key=\\\"240\\\" value=\\\"240\\\">240</option>\\n          <option key=\\\"320\\\" value=\\\"320\\\">320</option>\\n          <option key=\\\"640\\\" value=\\\"640\\\">640</option>\\n          <option key=\\\"960\\\" value=\\\"960\\\">960</option>\\n          <option key=\\\"1280\\\" value=\\\"1280\\\">1280</option>\\n          <option key=\\\"1760\\\" value=\\\"1760\\\">1760</option>\\n          <option key=\\\"auto\\\" value=\\\"auto\\\">Auto</option>\\n        </select>\\n        <br />\\n        <br />\\n\\n        <BasicMenu contentWidth={this.state.menuWidth} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default MenuWidths;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _terraMenu = _interopRequireDefault(require(\"terra-menu\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _BasicMenuModule = _interopRequireDefault(require(\"./BasicMenu.module.scss\"));\n\nvar cx = _bind.default.bind(_BasicMenuModule.default);\n\nvar propTypes = {\n  isArrowDisplayed: _propTypes.default.bool,\n  contentWidth: _propTypes.default.string,\n  boundingRef: _propTypes.default.func\n};\n\nvar MenuWithInstructionsForUse =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(MenuWithInstructionsForUse, _React$Component);\n\n  function MenuWithInstructionsForUse(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MenuWithInstructionsForUse);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MenuWithInstructionsForUse).call(this, props));\n    _this.handleButtonClick = _this.handleButtonClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRequestClose = _this.handleRequestClose.bind((0, _assertThisInitialized2.default)(_this));\n    _this.setButtonNode = _this.setButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getButtonNode = _this.getButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleAction = _this.handleAction.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleCloseOnClick = _this.handleCloseOnClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      open: false,\n      actionClickCount: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(MenuWithInstructionsForUse, [{\n    key: \"setButtonNode\",\n    value: function setButtonNode(node) {\n      this.buttonNode = node;\n    }\n  }, {\n    key: \"getButtonNode\",\n    value: function getButtonNode() {\n      return this.buttonNode;\n    }\n  }, {\n    key: \"handleButtonClick\",\n    value: function handleButtonClick() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleRequestClose\",\n    value: function handleRequestClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleCloseOnClick\",\n    value: function handleCloseOnClick(event) {\n      event.preventDefault();\n      this.handleRequestClose();\n    }\n  }, {\n    key: \"handleAction\",\n    value: function handleAction(event) {\n      event.preventDefault();\n      var newState = this.state;\n      newState.actionClickCount += 1;\n      this.setState(newState);\n      this.handleRequestClose();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", {\n        className: cx('menu-wrapper'),\n        ref: this.setButtonNode\n      }, _react.default.createElement(_terraMenu.default, {\n        isOpen: this.state.open,\n        targetRef: this.getButtonNode,\n        onRequestClose: this.handleRequestClose,\n        contentWidth: this.props.contentWidth,\n        isArrowDisplayed: this.props.isArrowDisplayed,\n        boundingRef: this.props.boundingRef\n      }, _react.default.createElement(_terraMenu.default.Item, {\n        text: \"{ApplicationName} Help\",\n        key: \"Help1\",\n        onClick: this.handleAction,\n        isInstructionsForUse: true\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"Getting Started\",\n        key: \"Help2\",\n        onClick: this.handleCloseOnClick,\n        isSelectable: true\n      }), _react.default.createElement(_terraMenu.default.Item, {\n        text: \"About {ApplicationName}\",\n        key: \"Help3\",\n        isSelected: this.state.toggle1Selected,\n        onClick: this.handleCloseOnClick\n      })), _react.default.createElement(_terraButton.default, {\n        onClick: this.handleButtonClick,\n        text: \"Help\"\n      })), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"Instructions Icon has been clicked\", ' ', this.state.actionClickCount, ' ', \"times.\"));\n    }\n  }]);\n  return MenuWithInstructionsForUse;\n}(_react.default.Component);\n\nMenuWithInstructionsForUse.propTypes = propTypes;\nvar _default = MenuWithInstructionsForUse;\nexports.default = _default;","export default \"import React from 'react';\\nimport Button from 'terra-button';\\nimport PropTypes from 'prop-types';\\nimport Menu from 'terra-menu';\\nimport classNames from 'classnames/bind';\\nimport styles from './BasicMenu.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  isArrowDisplayed: PropTypes.bool,\\n  contentWidth: PropTypes.string,\\n  boundingRef: PropTypes.func,\\n};\\n\\nclass MenuWithInstructionsForUse extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleButtonClick = this.handleButtonClick.bind(this);\\n    this.handleRequestClose = this.handleRequestClose.bind(this);\\n    this.setButtonNode = this.setButtonNode.bind(this);\\n    this.getButtonNode = this.getButtonNode.bind(this);\\n    this.handleAction = this.handleAction.bind(this);\\n    this.handleCloseOnClick = this.handleCloseOnClick.bind(this);\\n    this.state = {\\n      open: false,\\n      actionClickCount: 0,\\n    };\\n  }\\n\\n  setButtonNode(node) {\\n    this.buttonNode = node;\\n  }\\n\\n  getButtonNode() {\\n    return this.buttonNode;\\n  }\\n\\n  handleButtonClick() {\\n    this.setState({ open: true });\\n  }\\n\\n  handleRequestClose() {\\n    this.setState({ open: false });\\n  }\\n\\n  handleCloseOnClick(event) {\\n    event.preventDefault();\\n    this.handleRequestClose();\\n  }\\n\\n  handleAction(event) {\\n    event.preventDefault();\\n    const newState = this.state;\\n    newState.actionClickCount += 1;\\n    this.setState(newState);\\n    this.handleRequestClose();\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <div className={cx('menu-wrapper')} ref={this.setButtonNode}>\\n          <Menu\\n            isOpen={this.state.open}\\n            targetRef={this.getButtonNode}\\n            onRequestClose={this.handleRequestClose}\\n            contentWidth={this.props.contentWidth}\\n            isArrowDisplayed={this.props.isArrowDisplayed}\\n            boundingRef={this.props.boundingRef}\\n          >\\n            <Menu.Item\\n              text=\\\"{ApplicationName} Help\\\"\\n              key=\\\"Help1\\\"\\n              onClick={this.handleAction}\\n              isInstructionsForUse\\n            />\\n            <Menu.Item\\n              text=\\\"Getting Started\\\"\\n              key=\\\"Help2\\\"\\n              onClick={this.handleCloseOnClick}\\n              isSelectable\\n            />\\n            <Menu.Item\\n              text=\\\"About {ApplicationName}\\\"\\n              key=\\\"Help3\\\"\\n              isSelected={this.state.toggle1Selected}\\n              onClick={this.handleCloseOnClick}\\n            />\\n          </Menu>\\n          <Button onClick={this.handleButtonClick} text=\\\"Help\\\" />\\n        </div>\\n        <br />\\n        <p>\\n          Instructions Icon has been clicked\\n          {' '}\\n          {this.state.actionClickCount}\\n          {' '}\\n          times.\\n        </p>\\n      </div>\\n    );\\n  }\\n}\\n\\nMenuWithInstructionsForUse.propTypes = propTypes;\\n\\nexport default MenuWithInstructionsForUse;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _Menu = _interopRequireDefault(require(\"!raw-loader!../../../../src/Menu\"));\n\nvar _MenuItem = _interopRequireDefault(require(\"!raw-loader!../../../../src/MenuItem\"));\n\nvar _MenuItemGroup = _interopRequireDefault(require(\"!raw-loader!../../../../src/MenuItemGroup\"));\n\nvar _BasicMenu = _interopRequireDefault(require(\"../example/BasicMenu\"));\n\nvar _BasicMenu2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/BasicMenu\"));\n\nvar _MenuBounded = _interopRequireDefault(require(\"../example/MenuBounded\"));\n\nvar _MenuBounded2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/MenuBounded\"));\n\nvar _MenuWidths = _interopRequireDefault(require(\"../example/MenuWidths\"));\n\nvar _MenuWidths2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/MenuWidths\"));\n\nvar _MenuWithInstructionsForUse = _interopRequireDefault(require(\"../example/MenuWithInstructionsForUse\"));\n\nvar _MenuWithInstructionsForUse2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/MenuWithInstructionsForUse\"));\n\n// Component Source\n// Example Files\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Default Menu',\n      example: _react.default.createElement(_BasicMenu.default, null),\n      source: _BasicMenu2.default\n    }, {\n      title: 'Menu With Arrow',\n      example: _react.default.createElement(_BasicMenu.default, {\n        isArrowDisplayed: true\n      }),\n      source: _BasicMenu2.default\n    }, {\n      title: 'Menu Bounded',\n      example: _react.default.createElement(_MenuBounded.default, null),\n      source: _MenuBounded2.default\n    }, {\n      title: 'Menu Widths',\n      example: _react.default.createElement(_MenuWidths.default, null),\n      source: _MenuWidths2.default\n    }, {\n      title: 'Help Menu Item: Electronic Instructions For Use',\n      description: 'The Electronic Instructions For Use (eIFU) icon is a regulatory requirement for CE Mark Certification and Compliance, and is used to indicate Help content that is the equivalent of a manufacturer\\'s instruction manual. The label for the Help menu option should be the name of the application followed by \"Help.\"',\n      example: _react.default.createElement(_MenuWithInstructionsForUse.default, null),\n      source: _MenuWithInstructionsForUse2.default\n    }],\n    propsTables: [{\n      componentName: 'Menu',\n      componentSrc: _Menu.default\n    }, {\n      componentName: 'Menu.Item',\n      componentSrc: _MenuItem.default\n    }, {\n      componentName: 'Menu.ItemGroup',\n      componentSrc: _MenuItemGroup.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}