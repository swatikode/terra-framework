{"version":3,"sources":["webpack:///./packages/terra-date-input/lib/DateInput.js","webpack:///./packages/terra-date-input/lib/DateInputUtil.js","webpack:///./packages/terra-date-input/lib/DateInput.module.scss?62f7"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_objectWithoutProperties2","_extends2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_react","_propTypes","_bind","_reactIntl","_terraFormInput","KeyCode","_DateInputUtil","_DateInputModule","cx","bind","propTypes","name","string","isRequired","dayAttributes","object","disabled","bool","displayFormat","oneOf","intl","intlShape","isIncomplete","isInvalid","monthAttributes","onBlur","func","onChange","onFocus","refCallback","required","yearAttributes","defaultProps","undefined","DateInput","_React$Component","props","_this","this","call","acceptedDateValue","process","env","console","warn","concat","dateInputContainer","createRef","monthRef","handleMonthChange","handleDayChange","handleYearChange","handleMonthKeyDown","handleDayKeyDown","handleYearKeyDown","handleFocus","handleMonthFocus","handleDayFocus","handleYearFocus","focusMonth","focusDay","focusYear","handleMonthBlur","handleDayBlur","handleYearBlur","formattedRender","monthRender","dayRender","yearRender","handleMonthClick","state","month","splitMonth","day","splitDay","year","splitYear","isFocused","monthIsFocused","dayIsFocused","yearIsFocused","isPlaceholderColored","key","prevProps","setState","event","current","contains","relatedTarget","handleBlur","inputType","MONTH","DAY","YEAR","type","stateValue","target","length","handleValueChange","activeTarget","document","activeElement","computedDisplayFormat","locale","keyCode","KEY_BACK_SPACE","KEY_DELETE","KEY_SPACE","KEY_UP","KEY_DOWN","previousStateValue","preventDefault","incrementDay","decrementDay","incrementYear","decrementYear","validNumericInput","inputValue","Number","dayRef","focus","yearRef","handleOnChange","dateString","DateInputMonthWrapperClassNames","focused","error","incomplete","DateInputMonthClassNames","createElement","className","formatMessage","id","ref","onKeyDown","onClick","hidden","_this2","numberAttributes","window","matchMedia","matches","pattern","inputRef","placeholder","maxLength","size","autoComplete","_this3","monthDayYearFormat","Fragment","dayMonthYearFormat","_this4","_this$props","customProps","_this$state","dateInputClassNames","dateValue","element","Component","_default","injectIntl","DateInputUtil","test","numericDay","toString","numericYear","splitValue","split","isNaN","parseFloat","module"],"mappings":"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","file":"4-bb358d90a798e5c5182a.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _terraFormInput = _interopRequireDefault(require(\"terra-form-input\"));\n\nvar KeyCode = _interopRequireWildcard(require(\"keycode-js\"));\n\nvar _DateInputUtil = _interopRequireDefault(require(\"./DateInputUtil\"));\n\nvar _DateInputModule = _interopRequireDefault(require(\"./DateInput.module.scss\"));\n\nvar cx = _bind.default.bind(_DateInputModule.default);\n\nvar propTypes = {\n  /**\n   * Name of the date input. This name should be unique.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * Custom input attributes to apply to the day input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  dayAttributes: _propTypes.default.object,\n\n  /**\n   * Whether the date input should be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Can be used to set the display format. One of `month-day-year` or `day-month-year`.\n   * Overrides default locale display format.\n   */\n  displayFormat: _propTypes.default.oneOf(['month-day-year', 'day-month-year']),\n\n  /**\n   * @private\n   * Intl object injected from injectIntl\n   */\n  intl: _reactIntl.intlShape,\n\n  /**\n  * Whether the input displays as Incomplete. Use when no value has been provided. _(usage note: `required` must also be set)_.\n  */\n  isIncomplete: _propTypes.default.bool,\n\n  /**\n  * Whether the input displays as Invalid. Use when value does not meet validation pattern.\n  */\n  isInvalid: _propTypes.default.bool,\n\n  /**\n   * Custom input attributes to apply to the month select\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  monthAttributes: _propTypes.default.object,\n\n  /**\n   * A callback function to execute when the entire date input component loses focus.\n   * This event does not get triggered when the focus is moved from one input to another within the date input component because the focus is still within the main date input component.\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * A callback function to execute when a date is entered.\n   * The first parameter is the event. The second parameter is the changed date value.\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * A callback function triggered when the day, month, or year input receives focus.\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * Callback ref to access date input containing DOM element.\n   */\n  refCallback: _propTypes.default.func,\n\n  /**\n   * Whether is the date input is required\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * An date string representation of the date value used for the component. This should be in ISO 8601 format: YYYY-MM-DD.\n   */\n  value: _propTypes.default.string,\n\n  /**\n   * Custom input attributes to apply to the year input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  yearAttributes: _propTypes.default.object\n};\nvar defaultProps = {\n  disabled: false,\n  monthAttributes: {},\n  dayAttributes: {},\n  yearAttributes: {},\n  onBlur: null,\n  onChange: null,\n  onFocus: undefined,\n  refCallback: undefined,\n  value: undefined\n};\n\nvar DateInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(DateInput, _React$Component);\n\n  function DateInput(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DateInput);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DateInput).call(this, props));\n    var value = _this.props.value;\n\n    if (value && !_DateInputUtil.default.acceptedDateValue(value)) {\n      if (process.env !== 'production') {\n        // eslint-disable-next-line no-console\n        console.warn(\"An invalid date value, \".concat(value, \", has been passed to the terra-date-input. \") + 'This value has been ignored and will not be rendered. ' + 'Date values must be in YYYY-MM-DD format.');\n      }\n\n      value = undefined;\n    }\n\n    _this.dateInputContainer = _react.default.createRef();\n    _this.monthRef = _react.default.createRef();\n    _this.handleMonthChange = _this.handleMonthChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleDayChange = _this.handleDayChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleYearChange = _this.handleYearChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMonthKeyDown = _this.handleMonthKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleDayKeyDown = _this.handleDayKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleYearKeyDown = _this.handleYearKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleFocus = _this.handleFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMonthFocus = _this.handleMonthFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleDayFocus = _this.handleDayFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleYearFocus = _this.handleYearFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.focusMonth = _this.focusMonth.bind((0, _assertThisInitialized2.default)(_this));\n    _this.focusDay = _this.focusDay.bind((0, _assertThisInitialized2.default)(_this));\n    _this.focusYear = _this.focusYear.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMonthBlur = _this.handleMonthBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleDayBlur = _this.handleDayBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleYearBlur = _this.handleYearBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.formattedRender = _this.formattedRender.bind((0, _assertThisInitialized2.default)(_this));\n    _this.monthRender = _this.monthRender.bind((0, _assertThisInitialized2.default)(_this));\n    _this.dayRender = _this.dayRender.bind((0, _assertThisInitialized2.default)(_this));\n    _this.yearRender = _this.yearRender.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMonthClick = _this.handleMonthClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      month: _DateInputUtil.default.splitMonth(value),\n      day: _DateInputUtil.default.splitDay(value),\n      year: _DateInputUtil.default.splitYear(value),\n      isFocused: false,\n      monthIsFocused: false,\n      dayIsFocused: false,\n      yearIsFocused: false,\n      isPlaceholderColored: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(DateInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.value === prevProps.value) {\n        return;\n      } // eslint-disable-next-line react/no-did-update-set-state\n\n\n      this.setState({\n        month: _DateInputUtil.default.splitMonth(this.props.value),\n        day: _DateInputUtil.default.splitDay(this.props.value),\n        year: _DateInputUtil.default.splitYear(this.props.value)\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(event) {\n      if (this.props.onFocus && !this.dateInputContainer.current.contains(event.relatedTarget)) {\n        this.props.onFocus(event);\n      }\n\n      this.setState({\n        isFocused: true\n      });\n    }\n  }, {\n    key: \"handleMonthFocus\",\n    value: function handleMonthFocus(event) {\n      this.handleFocus(event);\n      this.setState({\n        monthIsFocused: true\n      });\n    }\n  }, {\n    key: \"handleDayFocus\",\n    value: function handleDayFocus(event) {\n      this.handleFocus(event);\n      this.setState({\n        dayIsFocused: true\n      });\n    }\n  }, {\n    key: \"handleYearFocus\",\n    value: function handleYearFocus(event) {\n      this.handleFocus(event);\n      this.setState({\n        yearIsFocused: true\n      });\n    }\n  }, {\n    key: \"handleMonthBlur\",\n    value: function handleMonthBlur(event) {\n      this.handleBlur(event, _DateInputUtil.default.inputType.MONTH);\n\n      if (this.state.month === '') {\n        this.setState({\n          isPlaceholderColored: true\n        });\n      }\n\n      this.setState({\n        monthIsFocused: false\n      });\n    }\n  }, {\n    key: \"handleDayBlur\",\n    value: function handleDayBlur(event) {\n      this.handleBlur(event, _DateInputUtil.default.inputType.DAY);\n      this.setState({\n        dayIsFocused: false\n      });\n    }\n  }, {\n    key: \"handleYearBlur\",\n    value: function handleYearBlur(event) {\n      this.handleBlur(event, _DateInputUtil.default.inputType.YEAR);\n      this.setState({\n        yearIsFocused: false\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(event, type) {\n      this.setState({\n        isFocused: false\n      });\n\n      if (type === _DateInputUtil.default.inputType.DAY) {\n        var stateValue = event.target.value; // Prepend a 0 to the value when losing focus and the value is single digit.\n\n        if (stateValue.length === 1) {\n          stateValue = '0'.concat(stateValue);\n          this.handleValueChange(event, type, stateValue);\n        }\n      }\n\n      if (this.props.onBlur) {\n        // Modern browsers support event.relatedTarget but event.relatedTarget returns null in IE 10 / IE 11.\n        // IE 11 sets document.activeElement to the next focused element before the blur event is called.\n        var activeTarget = event.relatedTarget ? event.relatedTarget : document.activeElement; // Handle blur only if focus has moved out of the entire date input component.\n\n        if (!this.dateInputContainer.current.contains(activeTarget)) {\n          this.props.onBlur(event);\n        }\n      }\n    }\n    /**\n    * Takes a key input from the month select, and processes it based on the value of the keycode.\n    * @param {Object} event Event object generated from the event delegation.\n    */\n\n  }, {\n    key: \"handleMonthKeyDown\",\n    value: function handleMonthKeyDown(event) {\n      var displayFormat = _DateInputUtil.default.computedDisplayFormat(this.props.displayFormat, this.props.intl.locale);\n\n      if (event.keyCode === KeyCode.KEY_BACK_SPACE || event.keyCode === KeyCode.KEY_DELETE) {\n        this.handleValueChange(event, _DateInputUtil.default.inputType.MONTH, '');\n\n        if (displayFormat === 'day-month-year' && event.target.value === '') {\n          this.focusDay(event);\n        }\n      }\n\n      if (event.keyCode === KeyCode.KEY_SPACE || event.keyCode === KeyCode.KEY_UP || event.keyCode === KeyCode.KEY_DOWN) {\n        this.setState({\n          isPlaceholderColored: false\n        });\n      }\n    }\n    /**\n     * Takes a key input from the day input, and processes it based on the value of the keycode.\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"handleDayKeyDown\",\n    value: function handleDayKeyDown(event) {\n      var stateValue = this.state.day || '0';\n      var previousStateValue = stateValue;\n\n      var displayFormat = _DateInputUtil.default.computedDisplayFormat(this.props.displayFormat, this.props.intl.locale); // prevent e and . characters from being entered into number input on keyDown\n\n\n      if (event.keyCode === 69 || event.keyCode === 190) {\n        event.preventDefault();\n        return;\n      }\n\n      if (event.keyCode === KeyCode.KEY_UP) {\n        event.preventDefault();\n        stateValue = _DateInputUtil.default.incrementDay(stateValue);\n      }\n\n      if (event.keyCode === KeyCode.KEY_DOWN) {\n        event.preventDefault();\n        stateValue = _DateInputUtil.default.decrementDay(stateValue);\n      }\n\n      if (previousStateValue !== stateValue) {\n        this.handleValueChange(event, _DateInputUtil.default.inputType.DAY, stateValue);\n      }\n\n      if (event.keyCode === KeyCode.KEY_BACK_SPACE || event.keyCode === KeyCode.KEY_DELETE) {\n        if (displayFormat === 'month-day-year' && event.target.value === '') {\n          this.focusMonth(event);\n        }\n      }\n    }\n    /**\n     * Takes a key input from the year input, and processes it based on the value of the keycode.\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"handleYearKeyDown\",\n    value: function handleYearKeyDown(event) {\n      var stateValue = this.state.year || '0';\n      var previousStateValue = stateValue;\n\n      var displayFormat = _DateInputUtil.default.computedDisplayFormat(this.props.displayFormat, this.props.intl.locale); // prevent e and . characters from being entered into number input on keyDown\n\n\n      if (event.keyCode === 69 || event.keyCode === 190) {\n        event.preventDefault();\n        return;\n      }\n\n      if (event.keyCode === KeyCode.KEY_UP) {\n        event.preventDefault();\n        stateValue = _DateInputUtil.default.incrementYear(stateValue);\n      }\n\n      if (event.keyCode === KeyCode.KEY_DOWN) {\n        event.preventDefault();\n        stateValue = _DateInputUtil.default.decrementYear(stateValue);\n      }\n\n      if (previousStateValue !== stateValue) {\n        this.handleValueChange(event, _DateInputUtil.default.inputType.YEAR, stateValue);\n      }\n\n      if (event.keyCode === KeyCode.KEY_BACK_SPACE || event.keyCode === KeyCode.KEY_DELETE) {\n        if (displayFormat === 'month-day-year' && event.target.value === '') {\n          this.focusDay(event);\n        }\n\n        if (displayFormat === 'day-month-year' && event.target.value === '') {\n          this.focusMonth(event);\n        }\n      }\n    }\n  }, {\n    key: \"handleMonthChange\",\n    value: function handleMonthChange(event) {\n      if (!_DateInputUtil.default.validNumericInput(event.target.value)) {\n        return;\n      }\n\n      var inputValue = event.target.value;\n      var stateValue = this.state.month;\n      var maxValue = 12; // Ignore the entry if the value did not change or it is invalid.\n\n      if (inputValue === stateValue || Number(inputValue) > maxValue) {\n        return;\n      }\n\n      this.handleValueChange(event, _DateInputUtil.default.inputType.MONTH, inputValue);\n    }\n  }, {\n    key: \"handleDayChange\",\n    value: function handleDayChange(event) {\n      if (!_DateInputUtil.default.validNumericInput(event.target.value)) {\n        return;\n      }\n\n      var inputValue = event.target.value;\n      var stateValue = this.state.day;\n      var maxValue = 31; // Ignore the entry if the value did not change or it is invalid.\n      // When 'Predictive text' is enabled on Android the maxLength attribute on the input is ignored so we have\n      // to check the length of inputValue to make sure that it is less then 2.\n\n      if (inputValue === stateValue || inputValue.length > 2 || Number(inputValue) > maxValue || inputValue.length === 2 && !(inputValue > 0)) {\n        return;\n      }\n\n      this.handleValueChange(event, _DateInputUtil.default.inputType.DAY, inputValue);\n    }\n  }, {\n    key: \"handleYearChange\",\n    value: function handleYearChange(event) {\n      if (!_DateInputUtil.default.validNumericInput(event.target.value)) {\n        return;\n      }\n\n      var inputValue = event.target.value;\n      var maxValue = 9999; // When 'Predictive text' is enabled on Android the maxLength attribute on the input is ignored so we have\n      // to check the length of inputValue to make sure that it is less then 4.\n\n      if (inputValue.length > 5 || Number(inputValue) > maxValue) {\n        return;\n      }\n\n      this.handleValueChange(event, _DateInputUtil.default.inputType.YEAR, inputValue);\n    }\n    /**\n     * Shifts programmatic focus to day input\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"focusDay\",\n    value: function focusDay(event) {\n      this.dayRef.focus();\n      event.preventDefault();\n    }\n    /**\n     * Shifts programmatic focus to year input\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"focusYear\",\n    value: function focusYear(event) {\n      this.yearRef.focus();\n      event.preventDefault();\n    }\n    /**\n     * Shifts programmatic focus to month select\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"focusMonth\",\n    value: function focusMonth(event) {\n      this.monthRef.current.focus();\n      event.preventDefault();\n    }\n    /**\n     * On Click handler for month select\n     */\n\n  }, {\n    key: \"handleMonthClick\",\n    value: function handleMonthClick() {\n      this.setState({\n        isPlaceholderColored: false\n      });\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange(event, type, value) {\n      if (type === _DateInputUtil.default.inputType.MONTH) {\n        this.setState({\n          month: value\n        });\n      } else if (type === _DateInputUtil.default.inputType.DAY) {\n        this.setState({\n          day: value\n        });\n      } else if (type === _DateInputUtil.default.inputType.YEAR) {\n        this.setState({\n          year: value\n        });\n      }\n\n      if (this.props.onChange) {\n        var month = type === _DateInputUtil.default.inputType.MONTH ? value : this.state.month;\n        var day = type === _DateInputUtil.default.inputType.DAY ? value : this.state.day;\n        var year = type === _DateInputUtil.default.inputType.YEAR ? value : this.state.year;\n\n        if (month === '' && day === '' && year === '') {\n          this.handleOnChange(event, '');\n        } else {\n          var dateString = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n          this.handleOnChange(event, dateString);\n        }\n      }\n    }\n    /**\n     * Calls onChange callback prop if it exists\n     * @param {Object} event Event object generated from the event delegation.\n     * @param {String} dateString Returns the dateString from the component\n     */\n\n  }, {\n    key: \"handleOnChange\",\n    value: function handleOnChange(event, dateString) {\n      if (this.props.onChange) {\n        this.props.onChange(event, dateString);\n      }\n    }\n    /**\n     * Renders month input\n     */\n\n  }, {\n    key: \"monthRender\",\n    value: function monthRender() {\n      var DateInputMonthWrapperClassNames = cx(['month-select-wrapper', {\n        focused: this.state.monthIsFocused\n      }, {\n        disabled: this.props.disabled\n      }, {\n        error: this.props.isInvalid\n      }, {\n        incomplete: this.props.isIncomplete && this.props.required && !this.props.isInvalid\n      }]);\n      var DateInputMonthClassNames = cx(['month-select', {\n        'is-placeholder': this.state.month === '' && this.state.isPlaceholderColored\n      }, {\n        focused: this.state.monthIsFocused\n      }, {\n        disabled: this.props.disabled\n      }, {\n        error: this.props.isInvalid\n      }, {\n        incomplete: this.props.isIncomplete && this.props.required && !this.props.isInvalid\n      }]);\n      return _react.default.createElement(\"div\", {\n        className: DateInputMonthWrapperClassNames\n      }, _react.default.createElement(\"select\", (0, _extends2.default)({}, this.props.monthAttributes, {\n        \"aria-label\": this.props.intl.formatMessage({\n          id: 'Terra.date.input.monthLabel'\n        }),\n        ref: this.monthRef,\n        className: DateInputMonthClassNames,\n        value: this.state.month,\n        name: 'terra-date-month-'.concat(this.props.name),\n        onChange: this.handleMonthChange,\n        onKeyDown: this.handleMonthKeyDown,\n        onClick: this.handleMonthClick,\n        onFocus: this.handleMonthFocus,\n        onBlur: this.handleMonthBlur,\n        disabled: this.props.disabled\n      }), _react.default.createElement(\"option\", {\n        value: \"\",\n        hidden: true\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.monthPlaceholder'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.january'\n        }),\n        value: \"01\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.january'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.february'\n        }),\n        value: \"02\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.february'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.march'\n        }),\n        value: \"03\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.march'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.april'\n        }),\n        value: \"04\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.april'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.may'\n        }),\n        value: \"05\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.may'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.june'\n        }),\n        value: \"06\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.june'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.july'\n        }),\n        value: \"07\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.july'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.august'\n        }),\n        value: \"08\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.august'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.september'\n        }),\n        value: \"09\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.september'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.october'\n        }),\n        value: \"10\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.october'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.november'\n        }),\n        value: \"11\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.november'\n      })), _react.default.createElement(\"option\", {\n        key: this.props.intl.formatMessage({\n          id: 'Terra.date.input.december'\n        }),\n        value: \"12\"\n      }, this.props.intl.formatMessage({\n        id: 'Terra.date.input.december'\n      }))));\n    }\n    /**\n     * Renders day input\n     */\n\n  }, {\n    key: \"dayRender\",\n    value: function dayRender() {\n      var _this2 = this;\n\n      /**\n       * JAWS + Chrome is super buggy when it comes to up/down arrow keys cycling values on the input and only seems to work\n       * when input[type=number]. This works great, except in Firefox where <input value=\"03\" type=\"number\" />\n       * displays in the browsers as \"3\".\n       * To work around this issue, the day input uses type=\"number\" for all browsers, but if we're in a Mozilla browser,\n       * we switch over to using type=\"text\" and pattern=\"\\d*\" which allows displaying value=\"03\" in the browser as \"03\"\n       */\n\n      /* eslint-disable no-useless-escape */\n      var numberAttributes = window.matchMedia('(min--moz-device-pixel-ratio:0)').matches ? {\n        type: 'text',\n        pattern: '\\\\d*'\n      } : {\n        type: 'number'\n      };\n      /* eslint-enable no-useless-escape */\n\n      return _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, this.props.dayAttributes, numberAttributes, {\n        refCallback: function refCallback(inputRef) {\n          _this2.dayRef = inputRef;\n        },\n        \"aria-label\": this.props.intl.formatMessage({\n          id: 'Terra.date.input.dayLabel'\n        }),\n        className: cx('date-input-day', {\n          'is-focused': this.state.dayIsFocused\n        }),\n        value: this.state.day,\n        name: 'terra-date-day-'.concat(this.props.name),\n        placeholder: this.props.intl.formatMessage({\n          id: 'Terra.date.input.dayPlaceholder'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleDayChange,\n        onKeyDown: this.handleDayKeyDown,\n        onFocus: this.handleDayFocus,\n        onBlur: this.handleDayBlur,\n        size: \"2\",\n        autoComplete: \"off\",\n        disabled: this.props.disabled,\n        isInvalid: this.props.isInvalid,\n        isIncomplete: this.props.isIncomplete,\n        required: this.props.required\n      }));\n    }\n    /**\n     * Renders year select\n     */\n\n  }, {\n    key: \"yearRender\",\n    value: function yearRender() {\n      var _this3 = this;\n\n      /**\n       * JAWS + Chrome is super buggy when it comes to up/down arrow keys cycling values on the input and only seems to work\n       * when input[type=number]. This works great, except in Firefox where <input value=\"03\" type=\"number\" /> displays the\n       * value in the browsers as \"3\" instead of \"03\". https://bugzilla.mozilla.org/show_bug.cgi?id=1005603\n       * To work around this issue, the year input uses type=\"number\" for all browsers, but if we're in a Mozilla browser,\n       * we switch over to using type=\"text\" and pattern=\"\\d*\" which allows displaying value=\"03\" in the browser as \"03\"\n       */\n\n      /* eslint-disable no-useless-escape */\n      var numberAttributes = window.matchMedia('(min--moz-device-pixel-ratio:0)').matches ? {\n        type: 'text',\n        pattern: '\\\\d*'\n      } : {\n        type: 'number'\n      };\n      /* eslint-enable no-useless-escape */\n\n      return _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, this.props.yearAttributes, numberAttributes, {\n        refCallback: function refCallback(inputRef) {\n          _this3.yearRef = inputRef;\n        },\n        \"aria-label\": this.props.intl.formatMessage({\n          id: 'Terra.date.input.yearLabel'\n        }),\n        className: cx('date-input-year', {\n          'is-focused': this.state.yearIsFocused\n        }),\n        value: this.state.year,\n        name: 'terra-date-year-'.concat(this.props.name),\n        placeholder: this.props.intl.formatMessage({\n          id: 'Terra.date.input.yearPlaceholder'\n        }),\n        maxLength: \"4\",\n        onChange: this.handleYearChange,\n        onKeyDown: this.handleYearKeyDown,\n        onFocus: this.handleYearFocus,\n        onBlur: this.handleYearBlur,\n        size: \"4\",\n        autoComplete: \"off\",\n        disabled: this.props.disabled,\n        isInvalid: this.props.isInvalid,\n        isIncomplete: this.props.isIncomplete,\n        required: this.props.required\n      }));\n    }\n    /**\n     * Renders inputs in month-day-year or day-month-year depending on displayFormat or locale\n     * Defaults to day-month-year\n     */\n\n  }, {\n    key: \"formattedRender\",\n    value: function formattedRender() {\n      var monthDayYearFormat = _react.default.createElement(_react.default.Fragment, null, this.monthRender(), this.dayRender(), this.yearRender());\n\n      var dayMonthYearFormat = _react.default.createElement(_react.default.Fragment, null, this.dayRender(), this.monthRender(), this.yearRender());\n\n      if (_DateInputUtil.default.computedDisplayFormat(this.props.displayFormat, this.props.intl.locale) === 'month-day-year') {\n        return monthDayYearFormat;\n      }\n\n      return dayMonthYearFormat;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          displayFormat = _this$props.displayFormat,\n          dayAttributes = _this$props.dayAttributes,\n          monthAttributes = _this$props.monthAttributes,\n          yearAttributes = _this$props.yearAttributes,\n          intl = _this$props.intl,\n          isInvalid = _this$props.isInvalid,\n          isIncomplete = _this$props.isIncomplete,\n          onBlur = _this$props.onBlur,\n          onChange = _this$props.onChange,\n          onFocus = _this$props.onFocus,\n          refCallback = _this$props.refCallback,\n          required = _this$props.required,\n          name = _this$props.name,\n          value = _this$props.value,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"disabled\", \"displayFormat\", \"dayAttributes\", \"monthAttributes\", \"yearAttributes\", \"intl\", \"isInvalid\", \"isIncomplete\", \"onBlur\", \"onChange\", \"onFocus\", \"refCallback\", \"required\", \"name\", \"value\"]);\n      var _this$state = this.state,\n          month = _this$state.month,\n          day = _this$state.day,\n          year = _this$state.year;\n      var dateInputClassNames = cx([{\n        disabled: disabled\n      }, 'date-input', {\n        'is-focused': this.state.isFocused\n      }, customProps.className]); // Using the state of month, day, and year to create a formatted date value\n\n      var dateValue = '';\n\n      if (month.length > 0 || day.length > 0 || year.length > 0) {\n        dateValue = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n      }\n\n      return _react.default.createElement(\"div\", (0, _extends2.default)({}, customProps, {\n        className: dateInputClassNames,\n        ref: function ref(element) {\n          _this4.dateInputContainer.current = element;\n\n          if (refCallback) {\n            refCallback(element);\n          }\n        }\n      }), _react.default.createElement(\"input\", {\n        // Create a hidden input for storing the name and value attributes to use when submitting the form.\n        // The data stored in the value attribute will be the visible date in the date input but formatted in YYYY-MM-DD format.\n        type: \"hidden\",\n        name: name,\n        value: dateValue\n      }), this.formattedRender());\n    }\n  }]);\n  return DateInput;\n}(_react.default.Component);\n\nDateInput.propTypes = propTypes;\nDateInput.defaultProps = defaultProps;\n\nvar _default = (0, _reactIntl.injectIntl)(DateInput);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar DateInputUtil =\n/*#__PURE__*/\nfunction () {\n  function DateInputUtil() {\n    (0, _classCallCheck2.default)(this, DateInputUtil);\n  }\n\n  (0, _createClass2.default)(DateInputUtil, null, [{\n    key: \"validNumericInput\",\n\n    /**\n     * Determines if a provided numeric input value is valid.\n     * Valid inputs are either empty strings or numeric.\n     * @param {String} value Value to validate\n     * @return True if the value is empty or numeric, false otherwise.\n     */\n    value: function validNumericInput(value) {\n      return value.length === 0 || /^\\d+$/.test(value);\n    }\n    /**\n     * Increments a day to it's next value\n     * @param {String} day Day to increment\n     * @return {String} Returns a string representation of the value of the passed in day after it's incremented\n     */\n\n  }, {\n    key: \"incrementDay\",\n    value: function incrementDay(day) {\n      // Handle empty input value\n      if (day === '') {\n        return '01';\n      }\n\n      if (day) {\n        var numericDay = Number(day); // Loop back to 01 if incrementing day from \"31\"\n\n        if (numericDay === 31) {\n          return '01';\n        }\n\n        if (numericDay < 31) {\n          numericDay += 1;\n          return numericDay < 10 ? '0'.concat(numericDay.toString()) : numericDay.toString();\n        }\n\n        return day;\n      }\n\n      return null;\n    }\n    /**\n     * Decrements a day to it's next value\n     * @param {String} day Day to decrement\n     * @return {String} Returns a string representation of the value of the passed in day after it's decremented\n     */\n\n  }, {\n    key: \"decrementDay\",\n    value: function decrementDay(day) {\n      // Handle empty input value\n      if (day === '') {\n        return '31';\n      }\n\n      if (day) {\n        var numericDay = Number(day); // Loop back to 31. Accounts for day being 1 or 0 (result of empty string)\n\n        if (numericDay < 2) {\n          return '31';\n        }\n\n        if (numericDay > 1) {\n          numericDay -= 1;\n          return numericDay < 10 ? '0'.concat(numericDay.toString()) : numericDay.toString();\n        }\n\n        return day;\n      }\n\n      return null;\n    }\n    /**\n     * Increments a year to it's next value\n     * @param {String} year Year to increment\n     * @return {String} Returns a string representation of the value of the passed in day after it's incremented\n     */\n\n  }, {\n    key: \"incrementYear\",\n    value: function incrementYear(year) {\n      // Handle empty input value\n      if (year === '') {\n        return '1';\n      }\n\n      if (year) {\n        var numericYear = Number(year); // Loop back to 1 if incrementing year from \"9999\"\n\n        if (numericYear === 9999) {\n          return '1';\n        }\n\n        if (numericYear < 9999) {\n          numericYear += 1;\n          return numericYear.toString();\n        }\n\n        return year;\n      }\n\n      return null;\n    }\n    /**\n     * Decrements a year to it's next value\n     * @param {String} year Year to decrement\n     * @return {String} Returns a string representation of the value of the passed in year after it's decremented\n     */\n\n  }, {\n    key: \"decrementYear\",\n    value: function decrementYear(year) {\n      // Handle empty input value\n      if (year === '') {\n        return '9999';\n      }\n\n      if (year) {\n        var numericYear = Number(year); // Loop back to 9999. Accounts for day being 1 or 0 (result of empty string)\n\n        if (numericYear < 2) {\n          return '9999';\n        }\n\n        if (numericYear > 1) {\n          numericYear -= 1;\n          return numericYear.toString();\n        }\n\n        return year;\n      }\n\n      return null;\n    }\n    /**\n     * @param {String} value String to split month value from\n     * @return {String} Month value generated from input value\n     */\n\n  }, {\n    key: \"splitMonth\",\n    value: function splitMonth(value) {\n      if (typeof value === 'string') {\n        var splitValue = value.split('-');\n\n        if (splitValue[1]) {\n          if (splitValue[1].length === 2) {\n            var month = Number(splitValue[1]);\n\n            if (month >= 1 && month < 13) {\n              return splitValue[1];\n            }\n          }\n        }\n\n        return '';\n      }\n\n      return '';\n    }\n    /**\n     * @param {String} value String to split day value from\n     * @return {String} Day value generated from input value\n     */\n\n  }, {\n    key: \"splitDay\",\n    value: function splitDay(value) {\n      if (typeof value === 'string') {\n        var splitValue = value.split('-');\n\n        if (splitValue[2]) {\n          var day = Number(splitValue[2]); // If day is valid month day\n\n          if (day >= 1 && day < 32) {\n            return splitValue[2];\n          } // Zero handling, accounts for typing 0, followed by positive number\n\n\n          if (splitValue[2] === '0') {\n            return splitValue[2];\n          } // Allow \"00\" to pass through\n\n\n          if (splitValue[2] === '00') {\n            return splitValue[2];\n          }\n        }\n\n        return '';\n      }\n\n      return '';\n    }\n    /**\n     * @param {String} value String to split year value from\n     * @return {String} Year value generated from input value\n     */\n\n  }, {\n    key: \"splitYear\",\n    value: function splitYear(value) {\n      if (typeof value === 'string') {\n        var splitValue = value.split('-');\n\n        if (splitValue.length && !Number.isNaN(parseFloat(splitValue[0]))) {\n          return splitValue[0];\n        }\n\n        return '';\n      }\n\n      return '';\n    }\n    /**\n     * Ensures the passed in value is in the accepted date value format: YYYY-MM-DD\n     * @param {string} value The date to validate\n     */\n\n  }, {\n    key: \"acceptedDateValue\",\n    value: function acceptedDateValue(value) {\n      return /^([0-9][0-9][0-9][0-9])-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/.test(value);\n    }\n    /**\n     * Computes the display format based of of the displayFormat prop and the current locale\n     * Defaults to 'day-month-year'\n     * @param {string} displayFormat The displayFormat prop\n     * @param {string} locale The intl.locale value\n     * @returns {string} 'month-day-year' or 'day-month-year' depending on computed value\n     */\n\n  }, {\n    key: \"computedDisplayFormat\",\n    value: function computedDisplayFormat(displayFormat, locale) {\n      if (displayFormat === 'month-day-year') {\n        return 'month-day-year';\n      }\n\n      if (displayFormat === 'day-month-year') {\n        return 'day-month-year';\n      }\n\n      if (locale === 'en' || locale === 'en-US') {\n        return 'month-day-year';\n      }\n\n      return 'day-month-year';\n    }\n  }]);\n  return DateInputUtil;\n}();\n\nDateInputUtil.inputType = {\n  YEAR: 0,\n  MONTH: 1,\n  DAY: 2\n};\nvar _default = DateInputUtil;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-input\":\"DateInput-module__date-input___133c5\",\"month-select-wrapper\":\"DateInput-module__month-select-wrapper___33jlZ\",\"focused\":\"DateInput-module__focused___34Iux\",\"disabled\":\"DateInput-module__disabled___2-7uo\",\"error\":\"DateInput-module__error___iJCw4\",\"incomplete\":\"DateInput-module__incomplete___2iZ0K\",\"month-select\":\"DateInput-module__month-select___3ZDrA\",\"is-placeholder\":\"DateInput-module__is-placeholder___1fy2g\",\"date-input-day\":\"DateInput-module__date-input-day___1uf-0\",\"date-input-year\":\"DateInput-module__date-input-year___2R1vI\"};"],"sourceRoot":""}