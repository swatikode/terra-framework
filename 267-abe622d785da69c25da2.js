(window.webpackJsonp=window.webpackJsonp||[]).push([[267],{1005:function(e,t){},1134:function(e){e.exports=JSON.parse('{"name":"terra-application-layout","main":"lib/ApplicationLayout.js","version":"5.24.0","description":"The Terra Application Layout is a responsive, themeable layout for building applications.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","Framework","terra-application-layout","ApplicationLayout","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0","terra-disclosure-manager":"^4.9.0"},"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","react-router-dom":"^5.0.0","terra-application-header-layout":"^3.22.0","terra-application-links":"^6.23.0","terra-application-menu-layout":"^3.18.0","terra-application-name":"^3.23.0","terra-application-utility":"^2.27.0","terra-breakpoints":"^2.0.0","terra-icon":"^3.1.0","terra-modal-manager":"^6.23.0","terra-navigation-layout":"^5.18.0","terra-navigation-side-menu":"^2.24.0","terra-popup":"^6.23.0"},"devDependencies":{"terra-action-header":"^2.0.0","terra-avatar":"^2.0.0","terra-button":"^3.3.0","terra-content-container":"^3.0.0","terra-doc-template":"^2.2.0","terra-image":"^3.0.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},1787:function(e,t,n){"use strict";n.r(t),t.default="# Terra Application Layout\n\nIn addition to the ApplicationLayout component, the package exports an `Utils` object that contains a variety of helper functions and prop type declarations. Included are:\n\n- `propTypes` - An object containing prop type definitions for the configuration objects used by the ApplicationLayout.\n- `helpers` - An object containing helper functions to aid in the creation of ApplicationLayout content.\n- `utilityHelpers` - An object containing helper functions specifically for the creation of Utility menu configuration.\n\n## `propTypes`\n\n- `layoutConifgPropType` - Shape for the `layoutConfig` prop provided to components within the ApplicationLayout.\n- `nameConfigPropType` - Shape for ApplicationLayout's `nameConfig` prop.\n- `navigationItemsPropType` - Shape for ApplicationLayout's `navigationItems` prop.\n- `utilityConfigPropType` - Shape for ApplicationLayout's `utilityConfig` prop.\n\n## `helpers`\n\n- `isSizeCompact` - A function that determines whether or not the given size is considered `compact` or not. This can be used to synchronize component rendering with responsive changes to the ApplicationLayout.\n\n### `utilityHelpers`\n\n- `getDefaultUtilityItems`\n\nA function that generates an array containing the Terra-standard set of utility menu items. This array and its contents match the `menuItems` prop expected by `terra-utility` components and can be provided to them directly.\n\nAn `intl` parameter is required to generate the items, as the translated titles for the default configuration must be retrieved from it. Also required is an object containing user information, as the default menu configuration is user-centric. Finally, additional menu configuration items can be provided to be merged with the default items.\n\n- `defaultKeys` - The set of menu item keys used by the default utility configuration. Values from this object should be used inside custom item configurations as `parentKey` values to appropriately locate the custom items. When selected, selectable items will trigger the `utilityConfig`'s `onChange` function with their associated item key.\n\n|Keys|Description|\n|---|---|\n|`MENU`|Menu page with `USER_INFORMATION`, `SETTINGS`, `HELP`, and `LOG_OUT` as child items.|\n|`USER_INFORMATION`|Menu page with a `CHANGE_PHOTO` child item.|\n|`CHANGE_PHOTO`|Selectable item.|\n|`SETTINGS`|Menu page with `APPEARANCE` and `SECURITY` child items.|\n|`APPEARANCE`|Selectable item.|\n|`SECURITY`|Selectable item.|\n|`HELP`|Menu page with `GETTING_STARTED`, `ABOUT`, and `TERMS_OF_USE` child items.|\n|`GETTING_STARTED`|Selectable item.|\n|`ABOUT`|Selectable item.|\n|`TERMS_OF_USE`|Selectable item.|\n|`LOG_OUT`|Selectable item.|\n\n```jsx\nimport { Utils } from 'terra-application-layout';\nimport Avatar from 'terra-avatar';\n\nconst intl = {}; // Intl should be retrieved from context\n\nconst userData = {\n  name: 'Person, Joe',\n  detail: 'Example Person',\n  photo: <Avatar alt=\"Doe, John\"/>,\n};\n\nconst customUtilityItems = [{\n  key: 'additional-1',\n  title: 'Drill-in Item',\n  childKeys: [\n    'additional-sub-1',\n    'additional-sub-2',\n  ],\n  parentKey: Utils.utilityHelpers.defaultKeys.MENU,\n}, {\n  key: 'additional-sub-1',\n  title: 'Addtional Item 1 - Sub 1',\n  parentKey: 'additional-1',\n}, {\n  key: 'additional-sub-2',\n  title: 'Addtional Item 1 - Sub 2',\n  parentKey: 'additional-1',\n}, {\n  key: 'additional-2',\n  title: 'Custom Checkbox Item',\n  isSelectable: true,\n  parentKey: Utils.utilityHelpers.defaultKeys.MENU,\n}, {\n  key: 'additional-3',\n  contentLocation: Utils.utilityHelpers.locations.FOOTER,\n  title: 'Custom Footer',\n  parentKey: Utils.utilityHelpers.defaultKeys.MENU,\n}];\n\nconst menuItems = Utils.utilityHelpers.getDefaultUtilityItems(intl, userData, customUtilityItems);\n\nconst utilityConfig = {\n  title: 'Doe, John',\n  accessory: <Avatar alt=\"Doe, John\" />,\n  menuItems: menuItems,\n  initialSelectedKey: 'menu',\n  onChange: (event, itemData, disclose) => {\n    /**\n     * This function will be called when items are selected within the utility menu.\n     * The disclose parameter is provided for convenience, but any presentation method\n     * could be used to handle that menu content selection.\n     */\n  },\n};\n```\n"},2300:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),o=i(n(1004)),r=n(1134),s=i(n(1787)),l=function(){return a.default.createElement(o.default,{packageName:r.name,readme:s.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(r.name)})};t.default=l}}]);
//# sourceMappingURL=267-abe622d785da69c25da2.js.map